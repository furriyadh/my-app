module.exports = {

"[project]/node_modules/@tailwindcss/nesting/index.js [postcss] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
let postcss = __turbopack_context__.r("[project]/node_modules/postcss/lib/postcss.js [postcss] (ecmascript)");
let postcssNested = __turbopack_context__.r("[project]/node_modules/postcss-nested/index.js [postcss] (ecmascript)");
module.exports = (opts = postcssNested)=>{
    return {
        postcssPlugin: '@tailwindcss/nesting',
        Once (root, { result }) {
            root.walkAtRules('screen', (rule)=>{
                rule.name = 'media';
                rule.params = `screen(${rule.params})`;
            });
            root.walkAtRules('apply', (rule)=>{
                rule.before(postcss.decl({
                    prop: '__apply',
                    value: rule.params
                }));
                rule.remove();
            });
            let plugin = (()=>{
                if (typeof opts === 'function') {
                    return opts;
                }
                if (typeof opts === 'string') {
                    return (()=>{
                        const e = new Error("Cannot find module as expression is too dynamic");
                        e.code = 'MODULE_NOT_FOUND';
                        throw e;
                    })();
                }
                if (Object.keys(opts).length <= 0) {
                    return postcssNested;
                }
                throw new Error('@tailwindcss/nesting should be loaded with a nesting plugin.');
            })();
            postcss([
                plugin
            ]).process(root, result.opts).sync();
            root.walkDecls('__apply', (decl)=>{
                decl.before(postcss.atRule({
                    name: 'apply',
                    params: decl.value
                }));
                decl.remove();
            });
            return root;
        }
    };
};
module.exports.postcss = true;
}}),
"[project]/node_modules/@tailwindcss/node/dist/esm-cache.loader.mjs [postcss] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "resolve": (()=>o)
});
var __TURBOPACK__imported__module__$5b$externals$5d2f$module__$5b$external$5d$__$28$module$2c$__cjs$29$__ = __turbopack_context__.i("[externals]/module [external] (module, cjs)");
const __TURBOPACK__import$2e$meta__ = {
    get url () {
        return `file://${__turbopack_context__.P("node_modules/@tailwindcss/node/dist/esm-cache.loader.mjs")}`;
    }
};
;
var o = async (a, e, u)=>{
    let r = await u(a, e);
    if (r.url === __TURBOPACK__import$2e$meta__.url || (0, __TURBOPACK__imported__module__$5b$externals$5d2f$module__$5b$external$5d$__$28$module$2c$__cjs$29$__["isBuiltin"])(r.url) || !e.parentURL) return r;
    let t = new URL(e.parentURL).searchParams.get("id");
    if (t === null) return r;
    let l = new URL(r.url);
    return l.searchParams.set("id", t), {
        ...r,
        url: `${l}`
    };
};
;
}}),
"[project]/node_modules/@tailwindcss/node/dist/index.js [postcss] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var Ct = Object.create;
var Q = Object.defineProperty;
var $t = Object.getOwnPropertyDescriptor;
var St = Object.getOwnPropertyNames;
var Nt = Object.getPrototypeOf, Et = Object.prototype.hasOwnProperty;
var Oe = (e, r)=>{
    for(var t in r)Q(e, t, {
        get: r[t],
        enumerable: !0
    });
}, _e = (e, r, t, i)=>{
    if (r && typeof r == "object" || typeof r == "function") for (let n of St(r))!Et.call(e, n) && n !== t && Q(e, n, {
        get: ()=>r[n],
        enumerable: !(i = $t(r, n)) || i.enumerable
    });
    return e;
};
var x = (e, r, t)=>(t = e != null ? Ct(Nt(e)) : {}, _e(r || !e || !e.__esModule ? Q(t, "default", {
        value: e,
        enumerable: !0
    }) : t, e)), Vt = (e)=>_e(Q({}, "__esModule", {
        value: !0
    }), e);
var Br = {};
Oe(Br, {
    Features: ()=>V.Features,
    Instrumentation: ()=>Pe,
    Polyfills: ()=>V.Polyfills,
    __unstable__loadDesignSystem: ()=>Ur,
    compile: ()=>Dr,
    compileAst: ()=>_r,
    env: ()=>X,
    loadModule: ()=>Te,
    normalizePath: ()=>ue,
    optimize: ()=>jr,
    toSourceMap: ()=>Wr
});
module.exports = Vt(Br);
var xt = x(__turbopack_context__.r("[externals]/module [external] (module, cjs)")), At = __turbopack_context__.r("[externals]/url [external] (url, cjs)");
var X = {};
Oe(X, {
    DEBUG: ()=>pe
});
var pe = Tt(process.env.DEBUG);
function Tt(e) {
    if (e === void 0) return !1;
    if (e === "true" || e === "1") return !0;
    if (e === "false" || e === "0") return !1;
    if (e === "*") return !0;
    let r = e.split(",").map((t)=>t.split(":")[0]);
    return r.includes("-tailwindcss") ? !1 : !!r.includes("tailwindcss");
}
var L = x(__turbopack_context__.r("[project]/node_modules/enhanced-resolve/lib/index.js [postcss] (ecmascript)")), mt = __turbopack_context__.r("[project]/node_modules/jiti/lib/jiti.cjs [postcss] (ecmascript)"), ce = x(__turbopack_context__.r("[externals]/fs [external] (fs, cjs)")), Ve = x(__turbopack_context__.r("[externals]/fs/promises [external] (fs/promises, cjs)")), M = x(__turbopack_context__.r("[externals]/path [external] (path, cjs)")), Ne = __turbopack_context__.r("[externals]/url [external] (url, cjs)"), V = __turbopack_context__.r("[project]/node_modules/tailwindcss/dist/lib.js [postcss] (ecmascript)");
var ee = x(__turbopack_context__.r("[externals]/fs/promises [external] (fs/promises, cjs)")), F = x(__turbopack_context__.r("[externals]/path [external] (path, cjs)")), Rt = [
    /import[\s\S]*?['"](.{3,}?)['"]/gi,
    /import[\s\S]*from[\s\S]*?['"](.{3,}?)['"]/gi,
    /export[\s\S]*from[\s\S]*?['"](.{3,}?)['"]/gi,
    /require\(['"`](.+)['"`]\)/gi
], Pt = [
    ".js",
    ".cjs",
    ".mjs"
], Ot = [
    "",
    ".js",
    ".cjs",
    ".mjs",
    ".ts",
    ".cts",
    ".mts",
    ".jsx",
    ".tsx"
], _t = [
    "",
    ".ts",
    ".cts",
    ".mts",
    ".tsx",
    ".js",
    ".cjs",
    ".mjs",
    ".jsx"
];
async function Dt(e, r) {
    for (let t of r){
        let i = `${e}${t}`;
        if ((await ee.default.stat(i).catch(()=>null))?.isFile()) return i;
    }
    for (let t of r){
        let i = `${e}/index${t}`;
        if (await ee.default.access(i).then(()=>!0, ()=>!1)) return i;
    }
    return null;
}
async function De(e, r, t, i) {
    let n = Pt.includes(i) ? Ot : _t, l = await Dt(F.default.resolve(t, r), n);
    if (l === null || e.has(l)) return;
    e.add(l), t = F.default.dirname(l), i = F.default.extname(l);
    let o = await ee.default.readFile(l, "utf-8"), s = [];
    for (let a of Rt)for (let u of o.matchAll(a))u[1].startsWith(".") && s.push(De(e, u[1], t, i));
    await Promise.all(s);
}
async function Ue(e) {
    let r = new Set;
    return await De(r, e, F.default.dirname(e), F.default.extname(e)), Array.from(r);
}
var $e = x(__turbopack_context__.r("[externals]/path [external] (path, cjs)"));
function de(e) {
    return {
        kind: "word",
        value: e
    };
}
function Ut(e, r) {
    return {
        kind: "function",
        value: e,
        nodes: r
    };
}
function Kt(e) {
    return {
        kind: "separator",
        value: e
    };
}
function T(e, r, t = null) {
    for(let i = 0; i < e.length; i++){
        let n = e[i], l = !1, o = 0, s = r(n, {
            parent: t,
            replaceWith (a) {
                l || (l = !0, Array.isArray(a) ? a.length === 0 ? (e.splice(i, 1), o = 0) : a.length === 1 ? (e[i] = a[0], o = 1) : (e.splice(i, 1, ...a), o = a.length) : e[i] = a);
            }
        }) ?? 0;
        if (l) {
            s === 0 ? i-- : i += o - 1;
            continue;
        }
        if (s === 2) return 2;
        if (s !== 1 && n.kind === "function" && T(n.nodes, r, n) === 2) return 2;
    }
}
function E(e) {
    let r = "";
    for (let t of e)switch(t.kind){
        case "word":
        case "separator":
            {
                r += t.value;
                break;
            }
        case "function":
            r += t.value + "(" + E(t.nodes) + ")";
    }
    return r;
}
var Ke = 92, Lt = 41, Le = 58, Ie = 44, It = 34, Fe = 61, ze = 62, je = 60, Me = 10, Ft = 40, zt = 39, We = 47, Be = 32, He = 9;
function A(e) {
    e = e.replaceAll(`\r
`, `
`);
    let r = [], t = [], i = null, n = "", l;
    for(let o = 0; o < e.length; o++){
        let s = e.charCodeAt(o);
        switch(s){
            case Ke:
                {
                    n += e[o] + e[o + 1], o++;
                    break;
                }
            case Le:
            case Ie:
            case Fe:
            case ze:
            case je:
            case Me:
            case We:
            case Be:
            case He:
                {
                    if (n.length > 0) {
                        let c = de(n);
                        i ? i.nodes.push(c) : r.push(c), n = "";
                    }
                    let a = o, u = o + 1;
                    for(; u < e.length && (l = e.charCodeAt(u), !(l !== Le && l !== Ie && l !== Fe && l !== ze && l !== je && l !== Me && l !== We && l !== Be && l !== He)); u++);
                    o = u - 1;
                    let p = Kt(e.slice(a, u));
                    i ? i.nodes.push(p) : r.push(p);
                    break;
                }
            case zt:
            case It:
                {
                    let a = o;
                    for(let u = o + 1; u < e.length; u++)if (l = e.charCodeAt(u), l === Ke) u += 1;
                    else if (l === s) {
                        o = u;
                        break;
                    }
                    n += e.slice(a, o + 1);
                    break;
                }
            case Ft:
                {
                    let a = Ut(n, []);
                    n = "", i ? i.nodes.push(a) : r.push(a), t.push(a), i = a;
                    break;
                }
            case Lt:
                {
                    let a = t.pop();
                    if (n.length > 0) {
                        let u = de(n);
                        a?.nodes.push(u), n = "";
                    }
                    t.length > 0 ? i = t[t.length - 1] : i = null;
                    break;
                }
            default:
                n += String.fromCharCode(s);
        }
    }
    return n.length > 0 && r.push(de(n)), r;
}
var g = class extends Map {
    constructor(t){
        super();
        this.factory = t;
    }
    get(t) {
        let i = super.get(t);
        return i === void 0 && (i = this.factory(t, this), this.set(t, i)), i;
    }
};
var Xr = new Uint8Array(256);
var te = new Uint8Array(256);
function k(e, r) {
    let t = 0, i = [], n = 0, l = e.length, o = r.charCodeAt(0);
    for(let s = 0; s < l; s++){
        let a = e.charCodeAt(s);
        if (t === 0 && a === o) {
            i.push(e.slice(n, s)), n = s + 1;
            continue;
        }
        switch(a){
            case 92:
                s += 1;
                break;
            case 39:
            case 34:
                for(; ++s < l;){
                    let u = e.charCodeAt(s);
                    if (u === 92) {
                        s += 1;
                        continue;
                    }
                    if (u === a) break;
                }
                break;
            case 40:
                te[t] = 41, t++;
                break;
            case 91:
                te[t] = 93, t++;
                break;
            case 123:
                te[t] = 125, t++;
                break;
            case 93:
            case 125:
            case 41:
                t > 0 && a === te[t - 1] && t--;
                break;
        }
    }
    return i.push(e.slice(n)), i;
}
var si = new g((e)=>{
    let r = A(e), t = new Set;
    return T(r, (i, { parent: n })=>{
        let l = n === null ? r : n.nodes ?? [];
        if (i.kind === "word" && (i.value === "+" || i.value === "-" || i.value === "*" || i.value === "/")) {
            let o = l.indexOf(i) ?? -1;
            if (o === -1) return;
            let s = l[o - 1];
            if (s?.kind !== "separator" || s.value !== " ") return;
            let a = l[o + 1];
            if (a?.kind !== "separator" || a.value !== " ") return;
            t.add(s), t.add(a);
        } else i.kind === "separator" && i.value.trim() === "/" ? i.value = "/" : i.kind === "separator" && i.value.length > 0 && i.value.trim() === "" ? (l[0] === i || l[l.length - 1] === i) && t.add(i) : i.kind === "separator" && i.value.trim() === "," && (i.value = ",");
    }), t.size > 0 && T(r, (i, { replaceWith: n })=>{
        t.has(i) && (t.delete(i), n([]));
    }), me(r), E(r);
});
var ui = new g((e)=>{
    let r = A(e);
    return r.length === 3 && r[0].kind === "word" && r[0].value === "&" && r[1].kind === "separator" && r[1].value === ":" && r[2].kind === "function" && r[2].value === "is" ? E(r[2].nodes) : e;
});
function me(e) {
    for (let r of e)switch(r.kind){
        case "function":
            {
                if (r.value === "url" || r.value.endsWith("_url")) {
                    r.value = B(r.value);
                    break;
                }
                if (r.value === "var" || r.value.endsWith("_var") || r.value === "theme" || r.value.endsWith("_theme")) {
                    r.value = B(r.value);
                    for(let t = 0; t < r.nodes.length; t++)me([
                        r.nodes[t]
                    ]);
                    break;
                }
                r.value = B(r.value), me(r.nodes);
                break;
            }
        case "separator":
            r.value = B(r.value);
            break;
        case "word":
            {
                (r.value[0] !== "-" || r.value[1] !== "-") && (r.value = B(r.value));
                break;
            }
        default:
            jt(r);
    }
}
var ci = new g((e)=>{
    let r = A(e);
    return r.length === 1 && r[0].kind === "function" && r[0].value === "var";
});
function jt(e) {
    throw new Error(`Unexpected value: ${e}`);
}
function B(e) {
    return e.replaceAll("_", String.raw`\_`).replaceAll(" ", "_");
}
var R = /[+-]?\d*\.?\d+(?:[eE][+-]?\d+)?/, ki = new RegExp(`^${R.source}$`);
var yi = new RegExp(`^${R.source}%$`);
var bi = new RegExp(`^${R.source}s*/s*${R.source}$`);
var Mt = [
    "cm",
    "mm",
    "Q",
    "in",
    "pc",
    "pt",
    "px",
    "em",
    "ex",
    "ch",
    "rem",
    "lh",
    "rlh",
    "vw",
    "vh",
    "vmin",
    "vmax",
    "vb",
    "vi",
    "svw",
    "svh",
    "lvw",
    "lvh",
    "dvw",
    "dvh",
    "cqw",
    "cqh",
    "cqi",
    "cqb",
    "cqmin",
    "cqmax"
], xi = new RegExp(`^${R.source}(${Mt.join("|")})$`);
var Wt = [
    "deg",
    "rad",
    "grad",
    "turn"
], Ai = new RegExp(`^${R.source}(${Wt.join("|")})$`);
var Ci = new RegExp(`^${R.source} +${R.source} +${R.source}$`);
function b(e) {
    let r = Number(e);
    return Number.isInteger(r) && r >= 0 && String(r) === String(e);
}
function H(e, r) {
    if (r === null) return e;
    let t = Number(r);
    return Number.isNaN(t) || (r = `${t * 100}%`), r === "100%" ? e : `color-mix(in oklab, ${e} ${r}, transparent)`;
}
var Gt = {
    "--alpha": qt,
    "--spacing": Jt,
    "--theme": Yt,
    theme: Zt
};
function qt(e, r, t, ...i) {
    let [n, l] = k(t, "/").map((o)=>o.trim());
    if (!n || !l) throw new Error(`The --alpha(\u2026) function requires a color and an alpha value, e.g.: \`--alpha(${n || "var(--my-color)"} / ${l || "50%"})\``);
    if (i.length > 0) throw new Error(`The --alpha(\u2026) function only accepts one argument, e.g.: \`--alpha(${n || "var(--my-color)"} / ${l || "50%"})\``);
    return H(n, l);
}
function Jt(e, r, t, ...i) {
    if (!t) throw new Error("The --spacing(\u2026) function requires an argument, but received none.");
    if (i.length > 0) throw new Error(`The --spacing(\u2026) function only accepts a single argument, but received ${i.length + 1}.`);
    let n = e.theme.resolve(null, [
        "--spacing"
    ]);
    if (!n) throw new Error("The --spacing(\u2026) function requires that the `--spacing` theme variable exists, but it was not found.");
    return `calc(${n} * ${t})`;
}
function Yt(e, r, t, ...i) {
    if (!t.startsWith("--")) throw new Error("The --theme(\u2026) function can only be used with CSS variables from your theme.");
    let n = !1;
    t.endsWith(" inline") && (n = !0, t = t.slice(0, -7)), r.kind === "at-rule" && (n = !0);
    let l = e.resolveThemeValue(t, n);
    if (!l) {
        if (i.length > 0) return i.join(", ");
        throw new Error(`Could not resolve value for theme function: \`theme(${t})\`. Consider checking if the variable name is correct or provide a fallback value to silence this error.`);
    }
    if (i.length === 0) return l;
    let o = i.join(", ");
    if (o === "initial") return l;
    if (l === "initial") return o;
    if (l.startsWith("var(") || l.startsWith("theme(") || l.startsWith("--theme(")) {
        let s = A(l);
        return Xt(s, o), E(s);
    }
    return l;
}
function Zt(e, r, t, ...i) {
    t = Qt(t);
    let n = e.resolveThemeValue(t);
    if (!n && i.length > 0) return i.join(", ");
    if (!n) throw new Error(`Could not resolve value for theme function: \`theme(${t})\`. Consider checking if the path is correct or provide a fallback value to silence this error.`);
    return n;
}
var Mi = new RegExp(Object.keys(Gt).map((e)=>`${e}\\(`).join("|"));
function Qt(e) {
    if (e[0] !== "'" && e[0] !== '"') return e;
    let r = "", t = e[0];
    for(let i = 1; i < e.length - 1; i++){
        let n = e[i], l = e[i + 1];
        n === "\\" && (l === t || l === "\\") ? (r += l, i++) : r += n;
    }
    return r;
}
function Xt(e, r) {
    T(e, (t)=>{
        if (t.kind === "function" && !(t.value !== "var" && t.value !== "theme" && t.value !== "--theme")) if (t.nodes.length === 1) t.nodes.push({
            kind: "word",
            value: `, ${r}`
        });
        else {
            let i = t.nodes[t.nodes.length - 1];
            i.kind === "word" && i.value === "initial" && (i.value = r);
        }
    });
}
var q = 92, ie = 47, ne = 42, Ze = 34, Qe = 39, or = 58, le = 59, $ = 10, ae = 13, J = 32, oe = 9, Xe = 123, we = 125, be = 40, et = 41, lr = 91, ar = 93, tt = 45, ke = 64, sr = 33;
function Z(e, r) {
    let t = r?.from ? {
        file: r.from,
        code: e
    } : null;
    e[0] === "\uFEFF" && (e = " " + e.slice(1));
    let i = [], n = [], l = [], o = null, s = null, a = "", u = "", p = 0, c;
    for(let f = 0; f < e.length; f++){
        let m = e.charCodeAt(f);
        if (!(m === ae && (c = e.charCodeAt(f + 1), c === $))) if (m === q) a === "" && (p = f), a += e.slice(f, f + 2), f += 1;
        else if (m === ie && e.charCodeAt(f + 1) === ne) {
            let d = f;
            for(let h = f + 2; h < e.length; h++)if (c = e.charCodeAt(h), c === q) h += 1;
            else if (c === ne && e.charCodeAt(h + 1) === ie) {
                f = h + 1;
                break;
            }
            let N = e.slice(d, f + 1);
            if (N.charCodeAt(2) === sr) {
                let h = Ae(N.slice(2, -2));
                n.push(h), t && (h.src = [
                    t,
                    d,
                    f + 1
                ], h.dst = [
                    t,
                    d,
                    f + 1
                ]);
            }
        } else if (m === Qe || m === Ze) {
            let d = rt(e, f, m);
            a += e.slice(f, d + 1), f = d;
        } else {
            if ((m === J || m === $ || m === oe) && (c = e.charCodeAt(f + 1)) && (c === J || c === $ || c === oe || c === ae && (c = e.charCodeAt(f + 2)) && c == $)) continue;
            if (m === $) {
                if (a.length === 0) continue;
                c = a.charCodeAt(a.length - 1), c !== J && c !== $ && c !== oe && (a += " ");
            } else if (m === tt && e.charCodeAt(f + 1) === tt && a.length === 0) {
                let d = "", N = f, h = -1;
                for(let v = f + 2; v < e.length; v++)if (c = e.charCodeAt(v), c === q) v += 1;
                else if (c === Qe || c === Ze) v = rt(e, v, c);
                else if (c === ie && e.charCodeAt(v + 1) === ne) {
                    for(let I = v + 2; I < e.length; I++)if (c = e.charCodeAt(I), c === q) I += 1;
                    else if (c === ne && e.charCodeAt(I + 1) === ie) {
                        v = I + 1;
                        break;
                    }
                } else if (h === -1 && c === or) h = a.length + v - N;
                else if (c === le && d.length === 0) {
                    a += e.slice(N, v), f = v;
                    break;
                } else if (c === be) d += ")";
                else if (c === lr) d += "]";
                else if (c === Xe) d += "}";
                else if ((c === we || e.length - 1 === v) && d.length === 0) {
                    f = v - 1, a += e.slice(N, v);
                    break;
                } else (c === et || c === ar || c === we) && d.length > 0 && e[v] === d[d.length - 1] && (d = d.slice(0, -1));
                let W = ye(a, h);
                if (!W) throw new Error("Invalid custom property, expected a value");
                t && (W.src = [
                    t,
                    N,
                    f
                ], W.dst = [
                    t,
                    N,
                    f
                ]), o ? o.nodes.push(W) : i.push(W), a = "";
            } else if (m === le && a.charCodeAt(0) === ke) s = Y(a), t && (s.src = [
                t,
                p,
                f
            ], s.dst = [
                t,
                p,
                f
            ]), o ? o.nodes.push(s) : i.push(s), a = "", s = null;
            else if (m === le && u[u.length - 1] !== ")") {
                let d = ye(a);
                if (!d) throw a.length === 0 ? new Error("Unexpected semicolon") : new Error(`Invalid declaration: \`${a.trim()}\``);
                t && (d.src = [
                    t,
                    p,
                    f
                ], d.dst = [
                    t,
                    p,
                    f
                ]), o ? o.nodes.push(d) : i.push(d), a = "";
            } else if (m === Xe && u[u.length - 1] !== ")") u += "}", s = O(a.trim()), t && (s.src = [
                t,
                p,
                f
            ], s.dst = [
                t,
                p,
                f
            ]), o && o.nodes.push(s), l.push(o), o = s, a = "", s = null;
            else if (m === we && u[u.length - 1] !== ")") {
                if (u === "") throw new Error("Missing opening {");
                if (u = u.slice(0, -1), a.length > 0) if (a.charCodeAt(0) === ke) s = Y(a), t && (s.src = [
                    t,
                    p,
                    f
                ], s.dst = [
                    t,
                    p,
                    f
                ]), o ? o.nodes.push(s) : i.push(s), a = "", s = null;
                else {
                    let N = a.indexOf(":");
                    if (o) {
                        let h = ye(a, N);
                        if (!h) throw new Error(`Invalid declaration: \`${a.trim()}\``);
                        t && (h.src = [
                            t,
                            p,
                            f
                        ], h.dst = [
                            t,
                            p,
                            f
                        ]), o.nodes.push(h);
                    }
                }
                let d = l.pop() ?? null;
                d === null && o && i.push(o), o = d, a = "", s = null;
            } else if (m === be) u += ")", a += "(";
            else if (m === et) {
                if (u[u.length - 1] !== ")") throw new Error("Missing opening (");
                u = u.slice(0, -1), a += ")";
            } else {
                if (a.length === 0 && (m === J || m === $ || m === oe)) continue;
                a === "" && (p = f), a += String.fromCharCode(m);
            }
        }
    }
    if (a.charCodeAt(0) === ke) {
        let f = Y(a);
        t && (f.src = [
            t,
            p,
            e.length
        ], f.dst = [
            t,
            p,
            e.length
        ]), i.push(f);
    }
    if (u.length > 0 && o) {
        if (o.kind === "rule") throw new Error(`Missing closing } at ${o.selector}`);
        if (o.kind === "at-rule") throw new Error(`Missing closing } at ${o.name} ${o.params}`);
    }
    return n.length > 0 ? n.concat(i) : i;
}
function Y(e, r = []) {
    let t = e, i = "";
    for(let n = 5; n < e.length; n++){
        let l = e.charCodeAt(n);
        if (l === J || l === be) {
            t = e.slice(0, n), i = e.slice(n);
            break;
        }
    }
    return C(t.trim(), i.trim(), r);
}
function ye(e, r = e.indexOf(":")) {
    if (r === -1) return null;
    let t = e.indexOf("!important", r + 1);
    return P(e.slice(0, r).trim(), e.slice(r + 1, t === -1 ? e.length : t).trim(), t !== -1);
}
function rt(e, r, t) {
    let i;
    for(let n = r + 1; n < e.length; n++)if (i = e.charCodeAt(n), i === q) n += 1;
    else {
        if (i === t) return n;
        if (i === le && (e.charCodeAt(n + 1) === $ || e.charCodeAt(n + 1) === ae && e.charCodeAt(n + 2) === $)) throw new Error(`Unterminated string: ${e.slice(r, n + 1) + String.fromCharCode(t)}`);
        if (i === $ || i === ae && e.charCodeAt(n + 1) === $) throw new Error(`Unterminated string: ${e.slice(r, n) + String.fromCharCode(t)}`);
    }
    return r;
}
var Ce = {
    inherit: "inherit",
    current: "currentcolor",
    transparent: "transparent",
    black: "#000",
    white: "#fff",
    slate: {
        50: "oklch(98.4% 0.003 247.858)",
        100: "oklch(96.8% 0.007 247.896)",
        200: "oklch(92.9% 0.013 255.508)",
        300: "oklch(86.9% 0.022 252.894)",
        400: "oklch(70.4% 0.04 256.788)",
        500: "oklch(55.4% 0.046 257.417)",
        600: "oklch(44.6% 0.043 257.281)",
        700: "oklch(37.2% 0.044 257.287)",
        800: "oklch(27.9% 0.041 260.031)",
        900: "oklch(20.8% 0.042 265.755)",
        950: "oklch(12.9% 0.042 264.695)"
    },
    gray: {
        50: "oklch(98.5% 0.002 247.839)",
        100: "oklch(96.7% 0.003 264.542)",
        200: "oklch(92.8% 0.006 264.531)",
        300: "oklch(87.2% 0.01 258.338)",
        400: "oklch(70.7% 0.022 261.325)",
        500: "oklch(55.1% 0.027 264.364)",
        600: "oklch(44.6% 0.03 256.802)",
        700: "oklch(37.3% 0.034 259.733)",
        800: "oklch(27.8% 0.033 256.848)",
        900: "oklch(21% 0.034 264.665)",
        950: "oklch(13% 0.028 261.692)"
    },
    zinc: {
        50: "oklch(98.5% 0 0)",
        100: "oklch(96.7% 0.001 286.375)",
        200: "oklch(92% 0.004 286.32)",
        300: "oklch(87.1% 0.006 286.286)",
        400: "oklch(70.5% 0.015 286.067)",
        500: "oklch(55.2% 0.016 285.938)",
        600: "oklch(44.2% 0.017 285.786)",
        700: "oklch(37% 0.013 285.805)",
        800: "oklch(27.4% 0.006 286.033)",
        900: "oklch(21% 0.006 285.885)",
        950: "oklch(14.1% 0.005 285.823)"
    },
    neutral: {
        50: "oklch(98.5% 0 0)",
        100: "oklch(97% 0 0)",
        200: "oklch(92.2% 0 0)",
        300: "oklch(87% 0 0)",
        400: "oklch(70.8% 0 0)",
        500: "oklch(55.6% 0 0)",
        600: "oklch(43.9% 0 0)",
        700: "oklch(37.1% 0 0)",
        800: "oklch(26.9% 0 0)",
        900: "oklch(20.5% 0 0)",
        950: "oklch(14.5% 0 0)"
    },
    stone: {
        50: "oklch(98.5% 0.001 106.423)",
        100: "oklch(97% 0.001 106.424)",
        200: "oklch(92.3% 0.003 48.717)",
        300: "oklch(86.9% 0.005 56.366)",
        400: "oklch(70.9% 0.01 56.259)",
        500: "oklch(55.3% 0.013 58.071)",
        600: "oklch(44.4% 0.011 73.639)",
        700: "oklch(37.4% 0.01 67.558)",
        800: "oklch(26.8% 0.007 34.298)",
        900: "oklch(21.6% 0.006 56.043)",
        950: "oklch(14.7% 0.004 49.25)"
    },
    red: {
        50: "oklch(97.1% 0.013 17.38)",
        100: "oklch(93.6% 0.032 17.717)",
        200: "oklch(88.5% 0.062 18.334)",
        300: "oklch(80.8% 0.114 19.571)",
        400: "oklch(70.4% 0.191 22.216)",
        500: "oklch(63.7% 0.237 25.331)",
        600: "oklch(57.7% 0.245 27.325)",
        700: "oklch(50.5% 0.213 27.518)",
        800: "oklch(44.4% 0.177 26.899)",
        900: "oklch(39.6% 0.141 25.723)",
        950: "oklch(25.8% 0.092 26.042)"
    },
    orange: {
        50: "oklch(98% 0.016 73.684)",
        100: "oklch(95.4% 0.038 75.164)",
        200: "oklch(90.1% 0.076 70.697)",
        300: "oklch(83.7% 0.128 66.29)",
        400: "oklch(75% 0.183 55.934)",
        500: "oklch(70.5% 0.213 47.604)",
        600: "oklch(64.6% 0.222 41.116)",
        700: "oklch(55.3% 0.195 38.402)",
        800: "oklch(47% 0.157 37.304)",
        900: "oklch(40.8% 0.123 38.172)",
        950: "oklch(26.6% 0.079 36.259)"
    },
    amber: {
        50: "oklch(98.7% 0.022 95.277)",
        100: "oklch(96.2% 0.059 95.617)",
        200: "oklch(92.4% 0.12 95.746)",
        300: "oklch(87.9% 0.169 91.605)",
        400: "oklch(82.8% 0.189 84.429)",
        500: "oklch(76.9% 0.188 70.08)",
        600: "oklch(66.6% 0.179 58.318)",
        700: "oklch(55.5% 0.163 48.998)",
        800: "oklch(47.3% 0.137 46.201)",
        900: "oklch(41.4% 0.112 45.904)",
        950: "oklch(27.9% 0.077 45.635)"
    },
    yellow: {
        50: "oklch(98.7% 0.026 102.212)",
        100: "oklch(97.3% 0.071 103.193)",
        200: "oklch(94.5% 0.129 101.54)",
        300: "oklch(90.5% 0.182 98.111)",
        400: "oklch(85.2% 0.199 91.936)",
        500: "oklch(79.5% 0.184 86.047)",
        600: "oklch(68.1% 0.162 75.834)",
        700: "oklch(55.4% 0.135 66.442)",
        800: "oklch(47.6% 0.114 61.907)",
        900: "oklch(42.1% 0.095 57.708)",
        950: "oklch(28.6% 0.066 53.813)"
    },
    lime: {
        50: "oklch(98.6% 0.031 120.757)",
        100: "oklch(96.7% 0.067 122.328)",
        200: "oklch(93.8% 0.127 124.321)",
        300: "oklch(89.7% 0.196 126.665)",
        400: "oklch(84.1% 0.238 128.85)",
        500: "oklch(76.8% 0.233 130.85)",
        600: "oklch(64.8% 0.2 131.684)",
        700: "oklch(53.2% 0.157 131.589)",
        800: "oklch(45.3% 0.124 130.933)",
        900: "oklch(40.5% 0.101 131.063)",
        950: "oklch(27.4% 0.072 132.109)"
    },
    green: {
        50: "oklch(98.2% 0.018 155.826)",
        100: "oklch(96.2% 0.044 156.743)",
        200: "oklch(92.5% 0.084 155.995)",
        300: "oklch(87.1% 0.15 154.449)",
        400: "oklch(79.2% 0.209 151.711)",
        500: "oklch(72.3% 0.219 149.579)",
        600: "oklch(62.7% 0.194 149.214)",
        700: "oklch(52.7% 0.154 150.069)",
        800: "oklch(44.8% 0.119 151.328)",
        900: "oklch(39.3% 0.095 152.535)",
        950: "oklch(26.6% 0.065 152.934)"
    },
    emerald: {
        50: "oklch(97.9% 0.021 166.113)",
        100: "oklch(95% 0.052 163.051)",
        200: "oklch(90.5% 0.093 164.15)",
        300: "oklch(84.5% 0.143 164.978)",
        400: "oklch(76.5% 0.177 163.223)",
        500: "oklch(69.6% 0.17 162.48)",
        600: "oklch(59.6% 0.145 163.225)",
        700: "oklch(50.8% 0.118 165.612)",
        800: "oklch(43.2% 0.095 166.913)",
        900: "oklch(37.8% 0.077 168.94)",
        950: "oklch(26.2% 0.051 172.552)"
    },
    teal: {
        50: "oklch(98.4% 0.014 180.72)",
        100: "oklch(95.3% 0.051 180.801)",
        200: "oklch(91% 0.096 180.426)",
        300: "oklch(85.5% 0.138 181.071)",
        400: "oklch(77.7% 0.152 181.912)",
        500: "oklch(70.4% 0.14 182.503)",
        600: "oklch(60% 0.118 184.704)",
        700: "oklch(51.1% 0.096 186.391)",
        800: "oklch(43.7% 0.078 188.216)",
        900: "oklch(38.6% 0.063 188.416)",
        950: "oklch(27.7% 0.046 192.524)"
    },
    cyan: {
        50: "oklch(98.4% 0.019 200.873)",
        100: "oklch(95.6% 0.045 203.388)",
        200: "oklch(91.7% 0.08 205.041)",
        300: "oklch(86.5% 0.127 207.078)",
        400: "oklch(78.9% 0.154 211.53)",
        500: "oklch(71.5% 0.143 215.221)",
        600: "oklch(60.9% 0.126 221.723)",
        700: "oklch(52% 0.105 223.128)",
        800: "oklch(45% 0.085 224.283)",
        900: "oklch(39.8% 0.07 227.392)",
        950: "oklch(30.2% 0.056 229.695)"
    },
    sky: {
        50: "oklch(97.7% 0.013 236.62)",
        100: "oklch(95.1% 0.026 236.824)",
        200: "oklch(90.1% 0.058 230.902)",
        300: "oklch(82.8% 0.111 230.318)",
        400: "oklch(74.6% 0.16 232.661)",
        500: "oklch(68.5% 0.169 237.323)",
        600: "oklch(58.8% 0.158 241.966)",
        700: "oklch(50% 0.134 242.749)",
        800: "oklch(44.3% 0.11 240.79)",
        900: "oklch(39.1% 0.09 240.876)",
        950: "oklch(29.3% 0.066 243.157)"
    },
    blue: {
        50: "oklch(97% 0.014 254.604)",
        100: "oklch(93.2% 0.032 255.585)",
        200: "oklch(88.2% 0.059 254.128)",
        300: "oklch(80.9% 0.105 251.813)",
        400: "oklch(70.7% 0.165 254.624)",
        500: "oklch(62.3% 0.214 259.815)",
        600: "oklch(54.6% 0.245 262.881)",
        700: "oklch(48.8% 0.243 264.376)",
        800: "oklch(42.4% 0.199 265.638)",
        900: "oklch(37.9% 0.146 265.522)",
        950: "oklch(28.2% 0.091 267.935)"
    },
    indigo: {
        50: "oklch(96.2% 0.018 272.314)",
        100: "oklch(93% 0.034 272.788)",
        200: "oklch(87% 0.065 274.039)",
        300: "oklch(78.5% 0.115 274.713)",
        400: "oklch(67.3% 0.182 276.935)",
        500: "oklch(58.5% 0.233 277.117)",
        600: "oklch(51.1% 0.262 276.966)",
        700: "oklch(45.7% 0.24 277.023)",
        800: "oklch(39.8% 0.195 277.366)",
        900: "oklch(35.9% 0.144 278.697)",
        950: "oklch(25.7% 0.09 281.288)"
    },
    violet: {
        50: "oklch(96.9% 0.016 293.756)",
        100: "oklch(94.3% 0.029 294.588)",
        200: "oklch(89.4% 0.057 293.283)",
        300: "oklch(81.1% 0.111 293.571)",
        400: "oklch(70.2% 0.183 293.541)",
        500: "oklch(60.6% 0.25 292.717)",
        600: "oklch(54.1% 0.281 293.009)",
        700: "oklch(49.1% 0.27 292.581)",
        800: "oklch(43.2% 0.232 292.759)",
        900: "oklch(38% 0.189 293.745)",
        950: "oklch(28.3% 0.141 291.089)"
    },
    purple: {
        50: "oklch(97.7% 0.014 308.299)",
        100: "oklch(94.6% 0.033 307.174)",
        200: "oklch(90.2% 0.063 306.703)",
        300: "oklch(82.7% 0.119 306.383)",
        400: "oklch(71.4% 0.203 305.504)",
        500: "oklch(62.7% 0.265 303.9)",
        600: "oklch(55.8% 0.288 302.321)",
        700: "oklch(49.6% 0.265 301.924)",
        800: "oklch(43.8% 0.218 303.724)",
        900: "oklch(38.1% 0.176 304.987)",
        950: "oklch(29.1% 0.149 302.717)"
    },
    fuchsia: {
        50: "oklch(97.7% 0.017 320.058)",
        100: "oklch(95.2% 0.037 318.852)",
        200: "oklch(90.3% 0.076 319.62)",
        300: "oklch(83.3% 0.145 321.434)",
        400: "oklch(74% 0.238 322.16)",
        500: "oklch(66.7% 0.295 322.15)",
        600: "oklch(59.1% 0.293 322.896)",
        700: "oklch(51.8% 0.253 323.949)",
        800: "oklch(45.2% 0.211 324.591)",
        900: "oklch(40.1% 0.17 325.612)",
        950: "oklch(29.3% 0.136 325.661)"
    },
    pink: {
        50: "oklch(97.1% 0.014 343.198)",
        100: "oklch(94.8% 0.028 342.258)",
        200: "oklch(89.9% 0.061 343.231)",
        300: "oklch(82.3% 0.12 346.018)",
        400: "oklch(71.8% 0.202 349.761)",
        500: "oklch(65.6% 0.241 354.308)",
        600: "oklch(59.2% 0.249 0.584)",
        700: "oklch(52.5% 0.223 3.958)",
        800: "oklch(45.9% 0.187 3.815)",
        900: "oklch(40.8% 0.153 2.432)",
        950: "oklch(28.4% 0.109 3.907)"
    },
    rose: {
        50: "oklch(96.9% 0.015 12.422)",
        100: "oklch(94.1% 0.03 12.58)",
        200: "oklch(89.2% 0.058 10.001)",
        300: "oklch(81% 0.117 11.638)",
        400: "oklch(71.2% 0.194 13.428)",
        500: "oklch(64.5% 0.246 16.439)",
        600: "oklch(58.6% 0.253 17.585)",
        700: "oklch(51.4% 0.222 16.935)",
        800: "oklch(45.5% 0.188 13.697)",
        900: "oklch(41% 0.159 10.272)",
        950: "oklch(27.1% 0.105 12.094)"
    }
};
function K(e) {
    return {
        __BARE_VALUE__: e
    };
}
var S = K((e)=>{
    if (b(e.value)) return e.value;
}), w = K((e)=>{
    if (b(e.value)) return `${e.value}%`;
}), _ = K((e)=>{
    if (b(e.value)) return `${e.value}px`;
}), nt = K((e)=>{
    if (b(e.value)) return `${e.value}ms`;
}), se = K((e)=>{
    if (b(e.value)) return `${e.value}deg`;
}), hr = K((e)=>{
    if (e.fraction === null) return;
    let [r, t] = k(e.fraction, "/");
    if (!(!b(r) || !b(t))) return e.fraction;
}), ot = K((e)=>{
    if (b(Number(e.value))) return `repeat(${e.value}, minmax(0, 1fr))`;
}), vr = {
    accentColor: ({ theme: e })=>e("colors"),
    animation: {
        none: "none",
        spin: "spin 1s linear infinite",
        ping: "ping 1s cubic-bezier(0, 0, 0.2, 1) infinite",
        pulse: "pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite",
        bounce: "bounce 1s infinite"
    },
    aria: {
        busy: 'busy="true"',
        checked: 'checked="true"',
        disabled: 'disabled="true"',
        expanded: 'expanded="true"',
        hidden: 'hidden="true"',
        pressed: 'pressed="true"',
        readonly: 'readonly="true"',
        required: 'required="true"',
        selected: 'selected="true"'
    },
    aspectRatio: {
        auto: "auto",
        square: "1 / 1",
        video: "16 / 9",
        ...hr
    },
    backdropBlur: ({ theme: e })=>e("blur"),
    backdropBrightness: ({ theme: e })=>({
            ...e("brightness"),
            ...w
        }),
    backdropContrast: ({ theme: e })=>({
            ...e("contrast"),
            ...w
        }),
    backdropGrayscale: ({ theme: e })=>({
            ...e("grayscale"),
            ...w
        }),
    backdropHueRotate: ({ theme: e })=>({
            ...e("hueRotate"),
            ...se
        }),
    backdropInvert: ({ theme: e })=>({
            ...e("invert"),
            ...w
        }),
    backdropOpacity: ({ theme: e })=>({
            ...e("opacity"),
            ...w
        }),
    backdropSaturate: ({ theme: e })=>({
            ...e("saturate"),
            ...w
        }),
    backdropSepia: ({ theme: e })=>({
            ...e("sepia"),
            ...w
        }),
    backgroundColor: ({ theme: e })=>e("colors"),
    backgroundImage: {
        none: "none",
        "gradient-to-t": "linear-gradient(to top, var(--tw-gradient-stops))",
        "gradient-to-tr": "linear-gradient(to top right, var(--tw-gradient-stops))",
        "gradient-to-r": "linear-gradient(to right, var(--tw-gradient-stops))",
        "gradient-to-br": "linear-gradient(to bottom right, var(--tw-gradient-stops))",
        "gradient-to-b": "linear-gradient(to bottom, var(--tw-gradient-stops))",
        "gradient-to-bl": "linear-gradient(to bottom left, var(--tw-gradient-stops))",
        "gradient-to-l": "linear-gradient(to left, var(--tw-gradient-stops))",
        "gradient-to-tl": "linear-gradient(to top left, var(--tw-gradient-stops))"
    },
    backgroundOpacity: ({ theme: e })=>e("opacity"),
    backgroundPosition: {
        bottom: "bottom",
        center: "center",
        left: "left",
        "left-bottom": "left bottom",
        "left-top": "left top",
        right: "right",
        "right-bottom": "right bottom",
        "right-top": "right top",
        top: "top"
    },
    backgroundSize: {
        auto: "auto",
        cover: "cover",
        contain: "contain"
    },
    blur: {
        0: "0",
        none: "",
        sm: "4px",
        DEFAULT: "8px",
        md: "12px",
        lg: "16px",
        xl: "24px",
        "2xl": "40px",
        "3xl": "64px"
    },
    borderColor: ({ theme: e })=>({
            DEFAULT: "currentcolor",
            ...e("colors")
        }),
    borderOpacity: ({ theme: e })=>e("opacity"),
    borderRadius: {
        none: "0px",
        sm: "0.125rem",
        DEFAULT: "0.25rem",
        md: "0.375rem",
        lg: "0.5rem",
        xl: "0.75rem",
        "2xl": "1rem",
        "3xl": "1.5rem",
        full: "9999px"
    },
    borderSpacing: ({ theme: e })=>e("spacing"),
    borderWidth: {
        DEFAULT: "1px",
        0: "0px",
        2: "2px",
        4: "4px",
        8: "8px",
        ..._
    },
    boxShadow: {
        sm: "0 1px 2px 0 rgb(0 0 0 / 0.05)",
        DEFAULT: "0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1)",
        md: "0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1)",
        lg: "0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)",
        xl: "0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1)",
        "2xl": "0 25px 50px -12px rgb(0 0 0 / 0.25)",
        inner: "inset 0 2px 4px 0 rgb(0 0 0 / 0.05)",
        none: "none"
    },
    boxShadowColor: ({ theme: e })=>e("colors"),
    brightness: {
        0: "0",
        50: ".5",
        75: ".75",
        90: ".9",
        95: ".95",
        100: "1",
        105: "1.05",
        110: "1.1",
        125: "1.25",
        150: "1.5",
        200: "2",
        ...w
    },
    caretColor: ({ theme: e })=>e("colors"),
    colors: ()=>({
            ...Ce
        }),
    columns: {
        auto: "auto",
        1: "1",
        2: "2",
        3: "3",
        4: "4",
        5: "5",
        6: "6",
        7: "7",
        8: "8",
        9: "9",
        10: "10",
        11: "11",
        12: "12",
        "3xs": "16rem",
        "2xs": "18rem",
        xs: "20rem",
        sm: "24rem",
        md: "28rem",
        lg: "32rem",
        xl: "36rem",
        "2xl": "42rem",
        "3xl": "48rem",
        "4xl": "56rem",
        "5xl": "64rem",
        "6xl": "72rem",
        "7xl": "80rem",
        ...S
    },
    container: {},
    content: {
        none: "none"
    },
    contrast: {
        0: "0",
        50: ".5",
        75: ".75",
        100: "1",
        125: "1.25",
        150: "1.5",
        200: "2",
        ...w
    },
    cursor: {
        auto: "auto",
        default: "default",
        pointer: "pointer",
        wait: "wait",
        text: "text",
        move: "move",
        help: "help",
        "not-allowed": "not-allowed",
        none: "none",
        "context-menu": "context-menu",
        progress: "progress",
        cell: "cell",
        crosshair: "crosshair",
        "vertical-text": "vertical-text",
        alias: "alias",
        copy: "copy",
        "no-drop": "no-drop",
        grab: "grab",
        grabbing: "grabbing",
        "all-scroll": "all-scroll",
        "col-resize": "col-resize",
        "row-resize": "row-resize",
        "n-resize": "n-resize",
        "e-resize": "e-resize",
        "s-resize": "s-resize",
        "w-resize": "w-resize",
        "ne-resize": "ne-resize",
        "nw-resize": "nw-resize",
        "se-resize": "se-resize",
        "sw-resize": "sw-resize",
        "ew-resize": "ew-resize",
        "ns-resize": "ns-resize",
        "nesw-resize": "nesw-resize",
        "nwse-resize": "nwse-resize",
        "zoom-in": "zoom-in",
        "zoom-out": "zoom-out"
    },
    divideColor: ({ theme: e })=>e("borderColor"),
    divideOpacity: ({ theme: e })=>e("borderOpacity"),
    divideWidth: ({ theme: e })=>({
            ...e("borderWidth"),
            ..._
        }),
    dropShadow: {
        sm: "0 1px 1px rgb(0 0 0 / 0.05)",
        DEFAULT: [
            "0 1px 2px rgb(0 0 0 / 0.1)",
            "0 1px 1px rgb(0 0 0 / 0.06)"
        ],
        md: [
            "0 4px 3px rgb(0 0 0 / 0.07)",
            "0 2px 2px rgb(0 0 0 / 0.06)"
        ],
        lg: [
            "0 10px 8px rgb(0 0 0 / 0.04)",
            "0 4px 3px rgb(0 0 0 / 0.1)"
        ],
        xl: [
            "0 20px 13px rgb(0 0 0 / 0.03)",
            "0 8px 5px rgb(0 0 0 / 0.08)"
        ],
        "2xl": "0 25px 25px rgb(0 0 0 / 0.15)",
        none: "0 0 #0000"
    },
    fill: ({ theme: e })=>e("colors"),
    flex: {
        1: "1 1 0%",
        auto: "1 1 auto",
        initial: "0 1 auto",
        none: "none"
    },
    flexBasis: ({ theme: e })=>({
            auto: "auto",
            "1/2": "50%",
            "1/3": "33.333333%",
            "2/3": "66.666667%",
            "1/4": "25%",
            "2/4": "50%",
            "3/4": "75%",
            "1/5": "20%",
            "2/5": "40%",
            "3/5": "60%",
            "4/5": "80%",
            "1/6": "16.666667%",
            "2/6": "33.333333%",
            "3/6": "50%",
            "4/6": "66.666667%",
            "5/6": "83.333333%",
            "1/12": "8.333333%",
            "2/12": "16.666667%",
            "3/12": "25%",
            "4/12": "33.333333%",
            "5/12": "41.666667%",
            "6/12": "50%",
            "7/12": "58.333333%",
            "8/12": "66.666667%",
            "9/12": "75%",
            "10/12": "83.333333%",
            "11/12": "91.666667%",
            full: "100%",
            ...e("spacing")
        }),
    flexGrow: {
        0: "0",
        DEFAULT: "1",
        ...S
    },
    flexShrink: {
        0: "0",
        DEFAULT: "1",
        ...S
    },
    fontFamily: {
        sans: [
            "ui-sans-serif",
            "system-ui",
            "sans-serif",
            '"Apple Color Emoji"',
            '"Segoe UI Emoji"',
            '"Segoe UI Symbol"',
            '"Noto Color Emoji"'
        ],
        serif: [
            "ui-serif",
            "Georgia",
            "Cambria",
            '"Times New Roman"',
            "Times",
            "serif"
        ],
        mono: [
            "ui-monospace",
            "SFMono-Regular",
            "Menlo",
            "Monaco",
            "Consolas",
            '"Liberation Mono"',
            '"Courier New"',
            "monospace"
        ]
    },
    fontSize: {
        xs: [
            "0.75rem",
            {
                lineHeight: "1rem"
            }
        ],
        sm: [
            "0.875rem",
            {
                lineHeight: "1.25rem"
            }
        ],
        base: [
            "1rem",
            {
                lineHeight: "1.5rem"
            }
        ],
        lg: [
            "1.125rem",
            {
                lineHeight: "1.75rem"
            }
        ],
        xl: [
            "1.25rem",
            {
                lineHeight: "1.75rem"
            }
        ],
        "2xl": [
            "1.5rem",
            {
                lineHeight: "2rem"
            }
        ],
        "3xl": [
            "1.875rem",
            {
                lineHeight: "2.25rem"
            }
        ],
        "4xl": [
            "2.25rem",
            {
                lineHeight: "2.5rem"
            }
        ],
        "5xl": [
            "3rem",
            {
                lineHeight: "1"
            }
        ],
        "6xl": [
            "3.75rem",
            {
                lineHeight: "1"
            }
        ],
        "7xl": [
            "4.5rem",
            {
                lineHeight: "1"
            }
        ],
        "8xl": [
            "6rem",
            {
                lineHeight: "1"
            }
        ],
        "9xl": [
            "8rem",
            {
                lineHeight: "1"
            }
        ]
    },
    fontWeight: {
        thin: "100",
        extralight: "200",
        light: "300",
        normal: "400",
        medium: "500",
        semibold: "600",
        bold: "700",
        extrabold: "800",
        black: "900"
    },
    gap: ({ theme: e })=>e("spacing"),
    gradientColorStops: ({ theme: e })=>e("colors"),
    gradientColorStopPositions: {
        "0%": "0%",
        "5%": "5%",
        "10%": "10%",
        "15%": "15%",
        "20%": "20%",
        "25%": "25%",
        "30%": "30%",
        "35%": "35%",
        "40%": "40%",
        "45%": "45%",
        "50%": "50%",
        "55%": "55%",
        "60%": "60%",
        "65%": "65%",
        "70%": "70%",
        "75%": "75%",
        "80%": "80%",
        "85%": "85%",
        "90%": "90%",
        "95%": "95%",
        "100%": "100%",
        ...w
    },
    grayscale: {
        0: "0",
        DEFAULT: "100%",
        ...w
    },
    gridAutoColumns: {
        auto: "auto",
        min: "min-content",
        max: "max-content",
        fr: "minmax(0, 1fr)"
    },
    gridAutoRows: {
        auto: "auto",
        min: "min-content",
        max: "max-content",
        fr: "minmax(0, 1fr)"
    },
    gridColumn: {
        auto: "auto",
        "span-1": "span 1 / span 1",
        "span-2": "span 2 / span 2",
        "span-3": "span 3 / span 3",
        "span-4": "span 4 / span 4",
        "span-5": "span 5 / span 5",
        "span-6": "span 6 / span 6",
        "span-7": "span 7 / span 7",
        "span-8": "span 8 / span 8",
        "span-9": "span 9 / span 9",
        "span-10": "span 10 / span 10",
        "span-11": "span 11 / span 11",
        "span-12": "span 12 / span 12",
        "span-full": "1 / -1"
    },
    gridColumnEnd: {
        auto: "auto",
        1: "1",
        2: "2",
        3: "3",
        4: "4",
        5: "5",
        6: "6",
        7: "7",
        8: "8",
        9: "9",
        10: "10",
        11: "11",
        12: "12",
        13: "13",
        ...S
    },
    gridColumnStart: {
        auto: "auto",
        1: "1",
        2: "2",
        3: "3",
        4: "4",
        5: "5",
        6: "6",
        7: "7",
        8: "8",
        9: "9",
        10: "10",
        11: "11",
        12: "12",
        13: "13",
        ...S
    },
    gridRow: {
        auto: "auto",
        "span-1": "span 1 / span 1",
        "span-2": "span 2 / span 2",
        "span-3": "span 3 / span 3",
        "span-4": "span 4 / span 4",
        "span-5": "span 5 / span 5",
        "span-6": "span 6 / span 6",
        "span-7": "span 7 / span 7",
        "span-8": "span 8 / span 8",
        "span-9": "span 9 / span 9",
        "span-10": "span 10 / span 10",
        "span-11": "span 11 / span 11",
        "span-12": "span 12 / span 12",
        "span-full": "1 / -1"
    },
    gridRowEnd: {
        auto: "auto",
        1: "1",
        2: "2",
        3: "3",
        4: "4",
        5: "5",
        6: "6",
        7: "7",
        8: "8",
        9: "9",
        10: "10",
        11: "11",
        12: "12",
        13: "13",
        ...S
    },
    gridRowStart: {
        auto: "auto",
        1: "1",
        2: "2",
        3: "3",
        4: "4",
        5: "5",
        6: "6",
        7: "7",
        8: "8",
        9: "9",
        10: "10",
        11: "11",
        12: "12",
        13: "13",
        ...S
    },
    gridTemplateColumns: {
        none: "none",
        subgrid: "subgrid",
        1: "repeat(1, minmax(0, 1fr))",
        2: "repeat(2, minmax(0, 1fr))",
        3: "repeat(3, minmax(0, 1fr))",
        4: "repeat(4, minmax(0, 1fr))",
        5: "repeat(5, minmax(0, 1fr))",
        6: "repeat(6, minmax(0, 1fr))",
        7: "repeat(7, minmax(0, 1fr))",
        8: "repeat(8, minmax(0, 1fr))",
        9: "repeat(9, minmax(0, 1fr))",
        10: "repeat(10, minmax(0, 1fr))",
        11: "repeat(11, minmax(0, 1fr))",
        12: "repeat(12, minmax(0, 1fr))",
        ...ot
    },
    gridTemplateRows: {
        none: "none",
        subgrid: "subgrid",
        1: "repeat(1, minmax(0, 1fr))",
        2: "repeat(2, minmax(0, 1fr))",
        3: "repeat(3, minmax(0, 1fr))",
        4: "repeat(4, minmax(0, 1fr))",
        5: "repeat(5, minmax(0, 1fr))",
        6: "repeat(6, minmax(0, 1fr))",
        7: "repeat(7, minmax(0, 1fr))",
        8: "repeat(8, minmax(0, 1fr))",
        9: "repeat(9, minmax(0, 1fr))",
        10: "repeat(10, minmax(0, 1fr))",
        11: "repeat(11, minmax(0, 1fr))",
        12: "repeat(12, minmax(0, 1fr))",
        ...ot
    },
    height: ({ theme: e })=>({
            auto: "auto",
            "1/2": "50%",
            "1/3": "33.333333%",
            "2/3": "66.666667%",
            "1/4": "25%",
            "2/4": "50%",
            "3/4": "75%",
            "1/5": "20%",
            "2/5": "40%",
            "3/5": "60%",
            "4/5": "80%",
            "1/6": "16.666667%",
            "2/6": "33.333333%",
            "3/6": "50%",
            "4/6": "66.666667%",
            "5/6": "83.333333%",
            full: "100%",
            screen: "100vh",
            svh: "100svh",
            lvh: "100lvh",
            dvh: "100dvh",
            min: "min-content",
            max: "max-content",
            fit: "fit-content",
            ...e("spacing")
        }),
    hueRotate: {
        0: "0deg",
        15: "15deg",
        30: "30deg",
        60: "60deg",
        90: "90deg",
        180: "180deg",
        ...se
    },
    inset: ({ theme: e })=>({
            auto: "auto",
            "1/2": "50%",
            "1/3": "33.333333%",
            "2/3": "66.666667%",
            "1/4": "25%",
            "2/4": "50%",
            "3/4": "75%",
            full: "100%",
            ...e("spacing")
        }),
    invert: {
        0: "0",
        DEFAULT: "100%",
        ...w
    },
    keyframes: {
        spin: {
            to: {
                transform: "rotate(360deg)"
            }
        },
        ping: {
            "75%, 100%": {
                transform: "scale(2)",
                opacity: "0"
            }
        },
        pulse: {
            "50%": {
                opacity: ".5"
            }
        },
        bounce: {
            "0%, 100%": {
                transform: "translateY(-25%)",
                animationTimingFunction: "cubic-bezier(0.8,0,1,1)"
            },
            "50%": {
                transform: "none",
                animationTimingFunction: "cubic-bezier(0,0,0.2,1)"
            }
        }
    },
    letterSpacing: {
        tighter: "-0.05em",
        tight: "-0.025em",
        normal: "0em",
        wide: "0.025em",
        wider: "0.05em",
        widest: "0.1em"
    },
    lineHeight: {
        none: "1",
        tight: "1.25",
        snug: "1.375",
        normal: "1.5",
        relaxed: "1.625",
        loose: "2",
        3: ".75rem",
        4: "1rem",
        5: "1.25rem",
        6: "1.5rem",
        7: "1.75rem",
        8: "2rem",
        9: "2.25rem",
        10: "2.5rem"
    },
    listStyleType: {
        none: "none",
        disc: "disc",
        decimal: "decimal"
    },
    listStyleImage: {
        none: "none"
    },
    margin: ({ theme: e })=>({
            auto: "auto",
            ...e("spacing")
        }),
    lineClamp: {
        1: "1",
        2: "2",
        3: "3",
        4: "4",
        5: "5",
        6: "6",
        ...S
    },
    maxHeight: ({ theme: e })=>({
            none: "none",
            full: "100%",
            screen: "100vh",
            svh: "100svh",
            lvh: "100lvh",
            dvh: "100dvh",
            min: "min-content",
            max: "max-content",
            fit: "fit-content",
            ...e("spacing")
        }),
    maxWidth: ({ theme: e })=>({
            none: "none",
            xs: "20rem",
            sm: "24rem",
            md: "28rem",
            lg: "32rem",
            xl: "36rem",
            "2xl": "42rem",
            "3xl": "48rem",
            "4xl": "56rem",
            "5xl": "64rem",
            "6xl": "72rem",
            "7xl": "80rem",
            full: "100%",
            min: "min-content",
            max: "max-content",
            fit: "fit-content",
            prose: "65ch",
            ...e("spacing")
        }),
    minHeight: ({ theme: e })=>({
            full: "100%",
            screen: "100vh",
            svh: "100svh",
            lvh: "100lvh",
            dvh: "100dvh",
            min: "min-content",
            max: "max-content",
            fit: "fit-content",
            ...e("spacing")
        }),
    minWidth: ({ theme: e })=>({
            full: "100%",
            min: "min-content",
            max: "max-content",
            fit: "fit-content",
            ...e("spacing")
        }),
    objectPosition: {
        bottom: "bottom",
        center: "center",
        left: "left",
        "left-bottom": "left bottom",
        "left-top": "left top",
        right: "right",
        "right-bottom": "right bottom",
        "right-top": "right top",
        top: "top"
    },
    opacity: {
        0: "0",
        5: "0.05",
        10: "0.1",
        15: "0.15",
        20: "0.2",
        25: "0.25",
        30: "0.3",
        35: "0.35",
        40: "0.4",
        45: "0.45",
        50: "0.5",
        55: "0.55",
        60: "0.6",
        65: "0.65",
        70: "0.7",
        75: "0.75",
        80: "0.8",
        85: "0.85",
        90: "0.9",
        95: "0.95",
        100: "1",
        ...w
    },
    order: {
        first: "-9999",
        last: "9999",
        none: "0",
        1: "1",
        2: "2",
        3: "3",
        4: "4",
        5: "5",
        6: "6",
        7: "7",
        8: "8",
        9: "9",
        10: "10",
        11: "11",
        12: "12",
        ...S
    },
    outlineColor: ({ theme: e })=>e("colors"),
    outlineOffset: {
        0: "0px",
        1: "1px",
        2: "2px",
        4: "4px",
        8: "8px",
        ..._
    },
    outlineWidth: {
        0: "0px",
        1: "1px",
        2: "2px",
        4: "4px",
        8: "8px",
        ..._
    },
    padding: ({ theme: e })=>e("spacing"),
    placeholderColor: ({ theme: e })=>e("colors"),
    placeholderOpacity: ({ theme: e })=>e("opacity"),
    ringColor: ({ theme: e })=>({
            DEFAULT: "currentcolor",
            ...e("colors")
        }),
    ringOffsetColor: ({ theme: e })=>e("colors"),
    ringOffsetWidth: {
        0: "0px",
        1: "1px",
        2: "2px",
        4: "4px",
        8: "8px",
        ..._
    },
    ringOpacity: ({ theme: e })=>({
            DEFAULT: "0.5",
            ...e("opacity")
        }),
    ringWidth: {
        DEFAULT: "3px",
        0: "0px",
        1: "1px",
        2: "2px",
        4: "4px",
        8: "8px",
        ..._
    },
    rotate: {
        0: "0deg",
        1: "1deg",
        2: "2deg",
        3: "3deg",
        6: "6deg",
        12: "12deg",
        45: "45deg",
        90: "90deg",
        180: "180deg",
        ...se
    },
    saturate: {
        0: "0",
        50: ".5",
        100: "1",
        150: "1.5",
        200: "2",
        ...w
    },
    scale: {
        0: "0",
        50: ".5",
        75: ".75",
        90: ".9",
        95: ".95",
        100: "1",
        105: "1.05",
        110: "1.1",
        125: "1.25",
        150: "1.5",
        ...w
    },
    screens: {
        sm: "40rem",
        md: "48rem",
        lg: "64rem",
        xl: "80rem",
        "2xl": "96rem"
    },
    scrollMargin: ({ theme: e })=>e("spacing"),
    scrollPadding: ({ theme: e })=>e("spacing"),
    sepia: {
        0: "0",
        DEFAULT: "100%",
        ...w
    },
    skew: {
        0: "0deg",
        1: "1deg",
        2: "2deg",
        3: "3deg",
        6: "6deg",
        12: "12deg",
        ...se
    },
    space: ({ theme: e })=>e("spacing"),
    spacing: {
        px: "1px",
        0: "0px",
        .5: "0.125rem",
        1: "0.25rem",
        1.5: "0.375rem",
        2: "0.5rem",
        2.5: "0.625rem",
        3: "0.75rem",
        3.5: "0.875rem",
        4: "1rem",
        5: "1.25rem",
        6: "1.5rem",
        7: "1.75rem",
        8: "2rem",
        9: "2.25rem",
        10: "2.5rem",
        11: "2.75rem",
        12: "3rem",
        14: "3.5rem",
        16: "4rem",
        20: "5rem",
        24: "6rem",
        28: "7rem",
        32: "8rem",
        36: "9rem",
        40: "10rem",
        44: "11rem",
        48: "12rem",
        52: "13rem",
        56: "14rem",
        60: "15rem",
        64: "16rem",
        72: "18rem",
        80: "20rem",
        96: "24rem"
    },
    stroke: ({ theme: e })=>({
            none: "none",
            ...e("colors")
        }),
    strokeWidth: {
        0: "0",
        1: "1",
        2: "2",
        ...S
    },
    supports: {},
    data: {},
    textColor: ({ theme: e })=>e("colors"),
    textDecorationColor: ({ theme: e })=>e("colors"),
    textDecorationThickness: {
        auto: "auto",
        "from-font": "from-font",
        0: "0px",
        1: "1px",
        2: "2px",
        4: "4px",
        8: "8px",
        ..._
    },
    textIndent: ({ theme: e })=>e("spacing"),
    textOpacity: ({ theme: e })=>e("opacity"),
    textUnderlineOffset: {
        auto: "auto",
        0: "0px",
        1: "1px",
        2: "2px",
        4: "4px",
        8: "8px",
        ..._
    },
    transformOrigin: {
        center: "center",
        top: "top",
        "top-right": "top right",
        right: "right",
        "bottom-right": "bottom right",
        bottom: "bottom",
        "bottom-left": "bottom left",
        left: "left",
        "top-left": "top left"
    },
    transitionDelay: {
        0: "0s",
        75: "75ms",
        100: "100ms",
        150: "150ms",
        200: "200ms",
        300: "300ms",
        500: "500ms",
        700: "700ms",
        1e3: "1000ms",
        ...nt
    },
    transitionDuration: {
        DEFAULT: "150ms",
        0: "0s",
        75: "75ms",
        100: "100ms",
        150: "150ms",
        200: "200ms",
        300: "300ms",
        500: "500ms",
        700: "700ms",
        1e3: "1000ms",
        ...nt
    },
    transitionProperty: {
        none: "none",
        all: "all",
        DEFAULT: "color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter",
        colors: "color, background-color, border-color, outline-color, text-decoration-color, fill, stroke",
        opacity: "opacity",
        shadow: "box-shadow",
        transform: "transform"
    },
    transitionTimingFunction: {
        DEFAULT: "cubic-bezier(0.4, 0, 0.2, 1)",
        linear: "linear",
        in: "cubic-bezier(0.4, 0, 1, 1)",
        out: "cubic-bezier(0, 0, 0.2, 1)",
        "in-out": "cubic-bezier(0.4, 0, 0.2, 1)"
    },
    translate: ({ theme: e })=>({
            "1/2": "50%",
            "1/3": "33.333333%",
            "2/3": "66.666667%",
            "1/4": "25%",
            "2/4": "50%",
            "3/4": "75%",
            full: "100%",
            ...e("spacing")
        }),
    size: ({ theme: e })=>({
            auto: "auto",
            "1/2": "50%",
            "1/3": "33.333333%",
            "2/3": "66.666667%",
            "1/4": "25%",
            "2/4": "50%",
            "3/4": "75%",
            "1/5": "20%",
            "2/5": "40%",
            "3/5": "60%",
            "4/5": "80%",
            "1/6": "16.666667%",
            "2/6": "33.333333%",
            "3/6": "50%",
            "4/6": "66.666667%",
            "5/6": "83.333333%",
            "1/12": "8.333333%",
            "2/12": "16.666667%",
            "3/12": "25%",
            "4/12": "33.333333%",
            "5/12": "41.666667%",
            "6/12": "50%",
            "7/12": "58.333333%",
            "8/12": "66.666667%",
            "9/12": "75%",
            "10/12": "83.333333%",
            "11/12": "91.666667%",
            full: "100%",
            min: "min-content",
            max: "max-content",
            fit: "fit-content",
            ...e("spacing")
        }),
    width: ({ theme: e })=>({
            auto: "auto",
            "1/2": "50%",
            "1/3": "33.333333%",
            "2/3": "66.666667%",
            "1/4": "25%",
            "2/4": "50%",
            "3/4": "75%",
            "1/5": "20%",
            "2/5": "40%",
            "3/5": "60%",
            "4/5": "80%",
            "1/6": "16.666667%",
            "2/6": "33.333333%",
            "3/6": "50%",
            "4/6": "66.666667%",
            "5/6": "83.333333%",
            "1/12": "8.333333%",
            "2/12": "16.666667%",
            "3/12": "25%",
            "4/12": "33.333333%",
            "5/12": "41.666667%",
            "6/12": "50%",
            "7/12": "58.333333%",
            "8/12": "66.666667%",
            "9/12": "75%",
            "10/12": "83.333333%",
            "11/12": "91.666667%",
            full: "100%",
            screen: "100vw",
            svw: "100svw",
            lvw: "100lvw",
            dvw: "100dvw",
            min: "min-content",
            max: "max-content",
            fit: "fit-content",
            ...e("spacing")
        }),
    willChange: {
        auto: "auto",
        scroll: "scroll-position",
        contents: "contents",
        transform: "transform"
    },
    zIndex: {
        auto: "auto",
        0: "0",
        10: "10",
        20: "20",
        30: "30",
        40: "40",
        50: "50",
        ...S
    }
};
var wr = 64;
function z(e, r = []) {
    return {
        kind: "rule",
        selector: e,
        nodes: r
    };
}
function C(e, r = "", t = []) {
    return {
        kind: "at-rule",
        name: e,
        params: r,
        nodes: t
    };
}
function O(e, r = []) {
    return e.charCodeAt(0) === wr ? Y(e, r) : z(e, r);
}
function P(e, r, t = !1) {
    return {
        kind: "declaration",
        property: e,
        value: r,
        important: t
    };
}
function Ae(e) {
    return {
        kind: "comment",
        value: e
    };
}
function y(e, r, t = [], i = {}) {
    for(let n = 0; n < e.length; n++){
        let l = e[n], o = t[t.length - 1] ?? null;
        if (l.kind === "context") {
            if (y(l.nodes, r, t, {
                ...i,
                ...l.context
            }) === 2) return 2;
            continue;
        }
        t.push(l);
        let s = !1, a = 0, u = r(l, {
            parent: o,
            context: i,
            path: t,
            replaceWith (p) {
                s || (s = !0, Array.isArray(p) ? p.length === 0 ? (e.splice(n, 1), a = 0) : p.length === 1 ? (e[n] = p[0], a = 1) : (e.splice(n, 1, ...p), a = p.length) : (e[n] = p, a = 1));
            }
        }) ?? 0;
        if (t.pop(), s) {
            u === 0 ? n-- : n += a - 1;
            continue;
        }
        if (u === 2) return 2;
        if (u !== 1 && "nodes" in l) {
            t.push(l);
            let p = y(l.nodes, r, t, i);
            if (t.pop(), p === 2) return 2;
        }
    }
}
function j(e, r) {
    let t = 0, i = {
        file: null,
        code: ""
    };
    function n(o, s = 0) {
        let a = "", u = "  ".repeat(s);
        if (o.kind === "declaration") {
            if (a += `${u}${o.property}: ${o.value}${o.important ? " !important" : ""};
`, r) {
                t += u.length;
                let p = t;
                t += o.property.length, t += 2, t += o.value?.length ?? 0, o.important && (t += 11);
                let c = t;
                t += 2, o.dst = [
                    i,
                    p,
                    c
                ];
            }
        } else if (o.kind === "rule") {
            if (a += `${u}${o.selector} {
`, r) {
                t += u.length;
                let p = t;
                t += o.selector.length, t += 1;
                let c = t;
                o.dst = [
                    i,
                    p,
                    c
                ], t += 2;
            }
            for (let p of o.nodes)a += n(p, s + 1);
            a += `${u}}
`, r && (t += u.length, t += 2);
        } else if (o.kind === "at-rule") {
            if (o.nodes.length === 0) {
                let p = `${u}${o.name} ${o.params};
`;
                if (r) {
                    t += u.length;
                    let c = t;
                    t += o.name.length, t += 1, t += o.params.length;
                    let f = t;
                    t += 2, o.dst = [
                        i,
                        c,
                        f
                    ];
                }
                return p;
            }
            if (a += `${u}${o.name}${o.params ? ` ${o.params} ` : " "}{
`, r) {
                t += u.length;
                let p = t;
                t += o.name.length, o.params && (t += 1, t += o.params.length), t += 1;
                let c = t;
                o.dst = [
                    i,
                    p,
                    c
                ], t += 2;
            }
            for (let p of o.nodes)a += n(p, s + 1);
            a += `${u}}
`, r && (t += u.length, t += 2);
        } else if (o.kind === "comment") {
            if (a += `${u}/*${o.value}*/
`, r) {
                t += u.length;
                let p = t;
                t += 2 + o.value.length + 2;
                let c = t;
                o.dst = [
                    i,
                    p,
                    c
                ], t += 1;
            }
        } else if (o.kind === "context" || o.kind === "at-root") return "";
        return a;
    }
    let l = "";
    for (let o of e)l += n(o, 0);
    return i.code = l, l;
}
function kr(e, r) {
    if (typeof e != "string") throw new TypeError("expected path to be a string");
    if (e === "\\" || e === "/") return "/";
    var t = e.length;
    if (t <= 1) return e;
    var i = "";
    if (t > 4 && e[3] === "\\") {
        var n = e[2];
        (n === "?" || n === ".") && e.slice(0, 2) === "\\\\" && (e = e.slice(2), i = "//");
    }
    var l = e.split(/[/\\]+/);
    return r !== !1 && l[l.length - 1] === "" && l.pop(), i + l.join("/");
}
function ue(e) {
    let r = kr(e);
    return e.startsWith("\\\\") && r.startsWith("/") && !r.startsWith("//") ? `/${r}` : r;
}
var Se = /(?<!@import\s+)(?<=^|[^\w\-\u0080-\uffff])url\((\s*('[^']+'|"[^"]+")\s*|[^'")]+)\)/, lt = /(?<=image-set\()((?:[\w-]{1,256}\([^)]*\)|[^)])*)(?=\))/, yr = /(?:gradient|element|cross-fade|image)\(/, br = /^\s*data:/i, xr = /^([a-z]+:)?\/\//, Ar = /^[A-Z_][.\w-]*\(/i, Cr = /(?:^|\s)(?<url>[\w-]+\([^)]*\)|"[^"]*"|'[^']*'|[^,]\S*[^,])\s*(?:\s(?<descriptor>\w[^,]+))?(?:,|$)/g, $r = /(?<!\\)"/g, Sr = /(?: |\\t|\\n|\\f|\\r)+/g, Nr = (e)=>br.test(e), Er = (e)=>xr.test(e);
async function at({ css: e, base: r, root: t }) {
    if (!e.includes("url(") && !e.includes("image-set(")) return e;
    let i = Z(e), n = [];
    function l(o) {
        if (o[0] === "/") return o;
        let s = $e.posix.join(ue(r), o), a = $e.posix.relative(ue(t), s);
        return a.startsWith(".") || (a = "./" + a), a;
    }
    return y(i, (o)=>{
        if (o.kind !== "declaration" || !o.value) return;
        let s = Se.test(o.value), a = lt.test(o.value);
        if (s || a) {
            let u = a ? Vr : st;
            n.push(u(o.value, l).then((p)=>{
                o.value = p;
            }));
        }
    }), n.length && await Promise.all(n), j(i);
}
function st(e, r) {
    return ct(e, Se, async (t)=>{
        let [i, n] = t;
        return await ut(n.trim(), i, r);
    });
}
async function Vr(e, r) {
    return await ct(e, lt, async (t)=>{
        let [, i] = t;
        return await Rr(i, async ({ url: l })=>Se.test(l) ? await st(l, r) : yr.test(l) ? l : await ut(l, l, r));
    });
}
async function ut(e, r, t, i = "url") {
    let n = "", l = e[0];
    if ((l === '"' || l === "'") && (n = l, e = e.slice(1, -1)), Tr(e)) return r;
    let o = await t(e);
    return n === "" && o !== encodeURI(o) && (n = '"'), n === "'" && o.includes("'") && (n = '"'), n === '"' && o.includes('"') && (o = o.replace($r, '\\"')), `${i}(${n}${o}${n})`;
}
function Tr(e, r) {
    return Er(e) || Nr(e) || !e[0].match(/[\.a-zA-Z0-9_]/) || Ar.test(e);
}
function Rr(e, r) {
    return Promise.all(Pr(e).map(async ({ url: t, descriptor: i })=>({
            url: await r({
                url: t,
                descriptor: i
            }),
            descriptor: i
        }))).then(Or);
}
function Pr(e) {
    let r = e.trim().replace(Sr, " ").replace(/\r?\n/, "").replace(/,\s+/, ", ").replaceAll(/\s+/g, " ").matchAll(Cr);
    return Array.from(r, ({ groups: t })=>({
            url: t?.url?.trim() ?? "",
            descriptor: t?.descriptor?.trim() ?? ""
        })).filter(({ url: t })=>!!t);
}
function Or(e) {
    return e.map(({ url: r, descriptor: t })=>r + (t ? ` ${t}` : "")).join(", ");
}
async function ct(e, r, t) {
    let i, n = e, l = "";
    for(; i = r.exec(n);)l += n.slice(0, i.index), l += await t(i), n = n.slice(i.index + i[0].length);
    return l += n, l;
}
var zr = {};
function gt({ base: e, from: r, polyfills: t, onDependency: i, shouldRewriteUrls: n, customCssResolver: l, customJsResolver: o }) {
    return {
        base: e,
        polyfills: t,
        from: r,
        async loadModule (s, a) {
            return Te(s, a, i, o);
        },
        async loadStylesheet (s, a) {
            let u = await vt(s, a, i, l);
            return n && (u.content = await at({
                css: u.content,
                root: e,
                base: u.base
            })), u;
        }
    };
}
async function ht(e, r) {
    if (e.root && e.root !== "none") {
        let t = /[*{]/, i = [];
        for (let l of e.root.pattern.split("/")){
            if (t.test(l)) break;
            i.push(l);
        }
        if (!await Ve.default.stat(M.default.resolve(r, i.join("/"))).then((l)=>l.isDirectory()).catch(()=>!1)) throw new Error(`The \`source(${e.root.pattern})\` does not exist`);
    }
}
async function _r(e, r) {
    let t = await (0, V.compileAst)(e, gt(r));
    return await ht(t, r.base), t;
}
async function Dr(e, r) {
    let t = await (0, V.compile)(e, gt(r));
    return await ht(t, r.base), t;
}
async function Ur(e, { base: r }) {
    return (0, V.__unstable__loadDesignSystem)(e, {
        base: r,
        async loadModule (t, i) {
            return Te(t, i, ()=>{});
        },
        async loadStylesheet (t, i) {
            return vt(t, i, ()=>{});
        }
    });
}
async function Te(e, r, t, i) {
    if (e[0] !== ".") {
        let s = await dt(e, r, i);
        if (!s) throw new Error(`Could not resolve '${e}' from '${r}'`);
        let a = await pt((0, Ne.pathToFileURL)(s).href);
        return {
            path: s,
            base: M.default.dirname(s),
            module: a.default ?? a
        };
    }
    let n = await dt(e, r, i);
    if (!n) throw new Error(`Could not resolve '${e}' from '${r}'`);
    let [l, o] = await Promise.all([
        pt((0, Ne.pathToFileURL)(n).href + "?id=" + Date.now()),
        Ue(n)
    ]);
    for (let s of o)t(s);
    return {
        path: n,
        base: M.default.dirname(n),
        module: l.default ?? l
    };
}
async function vt(e, r, t, i) {
    let n = await Lr(e, r, i);
    if (!n) throw new Error(`Could not resolve '${e}' from '${r}'`);
    if (t(n), typeof globalThis.__tw_readFile == "function") {
        let o = await globalThis.__tw_readFile(n, "utf-8");
        if (o) return {
            path: n,
            base: M.default.dirname(n),
            content: o
        };
    }
    let l = await Ve.default.readFile(n, "utf-8");
    return {
        path: n,
        base: M.default.dirname(n),
        content: l
    };
}
var ft = null;
async function pt(e) {
    if (typeof globalThis.__tw_load == "function") {
        let r = await globalThis.__tw_load(e);
        if (r) return r;
    }
    try {
        return await Promise.resolve().then(()=>{
            const e = new Error("Cannot find module as expression is too dynamic");
            e.code = 'MODULE_NOT_FOUND';
            throw e;
        });
    } catch  {
        return ft ??= (0, mt.createJiti)(zr.url, {
            moduleCache: !1,
            fsCache: !1
        }), await ft.import(e);
    }
}
var Re = [
    "node_modules",
    ...process.env.NODE_PATH ? [
        process.env.NODE_PATH
    ] : []
], Kr = L.default.ResolverFactory.createResolver({
    fileSystem: new L.default.CachedInputFileSystem(ce.default, 4e3),
    useSyncFileSystemCalls: !0,
    extensions: [
        ".css"
    ],
    mainFields: [
        "style"
    ],
    conditionNames: [
        "style"
    ],
    modules: Re
});
async function Lr(e, r, t) {
    if (typeof globalThis.__tw_resolve == "function") {
        let i = globalThis.__tw_resolve(e, r);
        if (i) return Promise.resolve(i);
    }
    if (t) {
        let i = await t(e, r);
        if (i) return i;
    }
    return Ee(Kr, e, r);
}
var Ir = L.default.ResolverFactory.createResolver({
    fileSystem: new L.default.CachedInputFileSystem(ce.default, 4e3),
    useSyncFileSystemCalls: !0,
    extensions: [
        ".js",
        ".json",
        ".node",
        ".ts"
    ],
    conditionNames: [
        "node",
        "import"
    ],
    modules: Re
}), Fr = L.default.ResolverFactory.createResolver({
    fileSystem: new L.default.CachedInputFileSystem(ce.default, 4e3),
    useSyncFileSystemCalls: !0,
    extensions: [
        ".js",
        ".json",
        ".node",
        ".ts"
    ],
    conditionNames: [
        "node",
        "require"
    ],
    modules: Re
});
async function dt(e, r, t) {
    if (typeof globalThis.__tw_resolve == "function") {
        let i = globalThis.__tw_resolve(e, r);
        if (i) return Promise.resolve(i);
    }
    if (t) {
        let i = await t(e, r);
        if (i) return i;
    }
    return Ee(Ir, e, r).catch(()=>Ee(Fr, e, r));
}
function Ee(e, r, t) {
    return new Promise((i, n)=>e.resolve({}, t, r, {}, (l, o)=>{
            if (l) return n(l);
            i(o);
        }));
}
Symbol.dispose ??= Symbol("Symbol.dispose");
Symbol.asyncDispose ??= Symbol("Symbol.asyncDispose");
var Pe = class {
    constructor(r = (t)=>void process.stderr.write(`${t}
`)){
        this.defaultFlush = r;
    }
    #r = new g(()=>({
            value: 0
        }));
    #t = new g(()=>({
            value: 0n
        }));
    #e = [];
    hit(r) {
        this.#r.get(r).value++;
    }
    start(r) {
        let t = this.#e.map((n)=>n.label).join("//"), i = `${t}${t.length === 0 ? "" : "//"}${r}`;
        this.#r.get(i).value++, this.#t.get(i), this.#e.push({
            id: i,
            label: r,
            namespace: t,
            value: process.hrtime.bigint()
        });
    }
    end(r) {
        let t = process.hrtime.bigint();
        if (this.#e[this.#e.length - 1].label !== r) throw new Error(`Mismatched timer label: \`${r}\`, expected \`${this.#e[this.#e.length - 1].label}\``);
        let i = this.#e.pop(), n = t - i.value;
        this.#t.get(i.id).value += n;
    }
    reset() {
        this.#r.clear(), this.#t.clear(), this.#e.splice(0);
    }
    report(r = this.defaultFlush) {
        let t = [], i = !1;
        for(let o = this.#e.length - 1; o >= 0; o--)this.end(this.#e[o].label);
        for (let [o, { value: s }] of this.#r.entries()){
            if (this.#t.has(o)) continue;
            t.length === 0 && (i = !0, t.push("Hits:"));
            let a = o.split("//").length;
            t.push(`${"  ".repeat(a)}${o} ${fe(wt(`\xD7 ${s}`))}`);
        }
        this.#t.size > 0 && i && t.push(`
Timers:`);
        let n = -1 / 0, l = new Map;
        for (let [o, { value: s }] of this.#t){
            let a = `${(Number(s) / 1e6).toFixed(2)}ms`;
            l.set(o, a), n = Math.max(n, a.length);
        }
        for (let o of this.#t.keys()){
            let s = o.split("//").length;
            t.push(`${fe(`[${l.get(o).padStart(n, " ")}]`)}${"  ".repeat(s - 1)}${s === 1 ? " " : fe(" \u21B3 ")}${o.split("//").pop()} ${this.#r.get(o).value === 1 ? "" : fe(wt(`\xD7 ${this.#r.get(o).value}`))}`.trimEnd());
        }
        r(`
${t.join(`
`)}
`), this.reset();
    }
    [Symbol.dispose]() {
        pe && this.report();
    }
};
function fe(e) {
    return `\x1B[2m${e}\x1B[22m`;
}
function wt(e) {
    return `\x1B[34m${e}\x1B[39m`;
}
var kt = x(__turbopack_context__.r("[project]/node_modules/@ampproject/remapping/dist/remapping.umd.js [postcss] (ecmascript)")), D = __turbopack_context__.r("[project]/node_modules/lightningcss/node/index.js [postcss] (ecmascript)"), yt = x(__turbopack_context__.r("[project]/node_modules/magic-string/dist/magic-string.cjs.js [postcss] (ecmascript)"));
function jr(e, { file: r = "input.css", minify: t = !1, map: i } = {}) {
    function n(a, u) {
        return (0, D.transform)({
            filename: r,
            code: a,
            minify: t,
            sourceMap: typeof u < "u",
            inputSourceMap: u,
            drafts: {
                customMedia: !0
            },
            nonStandard: {
                deepSelectorCombinator: !0
            },
            include: D.Features.Nesting | D.Features.MediaQueries,
            exclude: D.Features.LogicalProperties | D.Features.DirSelector | D.Features.LightDark,
            targets: {
                safari: 16 << 16 | 1024,
                ios_saf: 16 << 16 | 1024,
                firefox: 8388608,
                chrome: 7274496
            },
            errorRecovery: !0
        });
    }
    let l = n(Buffer.from(e), i);
    i = l.map?.toString(), l = n(l.code, i), i = l.map?.toString();
    let o = l.code.toString(), s = new yt.default(o);
    if (s.replaceAll("@media not (", "@media not all and ("), i !== void 0 && s.hasChanged()) {
        let a = s.generateMap({
            source: "original",
            hires: "boundary"
        }).toString();
        i = (0, kt.default)([
            a,
            i
        ], ()=>null).toString();
    }
    return o = s.toString(), {
        code: o,
        map: i
    };
}
var bt = __turbopack_context__.r("[project]/node_modules/source-map-js/source-map.js [postcss] (ecmascript)");
function Mr(e) {
    let r = new bt.SourceMapGenerator, t = 1, i = new g((n)=>({
            url: n?.url ?? `<unknown ${t++}>`,
            content: n?.content ?? "<none>"
        }));
    for (let n of e.mappings){
        let l = i.get(n.originalPosition?.source ?? null);
        r.addMapping({
            generated: n.generatedPosition,
            original: n.originalPosition,
            source: l.url,
            name: n.name
        }), r.setSourceContent(l.url, l.content);
    }
    return r.toString();
}
function Wr(e) {
    let r = typeof e == "string" ? e : Mr(e);
    return {
        raw: r,
        get inline () {
            let t = "";
            return t += "/*# sourceMappingURL=data:application/json;base64,", t += Buffer.from(r, "utf-8").toString("base64"), t += ` */
`, t;
        }
    };
}
process.versions.bun || xt.register?.((0, At.pathToFileURL)("[project]/node_modules/@tailwindcss/node/dist/esm-cache.loader.mjs [postcss] (ecmascript)"));
0 && (module.exports = {
    Features,
    Instrumentation,
    Polyfills,
    __unstable__loadDesignSystem,
    compile,
    compileAst,
    env,
    loadModule,
    normalizePath,
    optimize,
    toSourceMap
});
}}),
"[project]/node_modules/@tailwindcss/node/dist/require-cache.js [postcss] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var i = Object.defineProperty;
var a = Object.getOwnPropertyDescriptor;
var f = Object.getOwnPropertyNames;
var l = Object.prototype.hasOwnProperty;
var n = (r, e)=>{
    for(var t in e)i(r, t, {
        get: e[t],
        enumerable: !0
    });
}, u = (r, e, t, o)=>{
    if (e && typeof e == "object" || typeof e == "function") for (let c of f(e))!l.call(r, c) && c !== t && i(r, c, {
        get: ()=>e[c],
        enumerable: !(o = a(e, c)) || o.enumerable
    });
    return r;
};
var h = (r)=>u(i({}, "__esModule", {
        value: !0
    }), r);
var d = {};
n(d, {
    clearRequireCache: ()=>q
});
module.exports = h(d);
function q(r) {
    for (let e of r)delete __turbopack_context__.c[e];
}
0 && (module.exports = {
    clearRequireCache
});
}}),
"[project]/node_modules/@tailwindcss/oxide/index.js [postcss] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
// prettier-ignore
/* eslint-disable */ // @ts-nocheck
/* auto-generated by NAPI-RS */ const { createRequire } = __turbopack_context__.r("[externals]/node:module [external] (node:module, cjs)");
"TURBOPACK member replacement", __turbopack_context__.t;
const { readFileSync } = __turbopack_context__.r("[externals]/node:fs [external] (node:fs, cjs)");
let nativeBinding = null;
const loadErrors = [];
const isMusl = ()=>{
    let musl = false;
    if ("TURBOPACK compile-time falsy", 0) {
        "TURBOPACK unreachable";
    }
    return musl;
};
const isFileMusl = (f)=>f.includes('libc.musl-') || f.includes('ld-musl-');
const isMuslFromFilesystem = ()=>{
    try {
        return readFileSync('/usr/bin/ldd', 'utf-8').includes('musl');
    } catch  {
        return null;
    }
};
const isMuslFromReport = ()=>{
    let report = null;
    if (typeof process.report?.getReport === 'function') {
        process.report.excludeNetwork = true;
        report = process.report.getReport();
    }
    if (!report) {
        return null;
    }
    if (report.header && report.header.glibcVersionRuntime) {
        return false;
    }
    if (Array.isArray(report.sharedObjects)) {
        if (report.sharedObjects.some(isFileMusl)) {
            return true;
        }
    }
    return false;
};
const isMuslFromChildProcess = ()=>{
    try {
        return __turbopack_context__.r("[externals]/child_process [external] (child_process, cjs)").execSync('ldd --version', {
            encoding: 'utf8'
        }).includes('musl');
    } catch (e) {
        // If we reach this case, we don't know if the system is musl or not, so is better to just fallback to false
        return false;
    }
};
function requireNative() {
    if (process.env.NAPI_RS_NATIVE_LIBRARY_PATH) {
        try {
            nativeBinding = (()=>{
                const e = new Error("Cannot find module as expression is too dynamic");
                e.code = 'MODULE_NOT_FOUND';
                throw e;
            })();
        } catch (err) {
            loadErrors.push(err);
        }
    } else if ("TURBOPACK compile-time falsy", 0) {
        "TURBOPACK unreachable";
    } else if ("TURBOPACK compile-time truthy", 1) {
        if ("TURBOPACK compile-time truthy", 1) {
            try {
                return (()=>{
                    const e = new Error("Cannot find module './tailwindcss-oxide.win32-x64-msvc.node'");
                    e.code = 'MODULE_NOT_FOUND';
                    throw e;
                })();
            } catch (e) {
                loadErrors.push(e);
            }
            try {
                return (()=>{
                    throw new Error('could not resolve "' + '@tailwindcss/oxide-win32-x64-msvc' + '" into a module');
                })();
            } catch (e) {
                loadErrors.push(e);
            }
        } else {
            "TURBOPACK unreachable";
        }
    } else {
        "TURBOPACK unreachable";
    }
}
nativeBinding = requireNative();
if (!nativeBinding || process.env.NAPI_RS_FORCE_WASI) {
    try {
        nativeBinding = (()=>{
            const e = new Error("Cannot find module './tailwindcss-oxide.wasi.cjs'");
            e.code = 'MODULE_NOT_FOUND';
            throw e;
        })();
    } catch (err) {
        if (process.env.NAPI_RS_FORCE_WASI) {
            loadErrors.push(err);
        }
    }
    if (!nativeBinding) {
        try {
            nativeBinding = (()=>{
                const e = new Error("Cannot find module '@tailwindcss/oxide-wasm32-wasi'");
                e.code = 'MODULE_NOT_FOUND';
                throw e;
            })();
        } catch (err) {
            if (process.env.NAPI_RS_FORCE_WASI) {
                loadErrors.push(err);
            }
        }
    }
}
if (!nativeBinding) {
    if (loadErrors.length > 0) {
        // TODO Link to documentation with potential fixes
        //  - The package owner could build/publish bindings for this arch
        //  - The user may need to bundle the correct files
        //  - The user may need to re-install node_modules to get new packages
        throw new Error('Failed to load native binding', {
            cause: loadErrors
        });
    }
    throw new Error(`Failed to load native binding`);
}
module.exports.Scanner = nativeBinding.Scanner;
}}),
"[project]/node_modules/@tailwindcss/postcss/dist/index.js [postcss] (ecmascript)": (function(__turbopack_context__) {

var { g: global, __dirname, m: module, e: exports } = __turbopack_context__;
{
"use strict";
var Be = Object.create;
var de = Object.defineProperty;
var He = Object.getOwnPropertyDescriptor;
var Ge = Object.getOwnPropertyNames;
var qe = Object.getPrototypeOf, Ye = Object.prototype.hasOwnProperty;
var fe = (e, r)=>(r = Symbol[e]) ? r : Symbol.for("Symbol." + e), pe = (e)=>{
    throw TypeError(e);
};
var Ze = (e, r, t, o)=>{
    if (r && typeof r == "object" || typeof r == "function") for (let a of Ge(r))!Ye.call(e, a) && a !== t && de(e, a, {
        get: ()=>r[a],
        enumerable: !(o = He(r, a)) || o.enumerable
    });
    return e;
};
var K = (e, r, t)=>(t = e != null ? Be(qe(e)) : {}, Ze(r || !e || !e.__esModule ? de(t, "default", {
        value: e,
        enumerable: !0
    }) : t, e));
var me = (e, r, t)=>{
    if (r != null) {
        typeof r != "object" && typeof r != "function" && pe("Object expected");
        var o, a;
        t && (o = r[fe("asyncDispose")]), o === void 0 && (o = r[fe("dispose")], t && (a = o)), typeof o != "function" && pe("Object not disposable"), a && (o = function() {
            try {
                a.call(this);
            } catch (i) {
                return Promise.reject(i);
            }
        }), e.push([
            t,
            o,
            r
        ]);
    } else t && e.push([
        t
    ]);
    return r;
}, ge = (e, r, t)=>{
    var o = typeof SuppressedError == "function" ? SuppressedError : function(l, s, n, u) {
        return u = Error(n), u.name = "SuppressedError", u.error = l, u.suppressed = s, u;
    }, a = (l)=>r = t ? new o(l, r, "An error was suppressed during disposal") : (t = !0, l), i = (l)=>{
        for(; l = e.pop();)try {
            var s = l[1] && l[1].call(l[2]);
            if (l[0]) return Promise.resolve(s).then(i, (n)=>(a(n), i()));
        } catch (n) {
            a(n);
        }
        if (t) throw r;
    };
    return i();
};
var Ke = K(__turbopack_context__.r("[project]/node_modules/@alloc/quick-lru/index.js [postcss] (ecmascript)")), v = __turbopack_context__.r("[project]/node_modules/@tailwindcss/node/dist/index.js [postcss] (ecmascript)"), Le = __turbopack_context__.r("[project]/node_modules/@tailwindcss/node/dist/require-cache.js [postcss] (ecmascript)"), ze = __turbopack_context__.r("[project]/node_modules/@tailwindcss/oxide/index.js [postcss] (ecmascript)"), Ie = K(__turbopack_context__.r("[externals]/fs [external] (fs, cjs)")), b = K(__turbopack_context__.r("[externals]/path [external] (path, cjs)")), Z = K(__turbopack_context__.r("[project]/node_modules/postcss/lib/postcss.js [postcss] (ecmascript)"));
function Q(e) {
    return {
        kind: "word",
        value: e
    };
}
function Je(e, r) {
    return {
        kind: "function",
        value: e,
        nodes: r
    };
}
function Qe(e) {
    return {
        kind: "separator",
        value: e
    };
}
function V(e, r, t = null) {
    for(let o = 0; o < e.length; o++){
        let a = e[o], i = !1, l = 0, s = r(a, {
            parent: t,
            replaceWith (n) {
                i || (i = !0, Array.isArray(n) ? n.length === 0 ? (e.splice(o, 1), l = 0) : n.length === 1 ? (e[o] = n[0], l = 1) : (e.splice(o, 1, ...n), l = n.length) : e[o] = n);
            }
        }) ?? 0;
        if (i) {
            s === 0 ? o-- : o += l - 1;
            continue;
        }
        if (s === 2) return 2;
        if (s !== 1 && a.kind === "function" && V(a.nodes, r, a) === 2) return 2;
    }
}
function N(e) {
    let r = "";
    for (let t of e)switch(t.kind){
        case "word":
        case "separator":
            {
                r += t.value;
                break;
            }
        case "function":
            r += t.value + "(" + N(t.nodes) + ")";
    }
    return r;
}
var he = 92, Xe = 41, ve = 58, we = 44, et = 34, ke = 61, ye = 62, be = 60, xe = 10, tt = 40, rt = 39, Ae = 47, Ce = 32, Se = 9;
function A(e) {
    e = e.replaceAll(`\r
`, `
`);
    let r = [], t = [], o = null, a = "", i;
    for(let l = 0; l < e.length; l++){
        let s = e.charCodeAt(l);
        switch(s){
            case he:
                {
                    a += e[l] + e[l + 1], l++;
                    break;
                }
            case ve:
            case we:
            case ke:
            case ye:
            case be:
            case xe:
            case Ae:
            case Ce:
            case Se:
                {
                    if (a.length > 0) {
                        let p = Q(a);
                        o ? o.nodes.push(p) : r.push(p), a = "";
                    }
                    let n = l, u = l + 1;
                    for(; u < e.length && (i = e.charCodeAt(u), !(i !== ve && i !== we && i !== ke && i !== ye && i !== be && i !== xe && i !== Ae && i !== Ce && i !== Se)); u++);
                    l = u - 1;
                    let c = Qe(e.slice(n, u));
                    o ? o.nodes.push(c) : r.push(c);
                    break;
                }
            case rt:
            case et:
                {
                    let n = l;
                    for(let u = l + 1; u < e.length; u++)if (i = e.charCodeAt(u), i === he) u += 1;
                    else if (i === s) {
                        l = u;
                        break;
                    }
                    a += e.slice(n, l + 1);
                    break;
                }
            case tt:
                {
                    let n = Je(a, []);
                    a = "", o ? o.nodes.push(n) : r.push(n), t.push(n), o = n;
                    break;
                }
            case Xe:
                {
                    let n = t.pop();
                    if (a.length > 0) {
                        let u = Q(a);
                        n?.nodes.push(u), a = "";
                    }
                    t.length > 0 ? o = t[t.length - 1] : o = null;
                    break;
                }
            default:
                a += String.fromCharCode(s);
        }
    }
    return a.length > 0 && r.push(Q(a)), r;
}
var m = class extends Map {
    constructor(t){
        super();
        this.factory = t;
    }
    get(t) {
        let o = super.get(t);
        return o === void 0 && (o = this.factory(t, this), this.set(t, o)), o;
    }
};
var jt = new Uint8Array(256);
var H = new Uint8Array(256);
function w(e, r) {
    let t = 0, o = [], a = 0, i = e.length, l = r.charCodeAt(0);
    for(let s = 0; s < i; s++){
        let n = e.charCodeAt(s);
        if (t === 0 && n === l) {
            o.push(e.slice(a, s)), a = s + 1;
            continue;
        }
        switch(n){
            case 92:
                s += 1;
                break;
            case 39:
            case 34:
                for(; ++s < i;){
                    let u = e.charCodeAt(s);
                    if (u === 92) {
                        s += 1;
                        continue;
                    }
                    if (u === n) break;
                }
                break;
            case 40:
                H[t] = 41, t++;
                break;
            case 91:
                H[t] = 93, t++;
                break;
            case 123:
                H[t] = 125, t++;
                break;
            case 93:
            case 125:
            case 41:
                t > 0 && n === H[t - 1] && t--;
                break;
        }
    }
    return o.push(e.slice(a)), o;
}
var Jt = new m((e)=>{
    let r = A(e), t = new Set;
    return V(r, (o, { parent: a })=>{
        let i = a === null ? r : a.nodes ?? [];
        if (o.kind === "word" && (o.value === "+" || o.value === "-" || o.value === "*" || o.value === "/")) {
            let l = i.indexOf(o) ?? -1;
            if (l === -1) return;
            let s = i[l - 1];
            if (s?.kind !== "separator" || s.value !== " ") return;
            let n = i[l + 1];
            if (n?.kind !== "separator" || n.value !== " ") return;
            t.add(s), t.add(n);
        } else o.kind === "separator" && o.value.trim() === "/" ? o.value = "/" : o.kind === "separator" && o.value.length > 0 && o.value.trim() === "" ? (i[0] === o || i[i.length - 1] === o) && t.add(o) : o.kind === "separator" && o.value.trim() === "," && (o.value = ",");
    }), t.size > 0 && V(r, (o, { replaceWith: a })=>{
        t.has(o) && (t.delete(o), a([]));
    }), X(r), N(r);
});
var Qt = new m((e)=>{
    let r = A(e);
    return r.length === 3 && r[0].kind === "word" && r[0].value === "&" && r[1].kind === "separator" && r[1].value === ":" && r[2].kind === "function" && r[2].value === "is" ? N(r[2].nodes) : e;
});
function X(e) {
    for (let r of e)switch(r.kind){
        case "function":
            {
                if (r.value === "url" || r.value.endsWith("_url")) {
                    r.value = I(r.value);
                    break;
                }
                if (r.value === "var" || r.value.endsWith("_var") || r.value === "theme" || r.value.endsWith("_theme")) {
                    r.value = I(r.value);
                    for(let t = 0; t < r.nodes.length; t++)X([
                        r.nodes[t]
                    ]);
                    break;
                }
                r.value = I(r.value), X(r.nodes);
                break;
            }
        case "separator":
            r.value = I(r.value);
            break;
        case "word":
            {
                (r.value[0] !== "-" || r.value[1] !== "-") && (r.value = I(r.value));
                break;
            }
        default:
            it(r);
    }
}
var Xt = new m((e)=>{
    let r = A(e);
    return r.length === 1 && r[0].kind === "function" && r[0].value === "var";
});
function it(e) {
    throw new Error(`Unexpected value: ${e}`);
}
function I(e) {
    return e.replaceAll("_", String.raw`\_`).replaceAll(" ", "_");
}
var T = /[+-]?\d*\.?\d+(?:[eE][+-]?\d+)?/, sr = new RegExp(`^${T.source}$`);
var ur = new RegExp(`^${T.source}%$`);
var cr = new RegExp(`^${T.source}s*/s*${T.source}$`);
var nt = [
    "cm",
    "mm",
    "Q",
    "in",
    "pc",
    "pt",
    "px",
    "em",
    "ex",
    "ch",
    "rem",
    "lh",
    "rlh",
    "vw",
    "vh",
    "vmin",
    "vmax",
    "vb",
    "vi",
    "svw",
    "svh",
    "lvw",
    "lvh",
    "dvw",
    "dvh",
    "cqw",
    "cqh",
    "cqi",
    "cqb",
    "cqmin",
    "cqmax"
], fr = new RegExp(`^${T.source}(${nt.join("|")})$`);
var ot = [
    "deg",
    "rad",
    "grad",
    "turn"
], pr = new RegExp(`^${T.source}(${ot.join("|")})$`);
var dr = new RegExp(`^${T.source} +${T.source} +${T.source}$`);
function y(e) {
    let r = Number(e);
    return Number.isInteger(r) && r >= 0 && String(r) === String(e);
}
function F(e, r) {
    if (r === null) return e;
    let t = Number(r);
    return Number.isNaN(t) || (r = `${t * 100}%`), r === "100%" ? e : `color-mix(in oklab, ${e} ${r}, transparent)`;
}
var st = {
    "--alpha": ut,
    "--spacing": ct,
    "--theme": ft,
    theme: pt
};
function ut(e, r, t, ...o) {
    let [a, i] = w(t, "/").map((l)=>l.trim());
    if (!a || !i) throw new Error(`The --alpha(\u2026) function requires a color and an alpha value, e.g.: \`--alpha(${a || "var(--my-color)"} / ${i || "50%"})\``);
    if (o.length > 0) throw new Error(`The --alpha(\u2026) function only accepts one argument, e.g.: \`--alpha(${a || "var(--my-color)"} / ${i || "50%"})\``);
    return F(a, i);
}
function ct(e, r, t, ...o) {
    if (!t) throw new Error("The --spacing(\u2026) function requires an argument, but received none.");
    if (o.length > 0) throw new Error(`The --spacing(\u2026) function only accepts a single argument, but received ${o.length + 1}.`);
    let a = e.theme.resolve(null, [
        "--spacing"
    ]);
    if (!a) throw new Error("The --spacing(\u2026) function requires that the `--spacing` theme variable exists, but it was not found.");
    return `calc(${a} * ${t})`;
}
function ft(e, r, t, ...o) {
    if (!t.startsWith("--")) throw new Error("The --theme(\u2026) function can only be used with CSS variables from your theme.");
    let a = !1;
    t.endsWith(" inline") && (a = !0, t = t.slice(0, -7)), r.kind === "at-rule" && (a = !0);
    let i = e.resolveThemeValue(t, a);
    if (!i) {
        if (o.length > 0) return o.join(", ");
        throw new Error(`Could not resolve value for theme function: \`theme(${t})\`. Consider checking if the variable name is correct or provide a fallback value to silence this error.`);
    }
    if (o.length === 0) return i;
    let l = o.join(", ");
    if (l === "initial") return i;
    if (i === "initial") return l;
    if (i.startsWith("var(") || i.startsWith("theme(") || i.startsWith("--theme(")) {
        let s = A(i);
        return mt(s, l), N(s);
    }
    return i;
}
function pt(e, r, t, ...o) {
    t = dt(t);
    let a = e.resolveThemeValue(t);
    if (!a && o.length > 0) return o.join(", ");
    if (!a) throw new Error(`Could not resolve value for theme function: \`theme(${t})\`. Consider checking if the path is correct or provide a fallback value to silence this error.`);
    return a;
}
var Rr = new RegExp(Object.keys(st).map((e)=>`${e}\\(`).join("|"));
function dt(e) {
    if (e[0] !== "'" && e[0] !== '"') return e;
    let r = "", t = e[0];
    for(let o = 1; o < e.length - 1; o++){
        let a = e[o], i = e[o + 1];
        a === "\\" && (i === t || i === "\\") ? (r += i, o++) : r += a;
    }
    return r;
}
function mt(e, r) {
    V(e, (t)=>{
        if (t.kind === "function" && !(t.value !== "var" && t.value !== "theme" && t.value !== "--theme")) if (t.nodes.length === 1) t.nodes.push({
            kind: "word",
            value: `, ${r}`
        });
        else {
            let o = t.nodes[t.nodes.length - 1];
            o.kind === "word" && o.value === "initial" && (o.value = r);
        }
    });
}
var yt = 32;
var bt = 40;
function Ee(e, r = []) {
    let t = e, o = "";
    for(let a = 5; a < e.length; a++){
        let i = e.charCodeAt(a);
        if (i === yt || i === bt) {
            t = e.slice(0, a), o = e.slice(a);
            break;
        }
    }
    return k(t.trim(), o.trim(), r);
}
var ne = {
    inherit: "inherit",
    current: "currentcolor",
    transparent: "transparent",
    black: "#000",
    white: "#fff",
    slate: {
        50: "oklch(98.4% 0.003 247.858)",
        100: "oklch(96.8% 0.007 247.896)",
        200: "oklch(92.9% 0.013 255.508)",
        300: "oklch(86.9% 0.022 252.894)",
        400: "oklch(70.4% 0.04 256.788)",
        500: "oklch(55.4% 0.046 257.417)",
        600: "oklch(44.6% 0.043 257.281)",
        700: "oklch(37.2% 0.044 257.287)",
        800: "oklch(27.9% 0.041 260.031)",
        900: "oklch(20.8% 0.042 265.755)",
        950: "oklch(12.9% 0.042 264.695)"
    },
    gray: {
        50: "oklch(98.5% 0.002 247.839)",
        100: "oklch(96.7% 0.003 264.542)",
        200: "oklch(92.8% 0.006 264.531)",
        300: "oklch(87.2% 0.01 258.338)",
        400: "oklch(70.7% 0.022 261.325)",
        500: "oklch(55.1% 0.027 264.364)",
        600: "oklch(44.6% 0.03 256.802)",
        700: "oklch(37.3% 0.034 259.733)",
        800: "oklch(27.8% 0.033 256.848)",
        900: "oklch(21% 0.034 264.665)",
        950: "oklch(13% 0.028 261.692)"
    },
    zinc: {
        50: "oklch(98.5% 0 0)",
        100: "oklch(96.7% 0.001 286.375)",
        200: "oklch(92% 0.004 286.32)",
        300: "oklch(87.1% 0.006 286.286)",
        400: "oklch(70.5% 0.015 286.067)",
        500: "oklch(55.2% 0.016 285.938)",
        600: "oklch(44.2% 0.017 285.786)",
        700: "oklch(37% 0.013 285.805)",
        800: "oklch(27.4% 0.006 286.033)",
        900: "oklch(21% 0.006 285.885)",
        950: "oklch(14.1% 0.005 285.823)"
    },
    neutral: {
        50: "oklch(98.5% 0 0)",
        100: "oklch(97% 0 0)",
        200: "oklch(92.2% 0 0)",
        300: "oklch(87% 0 0)",
        400: "oklch(70.8% 0 0)",
        500: "oklch(55.6% 0 0)",
        600: "oklch(43.9% 0 0)",
        700: "oklch(37.1% 0 0)",
        800: "oklch(26.9% 0 0)",
        900: "oklch(20.5% 0 0)",
        950: "oklch(14.5% 0 0)"
    },
    stone: {
        50: "oklch(98.5% 0.001 106.423)",
        100: "oklch(97% 0.001 106.424)",
        200: "oklch(92.3% 0.003 48.717)",
        300: "oklch(86.9% 0.005 56.366)",
        400: "oklch(70.9% 0.01 56.259)",
        500: "oklch(55.3% 0.013 58.071)",
        600: "oklch(44.4% 0.011 73.639)",
        700: "oklch(37.4% 0.01 67.558)",
        800: "oklch(26.8% 0.007 34.298)",
        900: "oklch(21.6% 0.006 56.043)",
        950: "oklch(14.7% 0.004 49.25)"
    },
    red: {
        50: "oklch(97.1% 0.013 17.38)",
        100: "oklch(93.6% 0.032 17.717)",
        200: "oklch(88.5% 0.062 18.334)",
        300: "oklch(80.8% 0.114 19.571)",
        400: "oklch(70.4% 0.191 22.216)",
        500: "oklch(63.7% 0.237 25.331)",
        600: "oklch(57.7% 0.245 27.325)",
        700: "oklch(50.5% 0.213 27.518)",
        800: "oklch(44.4% 0.177 26.899)",
        900: "oklch(39.6% 0.141 25.723)",
        950: "oklch(25.8% 0.092 26.042)"
    },
    orange: {
        50: "oklch(98% 0.016 73.684)",
        100: "oklch(95.4% 0.038 75.164)",
        200: "oklch(90.1% 0.076 70.697)",
        300: "oklch(83.7% 0.128 66.29)",
        400: "oklch(75% 0.183 55.934)",
        500: "oklch(70.5% 0.213 47.604)",
        600: "oklch(64.6% 0.222 41.116)",
        700: "oklch(55.3% 0.195 38.402)",
        800: "oklch(47% 0.157 37.304)",
        900: "oklch(40.8% 0.123 38.172)",
        950: "oklch(26.6% 0.079 36.259)"
    },
    amber: {
        50: "oklch(98.7% 0.022 95.277)",
        100: "oklch(96.2% 0.059 95.617)",
        200: "oklch(92.4% 0.12 95.746)",
        300: "oklch(87.9% 0.169 91.605)",
        400: "oklch(82.8% 0.189 84.429)",
        500: "oklch(76.9% 0.188 70.08)",
        600: "oklch(66.6% 0.179 58.318)",
        700: "oklch(55.5% 0.163 48.998)",
        800: "oklch(47.3% 0.137 46.201)",
        900: "oklch(41.4% 0.112 45.904)",
        950: "oklch(27.9% 0.077 45.635)"
    },
    yellow: {
        50: "oklch(98.7% 0.026 102.212)",
        100: "oklch(97.3% 0.071 103.193)",
        200: "oklch(94.5% 0.129 101.54)",
        300: "oklch(90.5% 0.182 98.111)",
        400: "oklch(85.2% 0.199 91.936)",
        500: "oklch(79.5% 0.184 86.047)",
        600: "oklch(68.1% 0.162 75.834)",
        700: "oklch(55.4% 0.135 66.442)",
        800: "oklch(47.6% 0.114 61.907)",
        900: "oklch(42.1% 0.095 57.708)",
        950: "oklch(28.6% 0.066 53.813)"
    },
    lime: {
        50: "oklch(98.6% 0.031 120.757)",
        100: "oklch(96.7% 0.067 122.328)",
        200: "oklch(93.8% 0.127 124.321)",
        300: "oklch(89.7% 0.196 126.665)",
        400: "oklch(84.1% 0.238 128.85)",
        500: "oklch(76.8% 0.233 130.85)",
        600: "oklch(64.8% 0.2 131.684)",
        700: "oklch(53.2% 0.157 131.589)",
        800: "oklch(45.3% 0.124 130.933)",
        900: "oklch(40.5% 0.101 131.063)",
        950: "oklch(27.4% 0.072 132.109)"
    },
    green: {
        50: "oklch(98.2% 0.018 155.826)",
        100: "oklch(96.2% 0.044 156.743)",
        200: "oklch(92.5% 0.084 155.995)",
        300: "oklch(87.1% 0.15 154.449)",
        400: "oklch(79.2% 0.209 151.711)",
        500: "oklch(72.3% 0.219 149.579)",
        600: "oklch(62.7% 0.194 149.214)",
        700: "oklch(52.7% 0.154 150.069)",
        800: "oklch(44.8% 0.119 151.328)",
        900: "oklch(39.3% 0.095 152.535)",
        950: "oklch(26.6% 0.065 152.934)"
    },
    emerald: {
        50: "oklch(97.9% 0.021 166.113)",
        100: "oklch(95% 0.052 163.051)",
        200: "oklch(90.5% 0.093 164.15)",
        300: "oklch(84.5% 0.143 164.978)",
        400: "oklch(76.5% 0.177 163.223)",
        500: "oklch(69.6% 0.17 162.48)",
        600: "oklch(59.6% 0.145 163.225)",
        700: "oklch(50.8% 0.118 165.612)",
        800: "oklch(43.2% 0.095 166.913)",
        900: "oklch(37.8% 0.077 168.94)",
        950: "oklch(26.2% 0.051 172.552)"
    },
    teal: {
        50: "oklch(98.4% 0.014 180.72)",
        100: "oklch(95.3% 0.051 180.801)",
        200: "oklch(91% 0.096 180.426)",
        300: "oklch(85.5% 0.138 181.071)",
        400: "oklch(77.7% 0.152 181.912)",
        500: "oklch(70.4% 0.14 182.503)",
        600: "oklch(60% 0.118 184.704)",
        700: "oklch(51.1% 0.096 186.391)",
        800: "oklch(43.7% 0.078 188.216)",
        900: "oklch(38.6% 0.063 188.416)",
        950: "oklch(27.7% 0.046 192.524)"
    },
    cyan: {
        50: "oklch(98.4% 0.019 200.873)",
        100: "oklch(95.6% 0.045 203.388)",
        200: "oklch(91.7% 0.08 205.041)",
        300: "oklch(86.5% 0.127 207.078)",
        400: "oklch(78.9% 0.154 211.53)",
        500: "oklch(71.5% 0.143 215.221)",
        600: "oklch(60.9% 0.126 221.723)",
        700: "oklch(52% 0.105 223.128)",
        800: "oklch(45% 0.085 224.283)",
        900: "oklch(39.8% 0.07 227.392)",
        950: "oklch(30.2% 0.056 229.695)"
    },
    sky: {
        50: "oklch(97.7% 0.013 236.62)",
        100: "oklch(95.1% 0.026 236.824)",
        200: "oklch(90.1% 0.058 230.902)",
        300: "oklch(82.8% 0.111 230.318)",
        400: "oklch(74.6% 0.16 232.661)",
        500: "oklch(68.5% 0.169 237.323)",
        600: "oklch(58.8% 0.158 241.966)",
        700: "oklch(50% 0.134 242.749)",
        800: "oklch(44.3% 0.11 240.79)",
        900: "oklch(39.1% 0.09 240.876)",
        950: "oklch(29.3% 0.066 243.157)"
    },
    blue: {
        50: "oklch(97% 0.014 254.604)",
        100: "oklch(93.2% 0.032 255.585)",
        200: "oklch(88.2% 0.059 254.128)",
        300: "oklch(80.9% 0.105 251.813)",
        400: "oklch(70.7% 0.165 254.624)",
        500: "oklch(62.3% 0.214 259.815)",
        600: "oklch(54.6% 0.245 262.881)",
        700: "oklch(48.8% 0.243 264.376)",
        800: "oklch(42.4% 0.199 265.638)",
        900: "oklch(37.9% 0.146 265.522)",
        950: "oklch(28.2% 0.091 267.935)"
    },
    indigo: {
        50: "oklch(96.2% 0.018 272.314)",
        100: "oklch(93% 0.034 272.788)",
        200: "oklch(87% 0.065 274.039)",
        300: "oklch(78.5% 0.115 274.713)",
        400: "oklch(67.3% 0.182 276.935)",
        500: "oklch(58.5% 0.233 277.117)",
        600: "oklch(51.1% 0.262 276.966)",
        700: "oklch(45.7% 0.24 277.023)",
        800: "oklch(39.8% 0.195 277.366)",
        900: "oklch(35.9% 0.144 278.697)",
        950: "oklch(25.7% 0.09 281.288)"
    },
    violet: {
        50: "oklch(96.9% 0.016 293.756)",
        100: "oklch(94.3% 0.029 294.588)",
        200: "oklch(89.4% 0.057 293.283)",
        300: "oklch(81.1% 0.111 293.571)",
        400: "oklch(70.2% 0.183 293.541)",
        500: "oklch(60.6% 0.25 292.717)",
        600: "oklch(54.1% 0.281 293.009)",
        700: "oklch(49.1% 0.27 292.581)",
        800: "oklch(43.2% 0.232 292.759)",
        900: "oklch(38% 0.189 293.745)",
        950: "oklch(28.3% 0.141 291.089)"
    },
    purple: {
        50: "oklch(97.7% 0.014 308.299)",
        100: "oklch(94.6% 0.033 307.174)",
        200: "oklch(90.2% 0.063 306.703)",
        300: "oklch(82.7% 0.119 306.383)",
        400: "oklch(71.4% 0.203 305.504)",
        500: "oklch(62.7% 0.265 303.9)",
        600: "oklch(55.8% 0.288 302.321)",
        700: "oklch(49.6% 0.265 301.924)",
        800: "oklch(43.8% 0.218 303.724)",
        900: "oklch(38.1% 0.176 304.987)",
        950: "oklch(29.1% 0.149 302.717)"
    },
    fuchsia: {
        50: "oklch(97.7% 0.017 320.058)",
        100: "oklch(95.2% 0.037 318.852)",
        200: "oklch(90.3% 0.076 319.62)",
        300: "oklch(83.3% 0.145 321.434)",
        400: "oklch(74% 0.238 322.16)",
        500: "oklch(66.7% 0.295 322.15)",
        600: "oklch(59.1% 0.293 322.896)",
        700: "oklch(51.8% 0.253 323.949)",
        800: "oklch(45.2% 0.211 324.591)",
        900: "oklch(40.1% 0.17 325.612)",
        950: "oklch(29.3% 0.136 325.661)"
    },
    pink: {
        50: "oklch(97.1% 0.014 343.198)",
        100: "oklch(94.8% 0.028 342.258)",
        200: "oklch(89.9% 0.061 343.231)",
        300: "oklch(82.3% 0.12 346.018)",
        400: "oklch(71.8% 0.202 349.761)",
        500: "oklch(65.6% 0.241 354.308)",
        600: "oklch(59.2% 0.249 0.584)",
        700: "oklch(52.5% 0.223 3.958)",
        800: "oklch(45.9% 0.187 3.815)",
        900: "oklch(40.8% 0.153 2.432)",
        950: "oklch(28.4% 0.109 3.907)"
    },
    rose: {
        50: "oklch(96.9% 0.015 12.422)",
        100: "oklch(94.1% 0.03 12.58)",
        200: "oklch(89.2% 0.058 10.001)",
        300: "oklch(81% 0.117 11.638)",
        400: "oklch(71.2% 0.194 13.428)",
        500: "oklch(64.5% 0.246 16.439)",
        600: "oklch(58.6% 0.253 17.585)",
        700: "oklch(51.4% 0.222 16.935)",
        800: "oklch(45.5% 0.188 13.697)",
        900: "oklch(41% 0.159 10.272)",
        950: "oklch(27.1% 0.105 12.094)"
    }
};
function D(e) {
    return {
        __BARE_VALUE__: e
    };
}
var C = D((e)=>{
    if (y(e.value)) return e.value;
}), h = D((e)=>{
    if (y(e.value)) return `${e.value}%`;
}), O = D((e)=>{
    if (y(e.value)) return `${e.value}px`;
}), Oe = D((e)=>{
    if (y(e.value)) return `${e.value}ms`;
}), Y = D((e)=>{
    if (y(e.value)) return `${e.value}deg`;
}), Tt = D((e)=>{
    if (e.fraction === null) return;
    let [r, t] = w(e.fraction, "/");
    if (!(!y(r) || !y(t))) return e.fraction;
}), _e = D((e)=>{
    if (y(Number(e.value))) return `repeat(${e.value}, minmax(0, 1fr))`;
}), Et = {
    accentColor: ({ theme: e })=>e("colors"),
    animation: {
        none: "none",
        spin: "spin 1s linear infinite",
        ping: "ping 1s cubic-bezier(0, 0, 0.2, 1) infinite",
        pulse: "pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite",
        bounce: "bounce 1s infinite"
    },
    aria: {
        busy: 'busy="true"',
        checked: 'checked="true"',
        disabled: 'disabled="true"',
        expanded: 'expanded="true"',
        hidden: 'hidden="true"',
        pressed: 'pressed="true"',
        readonly: 'readonly="true"',
        required: 'required="true"',
        selected: 'selected="true"'
    },
    aspectRatio: {
        auto: "auto",
        square: "1 / 1",
        video: "16 / 9",
        ...Tt
    },
    backdropBlur: ({ theme: e })=>e("blur"),
    backdropBrightness: ({ theme: e })=>({
            ...e("brightness"),
            ...h
        }),
    backdropContrast: ({ theme: e })=>({
            ...e("contrast"),
            ...h
        }),
    backdropGrayscale: ({ theme: e })=>({
            ...e("grayscale"),
            ...h
        }),
    backdropHueRotate: ({ theme: e })=>({
            ...e("hueRotate"),
            ...Y
        }),
    backdropInvert: ({ theme: e })=>({
            ...e("invert"),
            ...h
        }),
    backdropOpacity: ({ theme: e })=>({
            ...e("opacity"),
            ...h
        }),
    backdropSaturate: ({ theme: e })=>({
            ...e("saturate"),
            ...h
        }),
    backdropSepia: ({ theme: e })=>({
            ...e("sepia"),
            ...h
        }),
    backgroundColor: ({ theme: e })=>e("colors"),
    backgroundImage: {
        none: "none",
        "gradient-to-t": "linear-gradient(to top, var(--tw-gradient-stops))",
        "gradient-to-tr": "linear-gradient(to top right, var(--tw-gradient-stops))",
        "gradient-to-r": "linear-gradient(to right, var(--tw-gradient-stops))",
        "gradient-to-br": "linear-gradient(to bottom right, var(--tw-gradient-stops))",
        "gradient-to-b": "linear-gradient(to bottom, var(--tw-gradient-stops))",
        "gradient-to-bl": "linear-gradient(to bottom left, var(--tw-gradient-stops))",
        "gradient-to-l": "linear-gradient(to left, var(--tw-gradient-stops))",
        "gradient-to-tl": "linear-gradient(to top left, var(--tw-gradient-stops))"
    },
    backgroundOpacity: ({ theme: e })=>e("opacity"),
    backgroundPosition: {
        bottom: "bottom",
        center: "center",
        left: "left",
        "left-bottom": "left bottom",
        "left-top": "left top",
        right: "right",
        "right-bottom": "right bottom",
        "right-top": "right top",
        top: "top"
    },
    backgroundSize: {
        auto: "auto",
        cover: "cover",
        contain: "contain"
    },
    blur: {
        0: "0",
        none: "",
        sm: "4px",
        DEFAULT: "8px",
        md: "12px",
        lg: "16px",
        xl: "24px",
        "2xl": "40px",
        "3xl": "64px"
    },
    borderColor: ({ theme: e })=>({
            DEFAULT: "currentcolor",
            ...e("colors")
        }),
    borderOpacity: ({ theme: e })=>e("opacity"),
    borderRadius: {
        none: "0px",
        sm: "0.125rem",
        DEFAULT: "0.25rem",
        md: "0.375rem",
        lg: "0.5rem",
        xl: "0.75rem",
        "2xl": "1rem",
        "3xl": "1.5rem",
        full: "9999px"
    },
    borderSpacing: ({ theme: e })=>e("spacing"),
    borderWidth: {
        DEFAULT: "1px",
        0: "0px",
        2: "2px",
        4: "4px",
        8: "8px",
        ...O
    },
    boxShadow: {
        sm: "0 1px 2px 0 rgb(0 0 0 / 0.05)",
        DEFAULT: "0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1)",
        md: "0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1)",
        lg: "0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)",
        xl: "0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1)",
        "2xl": "0 25px 50px -12px rgb(0 0 0 / 0.25)",
        inner: "inset 0 2px 4px 0 rgb(0 0 0 / 0.05)",
        none: "none"
    },
    boxShadowColor: ({ theme: e })=>e("colors"),
    brightness: {
        0: "0",
        50: ".5",
        75: ".75",
        90: ".9",
        95: ".95",
        100: "1",
        105: "1.05",
        110: "1.1",
        125: "1.25",
        150: "1.5",
        200: "2",
        ...h
    },
    caretColor: ({ theme: e })=>e("colors"),
    colors: ()=>({
            ...ne
        }),
    columns: {
        auto: "auto",
        1: "1",
        2: "2",
        3: "3",
        4: "4",
        5: "5",
        6: "6",
        7: "7",
        8: "8",
        9: "9",
        10: "10",
        11: "11",
        12: "12",
        "3xs": "16rem",
        "2xs": "18rem",
        xs: "20rem",
        sm: "24rem",
        md: "28rem",
        lg: "32rem",
        xl: "36rem",
        "2xl": "42rem",
        "3xl": "48rem",
        "4xl": "56rem",
        "5xl": "64rem",
        "6xl": "72rem",
        "7xl": "80rem",
        ...C
    },
    container: {},
    content: {
        none: "none"
    },
    contrast: {
        0: "0",
        50: ".5",
        75: ".75",
        100: "1",
        125: "1.25",
        150: "1.5",
        200: "2",
        ...h
    },
    cursor: {
        auto: "auto",
        default: "default",
        pointer: "pointer",
        wait: "wait",
        text: "text",
        move: "move",
        help: "help",
        "not-allowed": "not-allowed",
        none: "none",
        "context-menu": "context-menu",
        progress: "progress",
        cell: "cell",
        crosshair: "crosshair",
        "vertical-text": "vertical-text",
        alias: "alias",
        copy: "copy",
        "no-drop": "no-drop",
        grab: "grab",
        grabbing: "grabbing",
        "all-scroll": "all-scroll",
        "col-resize": "col-resize",
        "row-resize": "row-resize",
        "n-resize": "n-resize",
        "e-resize": "e-resize",
        "s-resize": "s-resize",
        "w-resize": "w-resize",
        "ne-resize": "ne-resize",
        "nw-resize": "nw-resize",
        "se-resize": "se-resize",
        "sw-resize": "sw-resize",
        "ew-resize": "ew-resize",
        "ns-resize": "ns-resize",
        "nesw-resize": "nesw-resize",
        "nwse-resize": "nwse-resize",
        "zoom-in": "zoom-in",
        "zoom-out": "zoom-out"
    },
    divideColor: ({ theme: e })=>e("borderColor"),
    divideOpacity: ({ theme: e })=>e("borderOpacity"),
    divideWidth: ({ theme: e })=>({
            ...e("borderWidth"),
            ...O
        }),
    dropShadow: {
        sm: "0 1px 1px rgb(0 0 0 / 0.05)",
        DEFAULT: [
            "0 1px 2px rgb(0 0 0 / 0.1)",
            "0 1px 1px rgb(0 0 0 / 0.06)"
        ],
        md: [
            "0 4px 3px rgb(0 0 0 / 0.07)",
            "0 2px 2px rgb(0 0 0 / 0.06)"
        ],
        lg: [
            "0 10px 8px rgb(0 0 0 / 0.04)",
            "0 4px 3px rgb(0 0 0 / 0.1)"
        ],
        xl: [
            "0 20px 13px rgb(0 0 0 / 0.03)",
            "0 8px 5px rgb(0 0 0 / 0.08)"
        ],
        "2xl": "0 25px 25px rgb(0 0 0 / 0.15)",
        none: "0 0 #0000"
    },
    fill: ({ theme: e })=>e("colors"),
    flex: {
        1: "1 1 0%",
        auto: "1 1 auto",
        initial: "0 1 auto",
        none: "none"
    },
    flexBasis: ({ theme: e })=>({
            auto: "auto",
            "1/2": "50%",
            "1/3": "33.333333%",
            "2/3": "66.666667%",
            "1/4": "25%",
            "2/4": "50%",
            "3/4": "75%",
            "1/5": "20%",
            "2/5": "40%",
            "3/5": "60%",
            "4/5": "80%",
            "1/6": "16.666667%",
            "2/6": "33.333333%",
            "3/6": "50%",
            "4/6": "66.666667%",
            "5/6": "83.333333%",
            "1/12": "8.333333%",
            "2/12": "16.666667%",
            "3/12": "25%",
            "4/12": "33.333333%",
            "5/12": "41.666667%",
            "6/12": "50%",
            "7/12": "58.333333%",
            "8/12": "66.666667%",
            "9/12": "75%",
            "10/12": "83.333333%",
            "11/12": "91.666667%",
            full: "100%",
            ...e("spacing")
        }),
    flexGrow: {
        0: "0",
        DEFAULT: "1",
        ...C
    },
    flexShrink: {
        0: "0",
        DEFAULT: "1",
        ...C
    },
    fontFamily: {
        sans: [
            "ui-sans-serif",
            "system-ui",
            "sans-serif",
            '"Apple Color Emoji"',
            '"Segoe UI Emoji"',
            '"Segoe UI Symbol"',
            '"Noto Color Emoji"'
        ],
        serif: [
            "ui-serif",
            "Georgia",
            "Cambria",
            '"Times New Roman"',
            "Times",
            "serif"
        ],
        mono: [
            "ui-monospace",
            "SFMono-Regular",
            "Menlo",
            "Monaco",
            "Consolas",
            '"Liberation Mono"',
            '"Courier New"',
            "monospace"
        ]
    },
    fontSize: {
        xs: [
            "0.75rem",
            {
                lineHeight: "1rem"
            }
        ],
        sm: [
            "0.875rem",
            {
                lineHeight: "1.25rem"
            }
        ],
        base: [
            "1rem",
            {
                lineHeight: "1.5rem"
            }
        ],
        lg: [
            "1.125rem",
            {
                lineHeight: "1.75rem"
            }
        ],
        xl: [
            "1.25rem",
            {
                lineHeight: "1.75rem"
            }
        ],
        "2xl": [
            "1.5rem",
            {
                lineHeight: "2rem"
            }
        ],
        "3xl": [
            "1.875rem",
            {
                lineHeight: "2.25rem"
            }
        ],
        "4xl": [
            "2.25rem",
            {
                lineHeight: "2.5rem"
            }
        ],
        "5xl": [
            "3rem",
            {
                lineHeight: "1"
            }
        ],
        "6xl": [
            "3.75rem",
            {
                lineHeight: "1"
            }
        ],
        "7xl": [
            "4.5rem",
            {
                lineHeight: "1"
            }
        ],
        "8xl": [
            "6rem",
            {
                lineHeight: "1"
            }
        ],
        "9xl": [
            "8rem",
            {
                lineHeight: "1"
            }
        ]
    },
    fontWeight: {
        thin: "100",
        extralight: "200",
        light: "300",
        normal: "400",
        medium: "500",
        semibold: "600",
        bold: "700",
        extrabold: "800",
        black: "900"
    },
    gap: ({ theme: e })=>e("spacing"),
    gradientColorStops: ({ theme: e })=>e("colors"),
    gradientColorStopPositions: {
        "0%": "0%",
        "5%": "5%",
        "10%": "10%",
        "15%": "15%",
        "20%": "20%",
        "25%": "25%",
        "30%": "30%",
        "35%": "35%",
        "40%": "40%",
        "45%": "45%",
        "50%": "50%",
        "55%": "55%",
        "60%": "60%",
        "65%": "65%",
        "70%": "70%",
        "75%": "75%",
        "80%": "80%",
        "85%": "85%",
        "90%": "90%",
        "95%": "95%",
        "100%": "100%",
        ...h
    },
    grayscale: {
        0: "0",
        DEFAULT: "100%",
        ...h
    },
    gridAutoColumns: {
        auto: "auto",
        min: "min-content",
        max: "max-content",
        fr: "minmax(0, 1fr)"
    },
    gridAutoRows: {
        auto: "auto",
        min: "min-content",
        max: "max-content",
        fr: "minmax(0, 1fr)"
    },
    gridColumn: {
        auto: "auto",
        "span-1": "span 1 / span 1",
        "span-2": "span 2 / span 2",
        "span-3": "span 3 / span 3",
        "span-4": "span 4 / span 4",
        "span-5": "span 5 / span 5",
        "span-6": "span 6 / span 6",
        "span-7": "span 7 / span 7",
        "span-8": "span 8 / span 8",
        "span-9": "span 9 / span 9",
        "span-10": "span 10 / span 10",
        "span-11": "span 11 / span 11",
        "span-12": "span 12 / span 12",
        "span-full": "1 / -1"
    },
    gridColumnEnd: {
        auto: "auto",
        1: "1",
        2: "2",
        3: "3",
        4: "4",
        5: "5",
        6: "6",
        7: "7",
        8: "8",
        9: "9",
        10: "10",
        11: "11",
        12: "12",
        13: "13",
        ...C
    },
    gridColumnStart: {
        auto: "auto",
        1: "1",
        2: "2",
        3: "3",
        4: "4",
        5: "5",
        6: "6",
        7: "7",
        8: "8",
        9: "9",
        10: "10",
        11: "11",
        12: "12",
        13: "13",
        ...C
    },
    gridRow: {
        auto: "auto",
        "span-1": "span 1 / span 1",
        "span-2": "span 2 / span 2",
        "span-3": "span 3 / span 3",
        "span-4": "span 4 / span 4",
        "span-5": "span 5 / span 5",
        "span-6": "span 6 / span 6",
        "span-7": "span 7 / span 7",
        "span-8": "span 8 / span 8",
        "span-9": "span 9 / span 9",
        "span-10": "span 10 / span 10",
        "span-11": "span 11 / span 11",
        "span-12": "span 12 / span 12",
        "span-full": "1 / -1"
    },
    gridRowEnd: {
        auto: "auto",
        1: "1",
        2: "2",
        3: "3",
        4: "4",
        5: "5",
        6: "6",
        7: "7",
        8: "8",
        9: "9",
        10: "10",
        11: "11",
        12: "12",
        13: "13",
        ...C
    },
    gridRowStart: {
        auto: "auto",
        1: "1",
        2: "2",
        3: "3",
        4: "4",
        5: "5",
        6: "6",
        7: "7",
        8: "8",
        9: "9",
        10: "10",
        11: "11",
        12: "12",
        13: "13",
        ...C
    },
    gridTemplateColumns: {
        none: "none",
        subgrid: "subgrid",
        1: "repeat(1, minmax(0, 1fr))",
        2: "repeat(2, minmax(0, 1fr))",
        3: "repeat(3, minmax(0, 1fr))",
        4: "repeat(4, minmax(0, 1fr))",
        5: "repeat(5, minmax(0, 1fr))",
        6: "repeat(6, minmax(0, 1fr))",
        7: "repeat(7, minmax(0, 1fr))",
        8: "repeat(8, minmax(0, 1fr))",
        9: "repeat(9, minmax(0, 1fr))",
        10: "repeat(10, minmax(0, 1fr))",
        11: "repeat(11, minmax(0, 1fr))",
        12: "repeat(12, minmax(0, 1fr))",
        ..._e
    },
    gridTemplateRows: {
        none: "none",
        subgrid: "subgrid",
        1: "repeat(1, minmax(0, 1fr))",
        2: "repeat(2, minmax(0, 1fr))",
        3: "repeat(3, minmax(0, 1fr))",
        4: "repeat(4, minmax(0, 1fr))",
        5: "repeat(5, minmax(0, 1fr))",
        6: "repeat(6, minmax(0, 1fr))",
        7: "repeat(7, minmax(0, 1fr))",
        8: "repeat(8, minmax(0, 1fr))",
        9: "repeat(9, minmax(0, 1fr))",
        10: "repeat(10, minmax(0, 1fr))",
        11: "repeat(11, minmax(0, 1fr))",
        12: "repeat(12, minmax(0, 1fr))",
        ..._e
    },
    height: ({ theme: e })=>({
            auto: "auto",
            "1/2": "50%",
            "1/3": "33.333333%",
            "2/3": "66.666667%",
            "1/4": "25%",
            "2/4": "50%",
            "3/4": "75%",
            "1/5": "20%",
            "2/5": "40%",
            "3/5": "60%",
            "4/5": "80%",
            "1/6": "16.666667%",
            "2/6": "33.333333%",
            "3/6": "50%",
            "4/6": "66.666667%",
            "5/6": "83.333333%",
            full: "100%",
            screen: "100vh",
            svh: "100svh",
            lvh: "100lvh",
            dvh: "100dvh",
            min: "min-content",
            max: "max-content",
            fit: "fit-content",
            ...e("spacing")
        }),
    hueRotate: {
        0: "0deg",
        15: "15deg",
        30: "30deg",
        60: "60deg",
        90: "90deg",
        180: "180deg",
        ...Y
    },
    inset: ({ theme: e })=>({
            auto: "auto",
            "1/2": "50%",
            "1/3": "33.333333%",
            "2/3": "66.666667%",
            "1/4": "25%",
            "2/4": "50%",
            "3/4": "75%",
            full: "100%",
            ...e("spacing")
        }),
    invert: {
        0: "0",
        DEFAULT: "100%",
        ...h
    },
    keyframes: {
        spin: {
            to: {
                transform: "rotate(360deg)"
            }
        },
        ping: {
            "75%, 100%": {
                transform: "scale(2)",
                opacity: "0"
            }
        },
        pulse: {
            "50%": {
                opacity: ".5"
            }
        },
        bounce: {
            "0%, 100%": {
                transform: "translateY(-25%)",
                animationTimingFunction: "cubic-bezier(0.8,0,1,1)"
            },
            "50%": {
                transform: "none",
                animationTimingFunction: "cubic-bezier(0,0,0.2,1)"
            }
        }
    },
    letterSpacing: {
        tighter: "-0.05em",
        tight: "-0.025em",
        normal: "0em",
        wide: "0.025em",
        wider: "0.05em",
        widest: "0.1em"
    },
    lineHeight: {
        none: "1",
        tight: "1.25",
        snug: "1.375",
        normal: "1.5",
        relaxed: "1.625",
        loose: "2",
        3: ".75rem",
        4: "1rem",
        5: "1.25rem",
        6: "1.5rem",
        7: "1.75rem",
        8: "2rem",
        9: "2.25rem",
        10: "2.5rem"
    },
    listStyleType: {
        none: "none",
        disc: "disc",
        decimal: "decimal"
    },
    listStyleImage: {
        none: "none"
    },
    margin: ({ theme: e })=>({
            auto: "auto",
            ...e("spacing")
        }),
    lineClamp: {
        1: "1",
        2: "2",
        3: "3",
        4: "4",
        5: "5",
        6: "6",
        ...C
    },
    maxHeight: ({ theme: e })=>({
            none: "none",
            full: "100%",
            screen: "100vh",
            svh: "100svh",
            lvh: "100lvh",
            dvh: "100dvh",
            min: "min-content",
            max: "max-content",
            fit: "fit-content",
            ...e("spacing")
        }),
    maxWidth: ({ theme: e })=>({
            none: "none",
            xs: "20rem",
            sm: "24rem",
            md: "28rem",
            lg: "32rem",
            xl: "36rem",
            "2xl": "42rem",
            "3xl": "48rem",
            "4xl": "56rem",
            "5xl": "64rem",
            "6xl": "72rem",
            "7xl": "80rem",
            full: "100%",
            min: "min-content",
            max: "max-content",
            fit: "fit-content",
            prose: "65ch",
            ...e("spacing")
        }),
    minHeight: ({ theme: e })=>({
            full: "100%",
            screen: "100vh",
            svh: "100svh",
            lvh: "100lvh",
            dvh: "100dvh",
            min: "min-content",
            max: "max-content",
            fit: "fit-content",
            ...e("spacing")
        }),
    minWidth: ({ theme: e })=>({
            full: "100%",
            min: "min-content",
            max: "max-content",
            fit: "fit-content",
            ...e("spacing")
        }),
    objectPosition: {
        bottom: "bottom",
        center: "center",
        left: "left",
        "left-bottom": "left bottom",
        "left-top": "left top",
        right: "right",
        "right-bottom": "right bottom",
        "right-top": "right top",
        top: "top"
    },
    opacity: {
        0: "0",
        5: "0.05",
        10: "0.1",
        15: "0.15",
        20: "0.2",
        25: "0.25",
        30: "0.3",
        35: "0.35",
        40: "0.4",
        45: "0.45",
        50: "0.5",
        55: "0.55",
        60: "0.6",
        65: "0.65",
        70: "0.7",
        75: "0.75",
        80: "0.8",
        85: "0.85",
        90: "0.9",
        95: "0.95",
        100: "1",
        ...h
    },
    order: {
        first: "-9999",
        last: "9999",
        none: "0",
        1: "1",
        2: "2",
        3: "3",
        4: "4",
        5: "5",
        6: "6",
        7: "7",
        8: "8",
        9: "9",
        10: "10",
        11: "11",
        12: "12",
        ...C
    },
    outlineColor: ({ theme: e })=>e("colors"),
    outlineOffset: {
        0: "0px",
        1: "1px",
        2: "2px",
        4: "4px",
        8: "8px",
        ...O
    },
    outlineWidth: {
        0: "0px",
        1: "1px",
        2: "2px",
        4: "4px",
        8: "8px",
        ...O
    },
    padding: ({ theme: e })=>e("spacing"),
    placeholderColor: ({ theme: e })=>e("colors"),
    placeholderOpacity: ({ theme: e })=>e("opacity"),
    ringColor: ({ theme: e })=>({
            DEFAULT: "currentcolor",
            ...e("colors")
        }),
    ringOffsetColor: ({ theme: e })=>e("colors"),
    ringOffsetWidth: {
        0: "0px",
        1: "1px",
        2: "2px",
        4: "4px",
        8: "8px",
        ...O
    },
    ringOpacity: ({ theme: e })=>({
            DEFAULT: "0.5",
            ...e("opacity")
        }),
    ringWidth: {
        DEFAULT: "3px",
        0: "0px",
        1: "1px",
        2: "2px",
        4: "4px",
        8: "8px",
        ...O
    },
    rotate: {
        0: "0deg",
        1: "1deg",
        2: "2deg",
        3: "3deg",
        6: "6deg",
        12: "12deg",
        45: "45deg",
        90: "90deg",
        180: "180deg",
        ...Y
    },
    saturate: {
        0: "0",
        50: ".5",
        100: "1",
        150: "1.5",
        200: "2",
        ...h
    },
    scale: {
        0: "0",
        50: ".5",
        75: ".75",
        90: ".9",
        95: ".95",
        100: "1",
        105: "1.05",
        110: "1.1",
        125: "1.25",
        150: "1.5",
        ...h
    },
    screens: {
        sm: "40rem",
        md: "48rem",
        lg: "64rem",
        xl: "80rem",
        "2xl": "96rem"
    },
    scrollMargin: ({ theme: e })=>e("spacing"),
    scrollPadding: ({ theme: e })=>e("spacing"),
    sepia: {
        0: "0",
        DEFAULT: "100%",
        ...h
    },
    skew: {
        0: "0deg",
        1: "1deg",
        2: "2deg",
        3: "3deg",
        6: "6deg",
        12: "12deg",
        ...Y
    },
    space: ({ theme: e })=>e("spacing"),
    spacing: {
        px: "1px",
        0: "0px",
        .5: "0.125rem",
        1: "0.25rem",
        1.5: "0.375rem",
        2: "0.5rem",
        2.5: "0.625rem",
        3: "0.75rem",
        3.5: "0.875rem",
        4: "1rem",
        5: "1.25rem",
        6: "1.5rem",
        7: "1.75rem",
        8: "2rem",
        9: "2.25rem",
        10: "2.5rem",
        11: "2.75rem",
        12: "3rem",
        14: "3.5rem",
        16: "4rem",
        20: "5rem",
        24: "6rem",
        28: "7rem",
        32: "8rem",
        36: "9rem",
        40: "10rem",
        44: "11rem",
        48: "12rem",
        52: "13rem",
        56: "14rem",
        60: "15rem",
        64: "16rem",
        72: "18rem",
        80: "20rem",
        96: "24rem"
    },
    stroke: ({ theme: e })=>({
            none: "none",
            ...e("colors")
        }),
    strokeWidth: {
        0: "0",
        1: "1",
        2: "2",
        ...C
    },
    supports: {},
    data: {},
    textColor: ({ theme: e })=>e("colors"),
    textDecorationColor: ({ theme: e })=>e("colors"),
    textDecorationThickness: {
        auto: "auto",
        "from-font": "from-font",
        0: "0px",
        1: "1px",
        2: "2px",
        4: "4px",
        8: "8px",
        ...O
    },
    textIndent: ({ theme: e })=>e("spacing"),
    textOpacity: ({ theme: e })=>e("opacity"),
    textUnderlineOffset: {
        auto: "auto",
        0: "0px",
        1: "1px",
        2: "2px",
        4: "4px",
        8: "8px",
        ...O
    },
    transformOrigin: {
        center: "center",
        top: "top",
        "top-right": "top right",
        right: "right",
        "bottom-right": "bottom right",
        bottom: "bottom",
        "bottom-left": "bottom left",
        left: "left",
        "top-left": "top left"
    },
    transitionDelay: {
        0: "0s",
        75: "75ms",
        100: "100ms",
        150: "150ms",
        200: "200ms",
        300: "300ms",
        500: "500ms",
        700: "700ms",
        1e3: "1000ms",
        ...Oe
    },
    transitionDuration: {
        DEFAULT: "150ms",
        0: "0s",
        75: "75ms",
        100: "100ms",
        150: "150ms",
        200: "200ms",
        300: "300ms",
        500: "500ms",
        700: "700ms",
        1e3: "1000ms",
        ...Oe
    },
    transitionProperty: {
        none: "none",
        all: "all",
        DEFAULT: "color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter",
        colors: "color, background-color, border-color, outline-color, text-decoration-color, fill, stroke",
        opacity: "opacity",
        shadow: "box-shadow",
        transform: "transform"
    },
    transitionTimingFunction: {
        DEFAULT: "cubic-bezier(0.4, 0, 0.2, 1)",
        linear: "linear",
        in: "cubic-bezier(0.4, 0, 1, 1)",
        out: "cubic-bezier(0, 0, 0.2, 1)",
        "in-out": "cubic-bezier(0.4, 0, 0.2, 1)"
    },
    translate: ({ theme: e })=>({
            "1/2": "50%",
            "1/3": "33.333333%",
            "2/3": "66.666667%",
            "1/4": "25%",
            "2/4": "50%",
            "3/4": "75%",
            full: "100%",
            ...e("spacing")
        }),
    size: ({ theme: e })=>({
            auto: "auto",
            "1/2": "50%",
            "1/3": "33.333333%",
            "2/3": "66.666667%",
            "1/4": "25%",
            "2/4": "50%",
            "3/4": "75%",
            "1/5": "20%",
            "2/5": "40%",
            "3/5": "60%",
            "4/5": "80%",
            "1/6": "16.666667%",
            "2/6": "33.333333%",
            "3/6": "50%",
            "4/6": "66.666667%",
            "5/6": "83.333333%",
            "1/12": "8.333333%",
            "2/12": "16.666667%",
            "3/12": "25%",
            "4/12": "33.333333%",
            "5/12": "41.666667%",
            "6/12": "50%",
            "7/12": "58.333333%",
            "8/12": "66.666667%",
            "9/12": "75%",
            "10/12": "83.333333%",
            "11/12": "91.666667%",
            full: "100%",
            min: "min-content",
            max: "max-content",
            fit: "fit-content",
            ...e("spacing")
        }),
    width: ({ theme: e })=>({
            auto: "auto",
            "1/2": "50%",
            "1/3": "33.333333%",
            "2/3": "66.666667%",
            "1/4": "25%",
            "2/4": "50%",
            "3/4": "75%",
            "1/5": "20%",
            "2/5": "40%",
            "3/5": "60%",
            "4/5": "80%",
            "1/6": "16.666667%",
            "2/6": "33.333333%",
            "3/6": "50%",
            "4/6": "66.666667%",
            "5/6": "83.333333%",
            "1/12": "8.333333%",
            "2/12": "16.666667%",
            "3/12": "25%",
            "4/12": "33.333333%",
            "5/12": "41.666667%",
            "6/12": "50%",
            "7/12": "58.333333%",
            "8/12": "66.666667%",
            "9/12": "75%",
            "10/12": "83.333333%",
            "11/12": "91.666667%",
            full: "100%",
            screen: "100vw",
            svw: "100svw",
            lvw: "100lvw",
            dvw: "100dvw",
            min: "min-content",
            max: "max-content",
            fit: "fit-content",
            ...e("spacing")
        }),
    willChange: {
        auto: "auto",
        scroll: "scroll-position",
        contents: "contents",
        transform: "transform"
    },
    zIndex: {
        auto: "auto",
        0: "0",
        10: "10",
        20: "20",
        30: "30",
        40: "40",
        50: "50",
        ...C
    }
};
function oe(e) {
    let r = [
        0
    ];
    for(let a = 0; a < e.length; a++)e.charCodeAt(a) === 10 && r.push(a + 1);
    function t(a) {
        let i = 0, l = r.length;
        for(; l > 0;){
            let n = (l | 0) >> 1, u = i + n;
            r[u] <= a ? (i = u + 1, l = l - n - 1) : l = n;
        }
        i -= 1;
        let s = a - r[i];
        return {
            line: i + 1,
            column: s
        };
    }
    function o({ line: a, column: i }) {
        a -= 1, a = Math.min(Math.max(a, 0), r.length - 1);
        let l = r[a], s = r[a + 1] ?? l;
        return Math.min(Math.max(l + i, 0), s);
    }
    return {
        find: t,
        findOffset: o
    };
}
var Pt = 64;
function L(e, r = []) {
    return {
        kind: "rule",
        selector: e,
        nodes: r
    };
}
function k(e, r = "", t = []) {
    return {
        kind: "at-rule",
        name: e,
        params: r,
        nodes: t
    };
}
function E(e, r = []) {
    return e.charCodeAt(0) === Pt ? Ee(e, r) : L(e, r);
}
function $(e, r, t = !1) {
    return {
        kind: "declaration",
        property: e,
        value: r,
        important: t
    };
}
function q(e) {
    return {
        kind: "comment",
        value: e
    };
}
function z(e, r) {
    let t = 0, o = {
        file: null,
        code: ""
    };
    function a(l, s = 0) {
        let n = "", u = "  ".repeat(s);
        if (l.kind === "declaration") {
            if (n += `${u}${l.property}: ${l.value}${l.important ? " !important" : ""};
`, r) {
                t += u.length;
                let c = t;
                t += l.property.length, t += 2, t += l.value?.length ?? 0, l.important && (t += 11);
                let p = t;
                t += 2, l.dst = [
                    o,
                    c,
                    p
                ];
            }
        } else if (l.kind === "rule") {
            if (n += `${u}${l.selector} {
`, r) {
                t += u.length;
                let c = t;
                t += l.selector.length, t += 1;
                let p = t;
                l.dst = [
                    o,
                    c,
                    p
                ], t += 2;
            }
            for (let c of l.nodes)n += a(c, s + 1);
            n += `${u}}
`, r && (t += u.length, t += 2);
        } else if (l.kind === "at-rule") {
            if (l.nodes.length === 0) {
                let c = `${u}${l.name} ${l.params};
`;
                if (r) {
                    t += u.length;
                    let p = t;
                    t += l.name.length, t += 1, t += l.params.length;
                    let W = t;
                    t += 2, l.dst = [
                        o,
                        p,
                        W
                    ];
                }
                return c;
            }
            if (n += `${u}${l.name}${l.params ? ` ${l.params} ` : " "}{
`, r) {
                t += u.length;
                let c = t;
                t += l.name.length, l.params && (t += 1, t += l.params.length), t += 1;
                let p = t;
                l.dst = [
                    o,
                    c,
                    p
                ], t += 2;
            }
            for (let c of l.nodes)n += a(c, s + 1);
            n += `${u}}
`, r && (t += u.length, t += 2);
        } else if (l.kind === "comment") {
            if (n += `${u}/*${l.value}*/
`, r) {
                t += u.length;
                let c = t;
                t += 2 + l.value.length + 2;
                let p = t;
                l.dst = [
                    o,
                    c,
                    p
                ], t += 1;
            }
        } else if (l.kind === "context" || l.kind === "at-root") return "";
        return n;
    }
    let i = "";
    for (let l of e)i += a(l, 0);
    return o.code = i, i;
}
var _ = K(__turbopack_context__.r("[project]/node_modules/postcss/lib/postcss.js [postcss] (ecmascript)"));
var Rt = 33;
function Ue(e, r) {
    let t = new m((n)=>new _.Input(n.code, {
            map: r?.input.map,
            from: n.file ?? void 0
        })), o = new m((n)=>oe(n.code)), a = _.default.root();
    a.source = r;
    function i(n) {
        if (!n || !n[0]) return;
        let u = o.get(n[0]), c = u.find(n[1]), p = u.find(n[2]);
        return {
            input: t.get(n[0]),
            start: {
                line: c.line,
                column: c.column + 1,
                offset: n[1]
            },
            end: {
                line: p.line,
                column: p.column + 1,
                offset: n[2]
            }
        };
    }
    function l(n, u) {
        let c = i(u);
        c ? n.source = c : delete n.source;
    }
    function s(n, u) {
        if (n.kind === "declaration") {
            let c = _.default.decl({
                prop: n.property,
                value: n.value ?? "",
                important: n.important
            });
            l(c, n.src), u.append(c);
        } else if (n.kind === "rule") {
            let c = _.default.rule({
                selector: n.selector
            });
            l(c, n.src), c.raws.semicolon = !0, u.append(c);
            for (let p of n.nodes)s(p, c);
        } else if (n.kind === "at-rule") {
            let c = _.default.atRule({
                name: n.name.slice(1),
                params: n.params
            });
            l(c, n.src), c.raws.semicolon = !0, u.append(c);
            for (let p of n.nodes)s(p, c);
        } else if (n.kind === "comment") {
            let c = _.default.comment({
                text: n.value
            });
            c.raws.left = "", c.raws.right = "", l(c, n.src), u.append(c);
        } else n.kind === "at-root" || n.kind;
    }
    for (let n of e)s(n, a);
    return a;
}
function De(e) {
    let r = new m((i)=>({
            file: i.file ?? i.id ?? null,
            code: i.css
        }));
    function t(i) {
        let l = i.source;
        if (!l) return;
        let s = l.input;
        if (s && l.start !== void 0 && l.end !== void 0) return [
            r.get(s),
            l.start.offset,
            l.end.offset
        ];
    }
    function o(i, l) {
        if (i.type === "decl") {
            let s = $(i.prop, i.value, i.important);
            s.src = t(i), l.push(s);
        } else if (i.type === "rule") {
            let s = E(i.selector);
            s.src = t(i), i.each((n)=>o(n, s.nodes)), l.push(s);
        } else if (i.type === "atrule") {
            let s = k(`@${i.name}`, i.params);
            s.src = t(i), i.each((n)=>o(n, s.nodes)), l.push(s);
        } else if (i.type === "comment") {
            if (i.text.charCodeAt(0) !== Rt) return;
            let s = q(i.text);
            s.src = t(i), l.push(s);
        }
    }
    let a = [];
    return e.each((i)=>o(i, a)), a;
}
var se = __turbopack_context__.r("[project]/node_modules/@tailwindcss/node/dist/index.js [postcss] (ecmascript)"), M = K(__turbopack_context__.r("[externals]/path [external] (path, cjs)")), le = "'", ae = '"';
function ue() {
    let e = new WeakSet;
    function r(t) {
        let o = t.root().source?.input.file;
        if (!o) return;
        let a = t.source?.input.file;
        if (!a || e.has(t)) return;
        let i = t.params[0], l = i[0] === ae && i[i.length - 1] === ae ? ae : i[0] === le && i[i.length - 1] === le ? le : null;
        if (!l) return;
        let s = t.params.slice(1, -1), n = "";
        if (s.startsWith("!") && (s = s.slice(1), n = "!"), !s.startsWith("./") && !s.startsWith("../")) return;
        let u = M.default.posix.join((0, se.normalizePath)(M.default.dirname(a)), s), c = M.default.posix.dirname((0, se.normalizePath)(o)), p = M.default.posix.relative(c, u);
        p.startsWith(".") || (p = "./" + p), t.params = l + n + p + l, e.add(t);
    }
    return {
        postcssPlugin: "tailwindcss-postcss-fix-relative-paths",
        Once (t) {
            t.walkAtRules(/source|plugin|config/, r);
        }
    };
}
var f = v.env.DEBUG, ce = new Ke.default({
    maxSize: 50
});
function Ot(e, r) {
    let t = `${e}:${r.base ?? ""}:${JSON.stringify(r.optimize)}`;
    if (ce.has(t)) return ce.get(t);
    let o = {
        mtimes: new Map,
        compiler: null,
        scanner: null,
        tailwindCssAst: [],
        cachedPostCssAst: Z.default.root(),
        optimizedPostCssAst: Z.default.root(),
        fullRebuildPaths: []
    };
    return ce.set(t, o), o;
}
function _t(e = {}) {
    let r = e.base ?? process.cwd(), t = e.optimize ?? process.env.NODE_ENV === "production";
    return {
        postcssPlugin: "@tailwindcss/postcss",
        plugins: [
            ue(),
            {
                postcssPlugin: "tailwindcss",
                async Once (o, { result: a }) {
                    var W = [];
                    try {
                        let i = me(W, new v.Instrumentation);
                        let l = a.opts.from ?? "";
                        let s = l.endsWith(".module.css");
                        f && i.start(`[@tailwindcss/postcss] ${(0, b.relative)(r, l)}`);
                        {
                            f && i.start("Quick bail check");
                            let x = !0;
                            if (o.walkAtRules((d)=>{
                                if (d.name === "import" || d.name === "reference" || d.name === "theme" || d.name === "variant" || d.name === "config" || d.name === "plugin" || d.name === "apply" || d.name === "tailwind") return x = !1, !1;
                            }), x) return;
                            f && i.end("Quick bail check");
                        }
                        let n = Ot(l, e);
                        let u = b.default.dirname(b.default.resolve(l));
                        let c = n.compiler === null;
                        async function p() {
                            f && i.start("Setup compiler"), n.fullRebuildPaths.length > 0 && !c && (0, Le.clearRequireCache)(n.fullRebuildPaths), n.fullRebuildPaths = [], f && i.start("PostCSS AST -> Tailwind CSS AST");
                            let x = De(o);
                            f && i.end("PostCSS AST -> Tailwind CSS AST"), f && i.start("Create compiler");
                            let d = await (0, v.compileAst)(x, {
                                from: a.opts.from,
                                base: u,
                                shouldRewriteUrls: !0,
                                onDependency: (J)=>n.fullRebuildPaths.push(J),
                                polyfills: s ? v.Polyfills.All ^ v.Polyfills.AtProperty : v.Polyfills.All
                            });
                            return f && i.end("Create compiler"), f && i.end("Setup compiler"), d;
                        }
                        try {
                            if (n.compiler ??= p(), (await n.compiler).features === v.Features.None) return;
                            let x = "incremental";
                            f && i.start("Register full rebuild paths");
                            {
                                for (let g of n.fullRebuildPaths)a.messages.push({
                                    type: "dependency",
                                    plugin: "@tailwindcss/postcss",
                                    file: b.default.resolve(g),
                                    parent: a.opts.from
                                });
                                let R = a.messages.flatMap((g)=>g.type !== "dependency" ? [] : g.file);
                                R.push(l);
                                for (let g of R){
                                    let S = Ie.default.statSync(g, {
                                        throwIfNoEntry: !1
                                    })?.mtimeMs ?? null;
                                    if (S === null) {
                                        g === l && (x = "full");
                                        continue;
                                    }
                                    n.mtimes.get(g) !== S && (x = "full", n.mtimes.set(g, S));
                                }
                            }
                            f && i.end("Register full rebuild paths"), x === "full" && !c && (n.compiler = p());
                            let d = await n.compiler;
                            if (n.scanner === null || x === "full") {
                                f && i.start("Setup scanner");
                                let R = (d.root === "none" ? [] : d.root === null ? [
                                    {
                                        base: r,
                                        pattern: "**/*",
                                        negated: !1
                                    }
                                ] : [
                                    {
                                        ...d.root,
                                        negated: !1
                                    }
                                ]).concat(d.sources);
                                n.scanner = new ze.Scanner({
                                    sources: R
                                }), f && i.end("Setup scanner");
                            }
                            f && i.start("Scan for candidates");
                            let J = d.features & v.Features.Utilities ? n.scanner.scan() : [];
                            if (f && i.end("Scan for candidates"), d.features & v.Features.Utilities) {
                                f && i.start("Register dependency messages");
                                let R = b.default.resolve(r, l);
                                for (let g of n.scanner.files){
                                    let S = b.default.resolve(g);
                                    S !== R && a.messages.push({
                                        type: "dependency",
                                        plugin: "@tailwindcss/postcss",
                                        file: S,
                                        parent: a.opts.from
                                    });
                                }
                                for (let { base: g, pattern: S } of n.scanner.globs)S === "*" && r === g || (S === "" ? a.messages.push({
                                    type: "dependency",
                                    plugin: "@tailwindcss/postcss",
                                    file: b.default.resolve(g),
                                    parent: a.opts.from
                                }) : a.messages.push({
                                    type: "dir-dependency",
                                    plugin: "@tailwindcss/postcss",
                                    dir: b.default.resolve(g),
                                    glob: S,
                                    parent: a.opts.from
                                }));
                                f && i.end("Register dependency messages");
                            }
                            f && i.start("Build utilities");
                            let B = d.build(J);
                            if (f && i.end("Build utilities"), n.tailwindCssAst !== B) if (t) {
                                f && i.start("Optimization"), f && i.start("AST -> CSS");
                                let R = z(B);
                                f && i.end("AST -> CSS"), f && i.start("Lightning CSS");
                                let g = (0, v.optimize)(R, {
                                    minify: typeof t == "object" ? t.minify : !0
                                });
                                f && i.end("Lightning CSS"), f && i.start("CSS -> PostCSS AST"), n.optimizedPostCssAst = Z.default.parse(g.code, a.opts), f && i.end("CSS -> PostCSS AST"), f && i.end("Optimization");
                            } else f && i.start("Transform Tailwind CSS AST into PostCSS AST"), n.cachedPostCssAst = Ue(B, o.source), f && i.end("Transform Tailwind CSS AST into PostCSS AST");
                            n.tailwindCssAst = B, f && i.start("Update PostCSS AST"), o.removeAll(), o.append(t ? n.optimizedPostCssAst.clone().nodes : n.cachedPostCssAst.clone().nodes), o.raws.indent = "  ", f && i.end("Update PostCSS AST"), f && i.end(`[@tailwindcss/postcss] ${(0, b.relative)(r, l)}`);
                        } catch (x) {
                            n.compiler = null;
                            for (let d of n.fullRebuildPaths)a.messages.push({
                                type: "dependency",
                                plugin: "@tailwindcss/postcss",
                                file: b.default.resolve(d),
                                parent: a.opts.from
                            });
                            console.error(x), o.removeAll();
                        }
                    } catch (je) {
                        var Me = je, We = !0;
                    } finally{
                        ge(W, Me, We);
                    }
                }
            }
        ]
    };
}
var Fe = Object.assign(_t, {
    postcss: !0
});
module.exports = Fe;
}}),

};

//# sourceMappingURL=node_modules_%40tailwindcss_74f538e4._.js.map