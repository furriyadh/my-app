{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 268, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DELL/my-site/src/app/api/google-ads/route.ts"],"sourcesContent":["// src/app/api/google-ads/route.ts\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport { createClient } from '@supabase/supabase-js';\r\n\r\n// @ts-ignore - Google Ads API doesn't have official TypeScript types\r\nconst { GoogleAdsApi } = require('google-ads-api');\r\n\r\n// إنشاء Supabase client للخادم\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;\r\nconst supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY!;\r\n\r\nconst supabase = createClient(supabaseUrl, supabaseServiceKey);\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    console.log('🚀 Next.js API Route: استدعاء Google Ads data مع Client Library...');\r\n    \r\n    const body = await request.json();\r\n    const { loginCustomerId, startDate, endDate, dataType } = body;\r\n    \r\n    console.log('📥 Request body:', { loginCustomerId, startDate, endDate, dataType });\r\n    \r\n    // Get environment variables\r\n    const refreshToken = process.env.GOOGLE_REFRESH_TOKEN;\r\n    const clientId = process.env.GOOGLE_CLIENT_ID;\r\n    const clientSecret = process.env.GOOGLE_CLIENT_SECRET;\r\n    const developerId = process.env.GOOGLE_DEVELOPER_TOKEN;\r\n    const mccCustomerId = process.env.MCC_LOGIN_CUSTOMER_ID;\r\n\r\n    console.log('🔑 Environment check:', {\r\n      hasRefreshToken: !!refreshToken,\r\n      hasClientId: !!clientId,\r\n      hasClientSecret: !!clientSecret,\r\n      hasDeveloperToken: !!developerId,\r\n      hasMccCustomerId: !!mccCustomerId\r\n    });\r\n\r\n    if (!refreshToken || !clientId || !clientSecret || !developerId) {\r\n      return NextResponse.json(\r\n        { \r\n          success: false, \r\n          error: 'Missing required environment variables',\r\n          details: {\r\n            hasRefreshToken: !!refreshToken,\r\n            hasClientId: !!clientId,\r\n            hasClientSecret: !!clientSecret,\r\n            hasDeveloperToken: !!developerId,\r\n            hasMccCustomerId: !!mccCustomerId\r\n          }\r\n        },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // إنشاء Google Ads API client\r\n    console.log('🔧 Creating Google Ads API client...');\r\n    \r\n    const client = new GoogleAdsApi({\r\n      client_id: clientId,\r\n      client_secret: clientSecret,\r\n      developer_token: developerId,\r\n    });\r\n\r\n    // Format customer ID (remove dashes)\r\n    const formattedCustomerId = loginCustomerId?.replace(/-/g, '') || '3271710441';\r\n    console.log('🎯 Using customer ID:', formattedCustomerId);\r\n\r\n    // إنشاء customer instance\r\n    console.log('👤 Creating customer instance...');\r\n    \r\n    const customer = client.Customer({\r\n      customer_id: formattedCustomerId,\r\n      refresh_token: refreshToken,\r\n      login_customer_id: mccCustomerId?.replace(/-/g, '') || undefined,\r\n    });\r\n\r\n    // تحديد التواريخ (آخر 7 أيام)\r\n    const endDateFormatted = endDate || new Date().toISOString().split('T')[0];\r\n    const startDateFormatted = startDate || new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString().split('T')[0];\r\n    \r\n    console.log('📅 Date range:', { startDateFormatted, endDateFormatted });\r\n\r\n    // Google Ads API query المحدث\r\n    const query = `\r\n      SELECT \r\n        campaign.id,\r\n        campaign.name,\r\n        campaign.status,\r\n        metrics.cost_micros,\r\n        metrics.clicks,\r\n        metrics.impressions,\r\n        segments.date\r\n      FROM campaign \r\n      WHERE campaign.status = 'ENABLED' \r\n        AND segments.date >= '${startDateFormatted}'\r\n        AND segments.date <= '${endDateFormatted}'\r\n    `;\r\n\r\n    console.log('📡 Executing Google Ads query...');\r\n    console.log('🔍 Query:', query.trim());\r\n\r\n    // تنفيذ الاستعلام\r\n    const results = await customer.query(query.trim());\r\n    \r\n    console.log('✅ Query executed successfully');\r\n    console.log('📊 Results count:', results.length);\r\n\r\n    // Transform data to match Frontend expectations\r\n    const transformedData = results.map((row: any, index: number) => {\r\n      const campaign = row.campaign || {};\r\n      const metrics = row.metrics || {};\r\n      const segments = row.segments || {};\r\n      \r\n      return {\r\n        id: campaign.id?.toString() || `campaign_${index}`,\r\n        name: campaign.name || 'Unknown Campaign',\r\n        status: campaign.status || 'UNKNOWN',\r\n        cost: metrics.cost_micros ? (parseInt(metrics.cost_micros) / 1000000).toFixed(2) : '0.00',\r\n        clicks: parseInt(metrics.clicks) || 0,\r\n        impressions: parseInt(metrics.impressions) || 0,\r\n        date: segments.date || 'unknown',\r\n        // إضافة خصائص إضافية للتوافق مع Frontend\r\n        type: 'campaign',\r\n        platform: 'google_ads',\r\n        currency: 'USD'\r\n      };\r\n    });\r\n\r\n    // تجميع البيانات حسب الحملة (إذا كان هناك عدة أيام)\r\n    const campaignSummary = transformedData.reduce((acc: any, row: any) => {\r\n      const campaignId = row.id;\r\n      if (!acc[campaignId]) {\r\n        acc[campaignId] = {\r\n          id: row.id,\r\n          name: row.name,\r\n          status: row.status,\r\n          cost: 0,\r\n          clicks: 0,\r\n          impressions: 0,\r\n          dates: [],\r\n          type: row.type,\r\n          platform: row.platform,\r\n          currency: row.currency\r\n        };\r\n      }\r\n      \r\n      acc[campaignId].cost += parseFloat(row.cost);\r\n      acc[campaignId].clicks += parseInt(row.clicks);\r\n      acc[campaignId].impressions += parseInt(row.impressions);\r\n      acc[campaignId].dates.push(row.date);\r\n      \r\n      return acc;\r\n    }, {});\r\n\r\n    const finalData = Object.values(campaignSummary).map((campaign: any) => ({\r\n      ...campaign,\r\n      cost: campaign.cost.toFixed(2),\r\n      // إضافة معلومات إضافية\r\n      ctr: campaign.impressions > 0 ? ((campaign.clicks / campaign.impressions) * 100).toFixed(2) : '0.00',\r\n      cpc: campaign.clicks > 0 ? (campaign.cost / campaign.clicks).toFixed(2) : '0.00',\r\n      dateRange: `${startDateFormatted} to ${endDateFormatted}`\r\n    }));\r\n\r\n    console.log('🔄 Data transformed and summarized:', finalData);\r\n\r\n    // Save data to Supabase Database with proper structure\r\n    try {\r\n      console.log('💾 Saving data to Supabase...');\r\n      \r\n      // إنشاء record واحد للحفظ\r\n      const supabaseRecord = {\r\n        customer_id: formattedCustomerId,\r\n        campaigns_data: finalData, // حفظ البيانات كـ JSON\r\n        total_campaigns: finalData.length,\r\n        total_cost: finalData.reduce((sum: number, campaign: any) => sum + parseFloat(campaign.cost), 0).toFixed(2),\r\n        total_clicks: finalData.reduce((sum: number, campaign: any) => sum + campaign.clicks, 0),\r\n        total_impressions: finalData.reduce((sum: number, campaign: any) => sum + campaign.impressions, 0),\r\n        date_range_start: startDateFormatted,\r\n        date_range_end: endDateFormatted,\r\n        fetched_at: new Date().toISOString(),\r\n        data_type: dataType || 'campaigns'\r\n      };\r\n\r\n      const { error: saveError } = await supabase\r\n        .from('google_ads_campaigns')\r\n        .upsert(supabaseRecord, {\r\n          onConflict: 'customer_id,date_range_start,date_range_end'\r\n        });\r\n\r\n      if (saveError) {\r\n        console.error('❌ Supabase save error:', saveError);\r\n      } else {\r\n        console.log('✅ Data saved to Supabase successfully');\r\n      }\r\n    } catch (saveError) {\r\n      console.error('❌ Supabase save failed:', saveError);\r\n      // Continue even if save fails\r\n    }\r\n    \r\n    // إرجاع البيانات بالتنسيق المتوقع من Frontend\r\n    const response = {\r\n      success: true,\r\n      data: finalData,\r\n      summary: {\r\n        totalCampaigns: finalData.length,\r\n        totalCost: finalData.reduce((sum: number, campaign: any) => sum + parseFloat(campaign.cost), 0).toFixed(2),\r\n        totalClicks: finalData.reduce((sum: number, campaign: any) => sum + campaign.clicks, 0),\r\n        totalImpressions: finalData.reduce((sum: number, campaign: any) => sum + campaign.impressions, 0),\r\n        dateRange: `${startDateFormatted} to ${endDateFormatted}`\r\n      },\r\n      metadata: {\r\n        query: query.trim(),\r\n        customerId: formattedCustomerId,\r\n        fetchedAt: new Date().toISOString(),\r\n        source: 'google_ads_api'\r\n      }\r\n    };\r\n\r\n    console.log('📤 Sending response:', response);\r\n    \r\n    return NextResponse.json(response);\r\n    \r\n  } catch (error: any) {\r\n    console.error('💥 خطأ في Google Ads API:', error);\r\n    \r\n    // تفصيل أكثر للأخطاء\r\n    let errorMessage = error.message || 'Unknown error';\r\n    let errorDetails = {};\r\n    \r\n    if (error.details) {\r\n      errorDetails = error.details;\r\n    }\r\n    \r\n    if (error.failure) {\r\n      errorDetails = { ...errorDetails, failure: error.failure };\r\n    }\r\n    \r\n    if (error.errors) {\r\n      errorDetails = { ...errorDetails, errors: error.errors };\r\n    }\r\n    \r\n    return NextResponse.json(\r\n      { \r\n        success: false, \r\n        error: 'Google Ads API error',\r\n        message: errorMessage,\r\n        details: errorDetails,\r\n        timestamp: new Date().toISOString()\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\nexport async function GET(request: NextRequest) {\r\n  return NextResponse.json({ \r\n    message: 'Google Ads API Route is working with Client Library. Use POST method to fetch data.',\r\n    timestamp: new Date().toISOString(),\r\n    library: 'google-ads-api',\r\n    status: 'ready',\r\n    endpoints: {\r\n      campaigns: 'POST /api/google-ads with dataType: campaigns',\r\n      keywords: 'POST /api/google-ads with dataType: keywords',\r\n      ads: 'POST /api/google-ads with dataType: ads'\r\n    }\r\n  });\r\n}\r\n\r\n"],"names":[],"mappings":"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","debugId":null}}]
}