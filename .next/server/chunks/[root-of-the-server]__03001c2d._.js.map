{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 268, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/DELL/my-site/src/app/api/hybrid/setup/route.ts"],"sourcesContent":["// src/app/api/hybrid/setup/route.ts\r\n// API endpoint لإعداد النهج المختلط (Hybrid Management) - مصحح ومتكامل 100%\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\n\r\n// استيراد Google Ads API مع التعامل مع الأخطاء المحتملة\r\nlet GoogleAdsApi: any;\r\n\r\ntry {\r\n  const googleAdsModule = require('google-ads-api');\r\n  GoogleAdsApi = googleAdsModule.GoogleAdsApi;\r\n} catch (error) {\r\n  console.warn('Google Ads API not available, using mock implementation');\r\n}\r\n\r\ninterface HybridSetupRequest {\r\n  accountType: 'hybrid';\r\n  customerId?: string;\r\n  customerEmail: string;\r\n  businessName: string;\r\n  managementLevel: 'collaborative' | 'advisory' | 'shared';\r\n  collaborationPreferences: {\r\n    decisionMaking: 'joint' | 'client_lead' | 'furriyadh_lead';\r\n    reportingFrequency: 'daily' | 'weekly' | 'monthly';\r\n    communicationMethod: 'email' | 'slack' | 'teams' | 'phone';\r\n    approvalRequired: boolean;\r\n    budgetControl: 'shared' | 'client' | 'furriyadh';\r\n  };\r\n  trainingRequirements: {\r\n    needsTraining: boolean;\r\n    trainingAreas: string[];\r\n    trainingFormat: 'online' | 'in_person' | 'hybrid';\r\n  };\r\n  accessLevel: {\r\n    campaignCreation: boolean;\r\n    budgetModification: boolean;\r\n    keywordManagement: boolean;\r\n    adCreation: boolean;\r\n    reporting: boolean;\r\n  };\r\n}\r\n\r\ninterface HybridSetupResponse {\r\n  success: boolean;\r\n  setupId?: string;\r\n  customerId?: string;\r\n  managementLevel?: string;\r\n  collaborationPlan?: any;\r\n  trainingSchedule?: any;\r\n  accessPermissions?: any;\r\n  error?: string;\r\n  message?: string;\r\n}\r\n\r\nclass HybridManagementSetup {\r\n  private client: any;\r\n  private mccCustomerId: string;\r\n  private isApiAvailable: boolean;\r\n\r\n  constructor() {\r\n    this.isApiAvailable = !!GoogleAdsApi;\r\n    this.mccCustomerId = process.env.MCC_LOGIN_CUSTOMER_ID || '';\r\n\r\n    if (this.isApiAvailable) {\r\n      this.client = new GoogleAdsApi({\r\n        client_id: process.env.GOOGLE_CLIENT_ID!,\r\n        client_secret: process.env.GOOGLE_CLIENT_SECRET!,\r\n        developer_token: process.env.GOOGLE_DEVELOPER_TOKEN!,\r\n      });\r\n    }\r\n  }\r\n\r\n  async setupHybridManagement(setupData: HybridSetupRequest): Promise<HybridSetupResponse> {\r\n    try {\r\n      console.log('🤝 Setting up hybrid management approach...');\r\n      \r\n      if (!this.isApiAvailable) {\r\n        return this.setupMockHybridManagement(setupData);\r\n      }\r\n\r\n      // الخطوة 1: إنشاء أو ربط الحساب\r\n      const accountResult = await this.setupAccount(setupData);\r\n      \r\n      if (!accountResult.success) {\r\n        throw new Error(accountResult.error || 'Account setup failed');\r\n      }\r\n\r\n      // الخطوة 2: إعداد مستويات الوصول\r\n      const accessResult = await this.configureAccessLevels(accountResult.customerId!, setupData);\r\n      \r\n      if (!accessResult.success) {\r\n        throw new Error(accessResult.error || 'Access configuration failed');\r\n      }\r\n\r\n      // الخطوة 3: إنشاء خطة التعاون\r\n      const collaborationPlan = await this.createCollaborationPlan(setupData);\r\n\r\n      // الخطوة 4: جدولة التدريب (إذا كان مطلوباً)\r\n      const trainingSchedule = setupData.trainingRequirements.needsTraining ? \r\n        await this.scheduleTraining(setupData) : null;\r\n\r\n      // الخطوة 5: حفظ إعدادات النهج المختلط\r\n      const setupId = await this.saveHybridSetup({\r\n        customerId: accountResult.customerId,\r\n        customerEmail: setupData.customerEmail,\r\n        businessName: setupData.businessName,\r\n        managementLevel: setupData.managementLevel,\r\n        collaborationPreferences: setupData.collaborationPreferences,\r\n        trainingRequirements: setupData.trainingRequirements,\r\n        accessLevel: setupData.accessLevel,\r\n        collaborationPlan,\r\n        trainingSchedule,\r\n        setupAt: new Date().toISOString(),\r\n        status: 'ACTIVE'\r\n      });\r\n\r\n      console.log('✅ Hybrid management setup completed successfully');\r\n\r\n      return {\r\n        success: true,\r\n        setupId: setupId,\r\n        customerId: accountResult.customerId,\r\n        managementLevel: setupData.managementLevel,\r\n        collaborationPlan: collaborationPlan,\r\n        trainingSchedule: trainingSchedule,\r\n        accessPermissions: accessResult.permissions,\r\n        message: 'Hybrid management setup completed successfully'\r\n      };\r\n\r\n    } catch (error) {\r\n      console.error('❌ Error setting up hybrid management:', error);\r\n      \r\n      return {\r\n        success: false,\r\n        error: this.handleHybridError(error),\r\n        message: error instanceof Error ? error.message : 'Unknown error'\r\n      };\r\n    }\r\n  }\r\n\r\n  private async setupMockHybridManagement(setupData: HybridSetupRequest): Promise<HybridSetupResponse> {\r\n    console.log('🎭 Setting up mock hybrid management (Google Ads API not available)...');\r\n    \r\n    // محاكاة إعداد النهج المختلط للاختبار\r\n    await new Promise(resolve => setTimeout(resolve, 2000));\r\n    \r\n    const mockSetupId = `hybrid_mock_${Date.now()}`;\r\n    const mockCustomerId = setupData.customerId || `mock_customer_${Date.now()}`;\r\n    \r\n    const collaborationPlan = await this.createCollaborationPlan(setupData);\r\n    const trainingSchedule = setupData.trainingRequirements.needsTraining ? \r\n      await this.scheduleTraining(setupData) : null;\r\n    \r\n    return {\r\n      success: true,\r\n      setupId: mockSetupId,\r\n      customerId: mockCustomerId,\r\n      managementLevel: setupData.managementLevel,\r\n      collaborationPlan: collaborationPlan,\r\n      trainingSchedule: trainingSchedule,\r\n      accessPermissions: {\r\n        campaignCreation: setupData.accessLevel.campaignCreation,\r\n        budgetModification: setupData.accessLevel.budgetModification,\r\n        keywordManagement: setupData.accessLevel.keywordManagement,\r\n        adCreation: setupData.accessLevel.adCreation,\r\n        reporting: setupData.accessLevel.reporting,\r\n        managementLevel: setupData.managementLevel,\r\n        approvalRequired: setupData.collaborationPreferences.approvalRequired\r\n      },\r\n      message: 'Mock hybrid management setup completed successfully (for testing)'\r\n    };\r\n  }\r\n\r\n  private async setupAccount(setupData: HybridSetupRequest): Promise<any> {\r\n    try {\r\n      console.log('🏢 Setting up account for hybrid management...');\r\n\r\n      if (setupData.customerId) {\r\n        // ربط حساب موجود\r\n        return await this.linkExistingAccount(setupData.customerId);\r\n      } else {\r\n        // إنشاء حساب جديد\r\n        return await this.createNewAccount(setupData);\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Account setup failed:', error);\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Account setup failed'\r\n      };\r\n    }\r\n  }\r\n\r\n  private async linkExistingAccount(customerId: string): Promise<any> {\r\n    try {\r\n      console.log(`🔗 Linking existing account: ${customerId}`);\r\n\r\n      // التحقق من صحة الحساب\r\n      const customer = this.client.Customer({\r\n        customer_id: customerId,\r\n        refresh_token: process.env.GOOGLE_REFRESH_TOKEN!,\r\n      });\r\n\r\n      const query = `\r\n        SELECT\r\n          customer.id,\r\n          customer.descriptive_name,\r\n          customer.currency_code,\r\n          customer.status\r\n        FROM customer\r\n        LIMIT 1\r\n      `;\r\n\r\n      const response = await customer.query(query);\r\n      \r\n      if (response && response.length > 0) {\r\n        const account = response[0].customer;\r\n        \r\n        return {\r\n          success: true,\r\n          customerId: account.id.toString(),\r\n          accountName: account.descriptive_name,\r\n          currency: account.currency_code,\r\n          isExisting: true\r\n        };\r\n      } else {\r\n        throw new Error('Account not found or access denied');\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Failed to link existing account:', error);\r\n      return {\r\n        success: false,\r\n        error: 'Failed to link existing account'\r\n      };\r\n    }\r\n  }\r\n\r\n  private async createNewAccount(setupData: HybridSetupRequest): Promise<any> {\r\n    try {\r\n      console.log('🆕 Creating new account for hybrid management...');\r\n\r\n      // استخدام MCC لإنشاء حساب جديد\r\n      const mccCustomer = this.client.Customer({\r\n        customer_id: this.mccCustomerId,\r\n        refresh_token: process.env.GOOGLE_REFRESH_TOKEN!,\r\n      });\r\n\r\n      // استخدام الطريقة الصحيحة لإنشاء العملاء\r\n      const customerOperation = {\r\n        create: {\r\n          descriptive_name: setupData.businessName,\r\n          currency_code: 'USD', // يمكن تخصيصها لاحقاً\r\n          time_zone: 'America/New_York', // يمكن تخصيصها لاحقاً\r\n        }\r\n      };\r\n\r\n      // استخدام الطريقة الصحيحة للـ mutation\r\n      const customerService = mccCustomer.customers;\r\n      const response = await customerService.mutateCustomers([customerOperation]);\r\n      \r\n      if (response && response.length > 0 && response[0].results && response[0].results.length > 0) {\r\n        const customerId = response[0].results[0].resource_name.split('/')[1];\r\n        \r\n        console.log(`✅ New account created: ${customerId}`);\r\n        \r\n        return {\r\n          success: true,\r\n          customerId: customerId,\r\n          accountName: setupData.businessName,\r\n          currency: 'USD',\r\n          isExisting: false\r\n        };\r\n      } else {\r\n        throw new Error('Failed to create new account');\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Failed to create new account:', error);\r\n      return {\r\n        success: false,\r\n        error: 'Failed to create new account'\r\n      };\r\n    }\r\n  }\r\n\r\n  private async configureAccessLevels(customerId: string, setupData: HybridSetupRequest): Promise<any> {\r\n    try {\r\n      console.log('🔐 Configuring access levels...');\r\n\r\n      // إنشاء مستويات الوصول بناءً على التفضيلات\r\n      const permissions = {\r\n        campaignCreation: setupData.accessLevel.campaignCreation,\r\n        budgetModification: setupData.accessLevel.budgetModification,\r\n        keywordManagement: setupData.accessLevel.keywordManagement,\r\n        adCreation: setupData.accessLevel.adCreation,\r\n        reporting: setupData.accessLevel.reporting,\r\n        managementLevel: setupData.managementLevel,\r\n        approvalRequired: setupData.collaborationPreferences.approvalRequired\r\n      };\r\n\r\n      // هنا يمكن إضافة كود لإعداد الصلاحيات في Google Ads\r\n      // مثل إنشاء user access أو manager links مع صلاحيات محددة\r\n\r\n      console.log('✅ Access levels configured');\r\n      \r\n      return {\r\n        success: true,\r\n        permissions: permissions\r\n      };\r\n\r\n    } catch (error) {\r\n      console.error('Failed to configure access levels:', error);\r\n      return {\r\n        success: false,\r\n        error: 'Failed to configure access levels'\r\n      };\r\n    }\r\n  }\r\n\r\n  private async createCollaborationPlan(setupData: HybridSetupRequest): Promise<any> {\r\n    const plan = {\r\n      managementLevel: setupData.managementLevel,\r\n      decisionMaking: setupData.collaborationPreferences.decisionMaking,\r\n      reportingSchedule: {\r\n        frequency: setupData.collaborationPreferences.reportingFrequency,\r\n        method: setupData.collaborationPreferences.communicationMethod,\r\n        nextReport: this.calculateNextReportDate(setupData.collaborationPreferences.reportingFrequency)\r\n      },\r\n      budgetControl: setupData.collaborationPreferences.budgetControl,\r\n      approvalWorkflow: {\r\n        required: setupData.collaborationPreferences.approvalRequired,\r\n        threshold: setupData.collaborationPreferences.approvalRequired ? 1000 : null, // $1000 threshold\r\n        approvers: [setupData.customerEmail]\r\n      },\r\n      communicationPlan: {\r\n        primaryMethod: setupData.collaborationPreferences.communicationMethod,\r\n        escalationPath: ['email', 'phone'],\r\n        responseTime: '24 hours'\r\n      },\r\n      responsibilities: this.defineResponsibilities(setupData.managementLevel)\r\n    };\r\n\r\n    return plan;\r\n  }\r\n\r\n  private async scheduleTraining(setupData: HybridSetupRequest): Promise<any> {\r\n    if (!setupData.trainingRequirements.needsTraining) {\r\n      return null;\r\n    }\r\n\r\n    const trainingSchedule = {\r\n      areas: setupData.trainingRequirements.trainingAreas,\r\n      format: setupData.trainingRequirements.trainingFormat,\r\n      sessions: setupData.trainingRequirements.trainingAreas.map((area, index) => ({\r\n        topic: area,\r\n        scheduledDate: new Date(Date.now() + (index + 1) * 7 * 24 * 60 * 60 * 1000).toISOString(), // أسبوعياً\r\n        duration: '2 hours',\r\n        format: setupData.trainingRequirements.trainingFormat,\r\n        status: 'SCHEDULED'\r\n      })),\r\n      totalDuration: `${setupData.trainingRequirements.trainingAreas.length * 2} hours`,\r\n      startDate: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString(), // بعد أسبوع\r\n      completionTarget: new Date(Date.now() + (setupData.trainingRequirements.trainingAreas.length + 1) * 7 * 24 * 60 * 60 * 1000).toISOString()\r\n    };\r\n\r\n    return trainingSchedule;\r\n  }\r\n\r\n  private async saveHybridSetup(setupData: any): Promise<string> {\r\n    try {\r\n      console.log('💾 Saving hybrid setup data...');\r\n      \r\n      const setupId = `hybrid_${setupData.customerId}_${Date.now()}`;\r\n      \r\n      // هنا يمكن إضافة كود Supabase لحفظ البيانات\r\n      /*\r\n      const { createClient } = require('@supabase/supabase-js');\r\n      const supabase = createClient(\r\n        process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n        process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\r\n      );\r\n      \r\n      const { data, error } = await supabase\r\n        .from('hybrid_setups')\r\n        .insert([{ ...setupData, setupId }]);\r\n        \r\n      if (error) {\r\n        console.error('Database save error:', error);\r\n      }\r\n      */\r\n      \r\n      // للآن، نحفظ في localStorage كـ backup (في بيئة المتصفح)\r\n      if (typeof window !== 'undefined') {\r\n        const existingSetups = JSON.parse(localStorage.getItem('furriyadh_hybrid_setups') || '[]');\r\n        existingSetups.push({ ...setupData, setupId });\r\n        localStorage.setItem('furriyadh_hybrid_setups', JSON.stringify(existingSetups));\r\n        localStorage.setItem('furriyadh_account_type', 'hybrid');\r\n        localStorage.setItem('furriyadh_customer_id', setupData.customerId);\r\n      }\r\n      \r\n      return setupId;\r\n      \r\n    } catch (error) {\r\n      console.error('❌ Error saving hybrid setup:', error);\r\n      return `hybrid_${Date.now()}`;\r\n    }\r\n  }\r\n\r\n  private calculateNextReportDate(frequency: string): string {\r\n    const now = new Date();\r\n    \r\n    switch (frequency) {\r\n      case 'daily':\r\n        return new Date(now.getTime() + 24 * 60 * 60 * 1000).toISOString();\r\n      case 'weekly':\r\n        return new Date(now.getTime() + 7 * 24 * 60 * 60 * 1000).toISOString();\r\n      case 'monthly':\r\n        return new Date(now.getFullYear(), now.getMonth() + 1, now.getDate()).toISOString();\r\n      default:\r\n        return new Date(now.getTime() + 7 * 24 * 60 * 60 * 1000).toISOString();\r\n    }\r\n  }\r\n\r\n  private defineResponsibilities(managementLevel: string): any {\r\n    const responsibilities = {\r\n      collaborative: {\r\n        furriyadh: [\r\n          'Campaign optimization',\r\n          'Performance monitoring',\r\n          'Technical support',\r\n          'Best practices guidance'\r\n        ],\r\n        client: [\r\n          'Budget approval',\r\n          'Creative approval',\r\n          'Strategic decisions',\r\n          'Business insights'\r\n        ],\r\n        shared: [\r\n          'Campaign planning',\r\n          'Keyword research',\r\n          'Performance analysis',\r\n          'Reporting review'\r\n        ]\r\n      },\r\n      advisory: {\r\n        furriyadh: [\r\n          'Strategic recommendations',\r\n          'Performance analysis',\r\n          'Industry insights',\r\n          'Training and guidance'\r\n        ],\r\n        client: [\r\n          'Campaign execution',\r\n          'Budget management',\r\n          'Creative development',\r\n          'Final decisions'\r\n        ],\r\n        shared: [\r\n          'Goal setting',\r\n          'Performance review',\r\n          'Strategy planning'\r\n        ]\r\n      },\r\n      shared: {\r\n        furriyadh: [\r\n          'Technical implementation',\r\n          'Optimization execution',\r\n          'Performance monitoring',\r\n          'Reporting'\r\n        ],\r\n        client: [\r\n          'Strategic direction',\r\n          'Budget allocation',\r\n          'Creative input',\r\n          'Business context'\r\n        ],\r\n        shared: [\r\n          'Campaign planning',\r\n          'Performance analysis',\r\n          'Decision making',\r\n          'Goal setting'\r\n        ]\r\n      }\r\n    };\r\n\r\n    return responsibilities[managementLevel as keyof typeof responsibilities] || responsibilities.collaborative;\r\n  }\r\n\r\n  private handleHybridError(error: any): string {\r\n    if (error.message) {\r\n      if (error.message.includes('PERMISSION_DENIED')) {\r\n        return 'Permission denied - check account access rights';\r\n      } else if (error.message.includes('INVALID_CUSTOMER_ID')) {\r\n        return 'Invalid customer ID provided';\r\n      } else if (error.message.includes('QUOTA_EXCEEDED')) {\r\n        return 'API quota exceeded - try again later';\r\n      } else {\r\n        return error.message;\r\n      }\r\n    }\r\n    return 'Unknown hybrid setup error';\r\n  }\r\n}\r\n\r\n// معالج POST request\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    console.log('📥 Received hybrid setup request');\r\n    \r\n    const body: HybridSetupRequest = await request.json();\r\n    \r\n    // التحقق من البيانات المطلوبة\r\n    if (!body.customerEmail || !body.businessName || !body.managementLevel) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: 'Missing required fields: customerEmail, businessName, managementLevel'\r\n      }, { status: 400 });\r\n    }\r\n\r\n    // التحقق من متغيرات البيئة (اختياري للاختبار)\r\n    const requiredEnvVars = [\r\n      'GOOGLE_CLIENT_ID',\r\n      'GOOGLE_CLIENT_SECRET', \r\n      'GOOGLE_DEVELOPER_TOKEN',\r\n      'MCC_LOGIN_CUSTOMER_ID',\r\n      'GOOGLE_REFRESH_TOKEN'\r\n    ];\r\n\r\n    const missingVars = requiredEnvVars.filter(varName => !process.env[varName]);\r\n    \r\n    if (missingVars.length > 0) {\r\n      console.warn('⚠️ Some environment variables missing, using mock mode:', missingVars);\r\n    }\r\n\r\n    // إعداد النهج المختلط\r\n    const hybridSetup = new HybridManagementSetup();\r\n    const result = await hybridSetup.setupHybridManagement(body);\r\n    \r\n    if (result.success) {\r\n      console.log('✅ Hybrid setup completed successfully');\r\n      return NextResponse.json(result, { status: 201 });\r\n    } else {\r\n      console.log('❌ Hybrid setup failed');\r\n      return NextResponse.json(result, { status: 400 });\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error('❌ API endpoint error:', error);\r\n    \r\n    return NextResponse.json({\r\n      success: false,\r\n      error: 'Internal server error',\r\n      message: error instanceof Error ? error.message : 'Unknown error'\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n"],"names":[],"mappings":"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","debugId":null}}]
}