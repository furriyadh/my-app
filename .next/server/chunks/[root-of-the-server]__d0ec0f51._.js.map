{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/DELL/my-site/src/app/api/oauth/callback/route.ts"],"sourcesContent":["// src/app/api/oauth/callback/route.ts\r\n// OAuth callback handler لمعالجة استجابة Google OAuth\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\n\r\nexport async function GET(req: NextRequest) {\r\n  try {\r\n    const { searchParams } = new URL(req.url);\r\n    const code = searchParams.get('code');\r\n    const state = searchParams.get('state');\r\n    const error = searchParams.get('error');\r\n\r\n    console.log('OAuth Callback received:', { code: !!code, state, error });\r\n\r\n    const baseUrl = process.env.NEXT_PUBLIC_BASE_URL || 'http://localhost:3000';\r\n\r\n    // التحقق من وجود خطأ في OAuth\r\n    if (error ) {\r\n      console.error('OAuth Error:', error);\r\n      const errorMessage = encodeURIComponent('حدث خطأ أثناء ربط حساب Google Ads: ' + error);\r\n      const redirectUrl = new URL('/dashboard', baseUrl);\r\n      redirectUrl.searchParams.set('error', errorMessage);\r\n      return NextResponse.redirect(redirectUrl.toString());\r\n    }\r\n\r\n    // التحقق من وجود authorization code\r\n    if (!code) {\r\n      console.error('No authorization code received');\r\n      const errorMessage = encodeURIComponent('لم يتم الحصول على رمز التفويض من Google');\r\n      const redirectUrl = new URL('/dashboard', baseUrl);\r\n      redirectUrl.searchParams.set('error', errorMessage);\r\n      return NextResponse.redirect(redirectUrl.toString());\r\n    }\r\n\r\n    // التحقق من state للأمان (اختياري)\r\n    // يمكنك إضافة التحقق من state هنا إذا كنت تحفظه في localStorage\r\n\r\n    // تحديد redirectUri بناءً على البيئة\r\n    const currentRedirectUri = process.env.NODE_ENV === 'production'\r\n      ? 'https://furriyadh.com/api/oauth/callback'\r\n      : 'http://localhost:3000/api/oauth/callback';\r\n\r\n    // تبادل authorization code مع access token\r\n    const tokenResponse = await exchangeCodeForToken(code, currentRedirectUri );\r\n    \r\n    if (!tokenResponse.success) {\r\n      console.error('Failed to exchange code for token:', tokenResponse.error);\r\n      const errorMessage = encodeURIComponent('فشل في الحصول على رمز الوصول من Google');\r\n      const redirectUrl = new URL('/dashboard', baseUrl);\r\n      redirectUrl.searchParams.set('error', errorMessage);\r\n      return NextResponse.redirect(redirectUrl.toString());\r\n    }\r\n\r\n    // حفظ access token (يمكنك حفظه في قاعدة البيانات أو localStorage)\r\n    console.log('✅ OAuth successful, access token received');\r\n\r\n    // إعادة توجيه إلى صفحة إنشاء الحملة مع معلومات الحساب المربوط\r\n    const successUrl = new URL('/new-campaign', baseUrl);\r\n    successUrl.searchParams.set('account_type', 'own-accounts');\r\n    successUrl.searchParams.set('oauth_success', 'true');\r\n    successUrl.searchParams.set('access_token', tokenResponse.access_token);\r\n    \r\n    return NextResponse.redirect(successUrl.toString());\r\n\r\n  } catch (error) {\r\n    console.error('OAuth Callback Error:', error);\r\n    const baseUrl = process.env.NEXT_PUBLIC_BASE_URL || 'http://localhost:3000';\r\n    const errorMessage = encodeURIComponent('حدث خطأ غير متوقع أثناء معالجة OAuth' );\r\n    const redirectUrl = new URL('/dashboard', baseUrl);\r\n    redirectUrl.searchParams.set('error', errorMessage);\r\n    return NextResponse.redirect(redirectUrl.toString());\r\n  }\r\n}\r\n\r\n// دالة لتبادل authorization code مع access token\r\nasync function exchangeCodeForToken(code: string, redirectUri: string) {\r\n  try {\r\n    const clientId = process.env.NEXT_PUBLIC_GOOGLE_CLIENT_ID;\r\n    const clientSecret = process.env.GOOGLE_CLIENT_SECRET;\r\n\r\n    console.log('🔍 Debugging Token Exchange:');\r\n    console.log('  Client ID:', clientId);\r\n    console.log('  Client Secret (first 10 chars):', clientSecret ? clientSecret.substring(0, 10) + '...' : 'Not set');\r\n    console.log('  Redirect URI:', redirectUri);\r\n    console.log('  Authorization Code (first 10 chars):', code ? code.substring(0, 10) + '...' : 'Not set');\r\n\r\n    if (!clientId || !clientSecret) {\r\n      console.error('❌ Missing OAuth credentials:', { clientId: !!clientId, clientSecret: !!clientSecret });\r\n      throw new Error('Missing Google OAuth credentials');\r\n    }\r\n\r\n    const tokenEndpoint = 'https://oauth2.googleapis.com/token';\r\n    \r\n    const params = new URLSearchParams({\r\n      client_id: clientId,\r\n      client_secret: clientSecret,\r\n      code: code,\r\n      grant_type: 'authorization_code',\r\n      redirect_uri: redirectUri,\r\n    } );\r\n\r\n    console.log('📤 Sending token exchange request to:', tokenEndpoint);\r\n    console.log('📤 Request params:', {\r\n      client_id: clientId,\r\n      grant_type: 'authorization_code',\r\n      redirect_uri: redirectUri,\r\n      code: code ? code.substring(0, 10) + '...' : 'Not set'\r\n    });\r\n\r\n    const response = await fetch(tokenEndpoint, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n      body: params.toString(),\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    console.log('📥 Token exchange response status:', response.status);\r\n    console.log('📥 Token exchange response:', {\r\n      success: response.ok,\r\n      error: data.error,\r\n      error_description: data.error_description,\r\n      hasAccessToken: !!data.access_token\r\n    });\r\n\r\n    if (!response.ok) {\r\n      console.error('❌ Token exchange failed:', data);\r\n      return {\r\n        success: false,\r\n        error: data.error_description || data.error || 'Token exchange failed'\r\n      };\r\n    }\r\n\r\n    console.log('✅ Token exchange successful');\r\n    return {\r\n      success: true,\r\n      access_token: data.access_token,\r\n      refresh_token: data.refresh_token,\r\n      expires_in: data.expires_in,\r\n      token_type: data.token_type,\r\n      scope: data.scope\r\n    };\r\n\r\n  } catch (error: any) {\r\n    console.error('❌ Error in token exchange:', error);\r\n    return {\r\n      success: false,\r\n      error: error.message || 'Unknown error during token exchange'\r\n    };\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}