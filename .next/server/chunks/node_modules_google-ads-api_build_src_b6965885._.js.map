{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DELL/my-site/node_modules/google-ads-api/build/src/version.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.googleAdsVersion = void 0;\nexports.googleAdsVersion = \"v20\";\n"],"names":[],"mappings":"AAAA;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,gBAAgB,GAAG,KAAK;AAChC,QAAQ,gBAAgB,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DELL/my-site/node_modules/google-ads-api/build/src/utils.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromMicros = fromMicros;\nexports.toMicros = toMicros;\nexports.normaliseQuery = normaliseQuery;\nexports.capitaliseFirstLetter = capitaliseFirstLetter;\nexports.toCamelCase = toCamelCase;\nexports.toSnakeCase = toSnakeCase;\nexports.recursiveFieldMaskSearch = recursiveFieldMaskSearch;\nexports.getFieldMask = getFieldMask;\nconst protos_1 = require(\"./protos\");\n/**\n * @param micros Money value in micros format\n * @description Converts a micro amount to a normalised value\n * @example\n * const cost = fromMicros(campaign.metrics.costMicros)\n */\nfunction fromMicros(micros) {\n    return micros / 1000000;\n}\n/**\n * @param value Money value in decimal format\n * @description Converts a number to micro format\n * @example\n * const costMicros = toMicros(12.5) // 12,500,000\n */\nfunction toMicros(value) {\n    return Math.round(value * 1000000);\n}\n/**\n * @param query String gaql query\n * @description Normalises a query by replacing multiple whitespace with single whitespace\n * @example\n * const gaqlQuery =\n *  `SELECT campaign.name\n *  FROM campaign\n *  LIMIT 10`\n * const normalisedQuery = normaliseQuery(gaqlQuery) // \"SELECT campaign.name FROM campaign LIMIT 10\"\n */\nfunction normaliseQuery(query) {\n    return `${query.replace(/\\s{2,}/g, \" \")}`;\n}\n/**\n * @param str\n * @description Capitalises the first letter of a string\n * @example\n * const capitalisedString = capitaliseFirstLetter(\"adGroupCriterionSimulation\") // \"AdGroupCriterionSimulation\"\n */\nfunction capitaliseFirstLetter(str) {\n    return (str.charAt(0).toUpperCase() + str.slice(1));\n}\n/**\n * @param str\n * @description Converts a string to a camel case string. Works on space case, snake case and title case strings.\n * @example\n * const camelCaseString = toCamelCase(\"ad_group_criterion_simulation\") // \"adGroupCriterionSimulation\"\n */\nfunction toCamelCase(str) {\n    return str\n        .replace(/\\s+/g, \"_\") // convert spaces to underscores\n        .replace(/(_)([A-Za-z])/g, (pattern) => pattern[1].toUpperCase()) // replace \"_x\" patterns with \"X\"\n        .replace(/^([A-Z])/g, (pattern) => pattern.toLowerCase()); // capitalises the first letter of the string\n}\n/**\n * @param str\n * @description Converts a string to a snake case string. Works on space case, camel case and title case strings.\n * @example\n * const snakeCaseString = toSnakeCase(\"adGroupCriterionSimulation\") // \"ad_group_criterion_simulation\"\n */\nfunction toSnakeCase(str) {\n    return str\n        .replace(/\\s+/g, \"_\") // convert spaces to underscores\n        .replace(/(?<!(^|_))([A-Z])/g, (pattern) => \"_\" + pattern) // places an underscore before any capital chars, unless there is already an underscore or it is the first char of the string\n        .toLowerCase();\n}\nfunction recursiveFieldMaskSearch(data) {\n    const paths = [];\n    for (const key of Object.keys(data)) {\n        if (key === \"resourceName\") {\n            continue;\n        }\n        const fieldKey = toSnakeCase(key);\n        const value = data[key];\n        if (typeof value === \"object\" && !Array.isArray(value) && value !== null) {\n            const children = recursiveFieldMaskSearch(value);\n            for (const child of children) {\n                paths.push(`${fieldKey}.${child}`);\n            }\n            continue;\n        }\n        paths.push(fieldKey);\n    }\n    return paths;\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction getFieldMask(data) {\n    const paths = recursiveFieldMaskSearch(data);\n    return new protos_1.protobuf.FieldMask({\n        paths,\n    });\n}\n"],"names":[],"mappings":"AAAA;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,UAAU,GAAG;AACrB,QAAQ,QAAQ,GAAG;AACnB,QAAQ,cAAc,GAAG;AACzB,QAAQ,qBAAqB,GAAG;AAChC,QAAQ,WAAW,GAAG;AACtB,QAAQ,WAAW,GAAG;AACtB,QAAQ,wBAAwB,GAAG;AACnC,QAAQ,YAAY,GAAG;AACvB,MAAM;AACN;;;;;CAKC,GACD,SAAS,WAAW,MAAM;IACtB,OAAO,SAAS;AACpB;AACA;;;;;CAKC,GACD,SAAS,SAAS,KAAK;IACnB,OAAO,KAAK,KAAK,CAAC,QAAQ;AAC9B;AACA;;;;;;;;;CASC,GACD,SAAS,eAAe,KAAK;IACzB,OAAO,GAAG,MAAM,OAAO,CAAC,WAAW,MAAM;AAC7C;AACA;;;;;CAKC,GACD,SAAS,sBAAsB,GAAG;IAC9B,OAAQ,IAAI,MAAM,CAAC,GAAG,WAAW,KAAK,IAAI,KAAK,CAAC;AACpD;AACA;;;;;CAKC,GACD,SAAS,YAAY,GAAG;IACpB,OAAO,IACF,OAAO,CAAC,QAAQ,KAAK,gCAAgC;KACrD,OAAO,CAAC,kBAAkB,CAAC,UAAY,OAAO,CAAC,EAAE,CAAC,WAAW,IAAI,iCAAiC;KAClG,OAAO,CAAC,aAAa,CAAC,UAAY,QAAQ,WAAW,KAAK,6CAA6C;AAChH;AACA;;;;;CAKC,GACD,SAAS,YAAY,GAAG;IACpB,OAAO,IACF,OAAO,CAAC,QAAQ,KAAK,gCAAgC;KACrD,OAAO,CAAC,sBAAsB,CAAC,UAAY,MAAM,SAAS,6HAA6H;KACvL,WAAW;AACpB;AACA,SAAS,yBAAyB,IAAI;IAClC,MAAM,QAAQ,EAAE;IAChB,KAAK,MAAM,OAAO,OAAO,IAAI,CAAC,MAAO;QACjC,IAAI,QAAQ,gBAAgB;YACxB;QACJ;QACA,MAAM,WAAW,YAAY;QAC7B,MAAM,QAAQ,IAAI,CAAC,IAAI;QACvB,IAAI,OAAO,UAAU,YAAY,CAAC,MAAM,OAAO,CAAC,UAAU,UAAU,MAAM;YACtE,MAAM,WAAW,yBAAyB;YAC1C,KAAK,MAAM,SAAS,SAAU;gBAC1B,MAAM,IAAI,CAAC,GAAG,SAAS,CAAC,EAAE,OAAO;YACrC;YACA;QACJ;QACA,MAAM,IAAI,CAAC;IACf;IACA,OAAO;AACX;AACA,8DAA8D;AAC9D,SAAS,aAAa,IAAI;IACtB,MAAM,QAAQ,yBAAyB;IACvC,OAAO,IAAI,SAAS,QAAQ,CAAC,SAAS,CAAC;QACnC;IACJ;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DELL/my-site/node_modules/google-ads-api/build/src/parserRest.js"],"sourcesContent":["\"use strict\";\n/**\n * JSON Rest parsing\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decamelizeKeys = void 0;\nconst map_obj_1 = __importDefault(require(\"map-obj\"));\nconst circ_json_1 = require(\"circ-json\");\nconst utils_1 = require(\"./utils\");\nconst fields_1 = require(\"./protos/autogen/fields\");\nconst enums_1 = require(\"./protos/autogen/enums\");\nconst fieldDataTypes = (0, circ_json_1.parse)(fields_1.fieldDataTypes);\nconst decamelizeCache = new Map();\nconst fieldTypeCache = new Map();\nconst isObject = (value) => typeof value === \"object\" && value !== null;\nconst decamelizeKeys = (input) => {\n    if (!isObject(input)) {\n        return input;\n    }\n    const makeMapper = (parentPath) => (key, value) => {\n        key = cachedDecamelize(key);\n        if (isObject(value)) {\n            const path = parentPath === undefined ? key : `${parentPath}.${key}`;\n            // @ts-ignore\n            value = (0, map_obj_1.default)(value, makeMapper(path));\n        }\n        else {\n            value = cachedValueParser(key, parentPath, value);\n        }\n        return [key, value];\n    };\n    // @ts-ignore\n    return (0, map_obj_1.default)(input, makeMapper());\n};\nexports.decamelizeKeys = decamelizeKeys;\nconst cachedDecamelize = (key) => {\n    const cachedResult = decamelizeCache.get(key);\n    if (cachedResult) {\n        return cachedResult;\n    }\n    const newKey = (0, utils_1.toSnakeCase)(key);\n    decamelizeCache.set(key, newKey);\n    return newKey;\n};\nconst cachedValueParser = (key, parentPath, value) => {\n    let newValue = value;\n    const fullPath = parentPath ? `${parentPath}.${key}` : key;\n    const megaDataType = getTypeFromPath(fullPath);\n    if (megaDataType === undefined && !fullPath.startsWith(\"@\")) {\n        console.warn(`No data type found for ${fullPath}`);\n    }\n    else if (typeof megaDataType === \"object\") {\n        newValue = megaDataType[value];\n    }\n    else if (megaDataType === \"INT64\") {\n        newValue = Number(value);\n    }\n    else if (megaDataType === \"ENUM\") {\n        // Some enums aren't embedded in megaDataType, so we need this fallback.\n        // @ts-expect-error typescript doesn't like accessing items in a namespace with a string\n        newValue = enums_1.enums[fields_1.fields.enumFields[fullPath]][value]; // e.g. enums['CampaignStatus'][ENABLED] = \"2\"\n    }\n    return newValue;\n};\nconst getTypeFromPath = (path) => {\n    const cachedResult = fieldTypeCache.get(path);\n    if (cachedResult) {\n        return cachedResult;\n    }\n    const t = get(fieldDataTypes, path);\n    fieldTypeCache.set(path, t);\n    return t;\n};\n// Copied from youmightnotneed.com\nconst get = (obj, path) => {\n    if (!path)\n        return undefined;\n    // Check if path is string or array. Regex : ensure that we do not have '.' and brackets.\n    // Regex explained: https://regexr.com/58j0k\n    const pathArray = path.match(/([^[.\\]])+/g);\n    if (!pathArray)\n        return undefined;\n    // Find value\n    return pathArray.reduce((prevObj, key) => prevObj && prevObj[key], obj);\n};\n"],"names":[],"mappings":"AAAA;AACA;;CAEC,GACD,IAAI,kBAAkB,AAAC,IAAI,IAAI,IAAI,CAAC,eAAe,IAAK,SAAU,GAAG;IACjE,OAAO,AAAC,OAAO,IAAI,UAAU,GAAI,MAAM;QAAE,WAAW;IAAI;AAC5D;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,cAAc,GAAG,KAAK;AAC9B,MAAM,YAAY;AAClB,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM,iBAAiB,CAAC,GAAG,YAAY,KAAK,EAAE,SAAS,cAAc;AACrE,MAAM,kBAAkB,IAAI;AAC5B,MAAM,iBAAiB,IAAI;AAC3B,MAAM,WAAW,CAAC,QAAU,OAAO,UAAU,YAAY,UAAU;AACnE,MAAM,iBAAiB,CAAC;IACpB,IAAI,CAAC,SAAS,QAAQ;QAClB,OAAO;IACX;IACA,MAAM,aAAa,CAAC,aAAe,CAAC,KAAK;YACrC,MAAM,iBAAiB;YACvB,IAAI,SAAS,QAAQ;gBACjB,MAAM,OAAO,eAAe,YAAY,MAAM,GAAG,WAAW,CAAC,EAAE,KAAK;gBACpE,aAAa;gBACb,QAAQ,CAAC,GAAG,UAAU,OAAO,EAAE,OAAO,WAAW;YACrD,OACK;gBACD,QAAQ,kBAAkB,KAAK,YAAY;YAC/C;YACA,OAAO;gBAAC;gBAAK;aAAM;QACvB;IACA,aAAa;IACb,OAAO,CAAC,GAAG,UAAU,OAAO,EAAE,OAAO;AACzC;AACA,QAAQ,cAAc,GAAG;AACzB,MAAM,mBAAmB,CAAC;IACtB,MAAM,eAAe,gBAAgB,GAAG,CAAC;IACzC,IAAI,cAAc;QACd,OAAO;IACX;IACA,MAAM,SAAS,CAAC,GAAG,QAAQ,WAAW,EAAE;IACxC,gBAAgB,GAAG,CAAC,KAAK;IACzB,OAAO;AACX;AACA,MAAM,oBAAoB,CAAC,KAAK,YAAY;IACxC,IAAI,WAAW;IACf,MAAM,WAAW,aAAa,GAAG,WAAW,CAAC,EAAE,KAAK,GAAG;IACvD,MAAM,eAAe,gBAAgB;IACrC,IAAI,iBAAiB,aAAa,CAAC,SAAS,UAAU,CAAC,MAAM;QACzD,QAAQ,IAAI,CAAC,CAAC,uBAAuB,EAAE,UAAU;IACrD,OACK,IAAI,OAAO,iBAAiB,UAAU;QACvC,WAAW,YAAY,CAAC,MAAM;IAClC,OACK,IAAI,iBAAiB,SAAS;QAC/B,WAAW,OAAO;IACtB,OACK,IAAI,iBAAiB,QAAQ;QAC9B,wEAAwE;QACxE,wFAAwF;QACxF,WAAW,QAAQ,KAAK,CAAC,SAAS,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,8CAA8C;IACzH;IACA,OAAO;AACX;AACA,MAAM,kBAAkB,CAAC;IACrB,MAAM,eAAe,eAAe,GAAG,CAAC;IACxC,IAAI,cAAc;QACd,OAAO;IACX;IACA,MAAM,IAAI,IAAI,gBAAgB;IAC9B,eAAe,GAAG,CAAC,MAAM;IACzB,OAAO;AACX;AACA,kCAAkC;AAClC,MAAM,MAAM,CAAC,KAAK;IACd,IAAI,CAAC,MACD,OAAO;IACX,yFAAyF;IACzF,4CAA4C;IAC5C,MAAM,YAAY,KAAK,KAAK,CAAC;IAC7B,IAAI,CAAC,WACD,OAAO;IACX,aAAa;IACb,OAAO,UAAU,MAAM,CAAC,CAAC,SAAS,MAAQ,WAAW,OAAO,CAAC,IAAI,EAAE;AACvE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 210, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DELL/my-site/node_modules/google-ads-api/build/src/service.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Service = exports.FAILURE_KEY = void 0;\nconst google_gax_1 = require(\"google-gax\");\nconst google_auth_library_1 = require(\"google-auth-library\");\nconst protos_1 = require(\"./protos\");\nconst utils_1 = require(\"./utils\");\nconst version_1 = require(\"./version\");\nconst ttlcache_1 = __importDefault(require(\"@isaacs/ttlcache\"));\n// Make sure to update this version number when upgrading\nexports.FAILURE_KEY = `google.ads.googleads.${version_1.googleAdsVersion}.errors.googleadsfailure-bin`;\n// A global service cache to avoid re-initialising services\nconst serviceCache = new ttlcache_1.default({\n    max: 1_000,\n    ttl: 10 * 60 * 1000, // 10 minutes\n    dispose: async (service) => {\n        // Close connections when services are removed from the cache\n        await service.close();\n    },\n});\n// A global access token cache used by REST calls. Issued tokens expire after 1 hour, so we cache them for 50 minutes.\nconst accessTokenCache = new ttlcache_1.default({\n    max: 100_000,\n    ttl: 50 * 60 * 1000, // 50 minutes\n});\nclass Service {\n    clientOptions;\n    customerOptions;\n    hooks;\n    constructor(clientOptions, customerOptions, hooks) {\n        this.clientOptions = clientOptions;\n        this.customerOptions = customerOptions;\n        this.hooks = hooks ?? {};\n        // @ts-expect-error All fields don't need to be set here\n        this.serviceCache = {};\n    }\n    get credentials() {\n        return {\n            customer_id: this.customerOptions.customer_id,\n            login_customer_id: this.customerOptions.login_customer_id,\n            linked_customer_id: this.customerOptions.linked_customer_id,\n        };\n    }\n    get callHeaders() {\n        const headers = {\n            \"developer-token\": this.clientOptions.developer_token,\n        };\n        if (this.customerOptions.login_customer_id) {\n            headers[\"login-customer-id\"] = this.customerOptions.login_customer_id;\n        }\n        if (this.customerOptions.linked_customer_id) {\n            headers[\"linked-customer-id\"] = this.customerOptions.linked_customer_id;\n        }\n        return headers;\n    }\n    // Used only by gRPC calls\n    getCredentials() {\n        const sslCreds = google_gax_1.grpc.credentials.createSsl();\n        const authClient = new google_auth_library_1.UserRefreshClient(this.clientOptions.client_id, this.clientOptions.client_secret, this.customerOptions.refresh_token);\n        const credentials = google_gax_1.grpc.credentials.combineChannelCredentials(sslCreds, google_gax_1.grpc.credentials.createFromGoogleCredential(authClient));\n        return credentials;\n    }\n    // Used only by REST calls\n    async getAccessToken() {\n        const cachedToken = accessTokenCache.get(this.customerOptions.refresh_token);\n        if (cachedToken) {\n            return cachedToken;\n        }\n        const oAuth2Client = new google_auth_library_1.OAuth2Client(this.clientOptions.client_id, this.clientOptions.client_secret);\n        oAuth2Client.setCredentials({\n            refresh_token: this.customerOptions.refresh_token,\n        });\n        const { token } = await oAuth2Client.getAccessToken();\n        if (typeof token !== \"string\") {\n            throw new Error(\"Failed to retrieve access token\");\n        }\n        accessTokenCache.set(this.customerOptions.refresh_token, token);\n        return token;\n    }\n    loadService(service) {\n        const serviceCacheKey = `${service}_${this.customerOptions.refresh_token}`;\n        if (serviceCache.has(serviceCacheKey)) {\n            return serviceCache.get(serviceCacheKey);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-var-requires\n        const { [service]: protoService } = require(\"google-ads-node\");\n        if (typeof protoService === \"undefined\") {\n            throw new Error(`Service \"${service}\" could not be found`);\n        }\n        // Initialising services can take a few ms, so we cache when possible.\n        const client = new protoService({\n            sslCreds: this.getCredentials(),\n        });\n        serviceCache.set(serviceCacheKey, client);\n        return client;\n    }\n    getGoogleAdsError(error) {\n        // @ts-expect-error No type exists for GA query error\n        if (typeof error?.metadata?.internalRepr.get(exports.FAILURE_KEY) === \"undefined\") {\n            return error;\n        }\n        // @ts-expect-error No type exists for GA query error\n        const [buffer] = error.metadata.internalRepr.get(exports.FAILURE_KEY);\n        return this.decodeGoogleAdsFailureBuffer(buffer);\n    }\n    decodeGoogleAdsFailureBuffer(buffer) {\n        const googleAdsFailure = protos_1.errors.GoogleAdsFailure.decode(buffer);\n        return googleAdsFailure;\n    }\n    decodePartialFailureError(response) {\n        if (typeof response?.partial_failure_error === \"undefined\" ||\n            !response?.partial_failure_error) {\n            return response;\n        }\n        const { details } = response.partial_failure_error;\n        const buffer = details?.find((d) => d.type_url.includes(\"errors.GoogleAdsFailure\"))?.value;\n        if (typeof buffer === \"undefined\") {\n            return response;\n        }\n        // Update the partial failure field with the decoded error details\n        return {\n            ...response,\n            partial_failure_error: this.decodeGoogleAdsFailureBuffer(buffer),\n        };\n    }\n    buildSearchRequestAndService(gaql, options) {\n        const service = this.loadService(\"GoogleAdsServiceClient\");\n        const request = new protos_1.services.SearchGoogleAdsRequest({\n            customer_id: this.customerOptions.customer_id,\n            query: gaql,\n            ...options,\n        });\n        return { service, request };\n    }\n    buildSearchStreamRequestAndService(gaql, options) {\n        const service = this.loadService(\"GoogleAdsServiceClient\");\n        const request = new protos_1.services.SearchGoogleAdsStreamRequest({\n            customer_id: this.customerOptions.customer_id,\n            query: gaql,\n            ...options,\n        });\n        return { service, request };\n    }\n    buildMutationRequestAndService(mutations, options) {\n        const service = this.loadService(\"GoogleAdsServiceClient\");\n        const mutateOperations = mutations.map((mutation) => {\n            const opKey = (0, utils_1.toSnakeCase)(`${mutation.entity}Operation`);\n            const operation = {\n                [mutation.operation ?? \"create\"]: mutation.resource,\n            };\n            if (mutation.operation === \"create\" &&\n                //@ts-ignore\n                mutation?.exempt_policy_violation_keys?.length) {\n                //@ts-ignore\n                operation.exempt_policy_violation_keys =\n                    mutation.exempt_policy_violation_keys;\n            }\n            else if (mutation.operation === \"update\") {\n                // @ts-expect-error Resource operations should have updateMask defined\n                operation.update_mask = (0, utils_1.getFieldMask)(mutation.resource);\n            }\n            const mutateOperation = new protos_1.services.MutateOperation({\n                [opKey]: operation,\n            });\n            return mutateOperation;\n        });\n        const request = new protos_1.services.MutateGoogleAdsRequest({\n            customer_id: this.customerOptions.customer_id,\n            mutate_operations: mutateOperations,\n            ...options,\n        });\n        return { service, request };\n    }\n    buildOperations(type, entities, message) {\n        const ops = entities.map((e) => {\n            const op = {\n                [type]: e,\n                operation: type,\n            };\n            //@ts-ignore\n            if (type === \"create\" && e?.exempt_policy_violation_keys?.length) {\n                // @ts-expect-error Field required for policy violation exemptions\n                op.exempt_policy_violation_keys = e.exempt_policy_violation_keys;\n                //@ts-ignore\n                delete e.exempt_policy_violation_keys;\n            }\n            else if (type === \"update\") {\n                // @ts-expect-error Field required for updates\n                op.update_mask = (0, utils_1.getFieldMask)(\n                // @ts-expect-error Message types have a toObject method\n                message.toObject(e, {\n                    defaults: false,\n                }));\n            }\n            return op;\n        });\n        return ops;\n    }\n    buildRequest(operations, options) {\n        const request = {\n            customer_id: this.customerOptions.customer_id,\n            operations,\n            ...options,\n        };\n        return request;\n    }\n}\nexports.Service = Service;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 433, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DELL/my-site/node_modules/google-ads-api/build/src/types.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.dateConstants = void 0;\nexports.dateConstants = [\n    \"TODAY\",\n    \"YESTERDAY\",\n    \"LAST_7_DAYS\",\n    \"LAST_BUSINESS_WEEK\",\n    \"THIS_MONTH\",\n    \"LAST_MONTH\",\n    \"LAST_14_DAYS\",\n    \"LAST_30_DAYS\",\n    \"THIS_WEEK_SUN_TODAY\",\n    \"THIS_WEEK_MON_TODAY\",\n    \"LAST_WEEK_SUN_SAT\",\n    \"LAST_WEEK_MON_SUN\",\n];\n"],"names":[],"mappings":"AAAA;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,aAAa,GAAG,KAAK;AAC7B,QAAQ,aAAa,GAAG;IACpB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACH","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 457, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DELL/my-site/node_modules/google-ads-api/build/src/query.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.QueryError = void 0;\nexports.buildSelectClause = buildSelectClause;\nexports.buildFromClause = buildFromClause;\nexports.validateConstraintKeyAndValue = validateConstraintKeyAndValue;\nexports.convertNumericEnumToString = convertNumericEnumToString;\nexports.extractConstraintConditions = extractConstraintConditions;\nexports.extractDateConstantConditions = extractDateConstantConditions;\nexports.extractDateConditions = extractDateConditions;\nexports.buildWhereClause = buildWhereClause;\nexports.buildLimitClause = buildLimitClause;\nexports.buildParametersClause = buildParametersClause;\nexports.completeOrderly = completeOrderly;\nexports.buildOrderClauseOld = buildOrderClauseOld;\nexports.buildOrderClauseNew = buildOrderClauseNew;\nexports.buildOrderClause = buildOrderClause;\nexports.buildRequestOptions = buildRequestOptions;\nexports.buildQuery = buildQuery;\nconst protos_1 = require(\"./protos\");\nconst types_1 = require(\"./types\");\nvar QueryKeywords;\n(function (QueryKeywords) {\n    QueryKeywords[\"SELECT\"] = \"SELECT\";\n    QueryKeywords[\"FROM\"] = \"FROM\";\n    QueryKeywords[\"WHERE\"] = \"WHERE\";\n    QueryKeywords[\"ORDER_BY\"] = \"ORDER BY\";\n    QueryKeywords[\"LIMIT\"] = \"LIMIT\";\n    QueryKeywords[\"PARAMETERS\"] = \"PARAMETERS\";\n    QueryKeywords[\"AND\"] = \"AND\";\n    QueryKeywords[\"OR\"] = \"OR\";\n})(QueryKeywords || (QueryKeywords = {}));\nexports.QueryError = {\n    INVALID_CONSTRAINTS_FORMAT: \"Constraints must be an array of objects or a singular object.\",\n    INVALID_CONSTRAINT_KEY: \"A constraint key must have a string value.\",\n    INVALID_CONSTRAINT_VALUE: (key, val) => \n    // @ts-ignore\n    `The value of the constraint ${key} must be a string, number, boolean, or an array of these types. Here, typeof ${key} is ${typeof val}.`,\n    INVALID_CONSTRAINT_OBJECT_FORMAT: \"Must specify { key, op, val } or { key: value } when using object-style constraints.\",\n    INVALID_DATE_CONSTANT_TYPE: (dateConstant) => `Date constant must be a string. Here, typeof date constant is ${typeof dateConstant}`,\n    INVALID_FROM_DATE_TYPE: (fromDate) => `From date must be a string. Here, typeof from date is ${typeof fromDate}`,\n    INVALID_TO_DATE_TYPE: (toDate) => `To date must be a string. Here, typeof to date is ${typeof toDate}`,\n    INVALID_LIMIT: \"Limit must be a positive integer.\",\n    INVALID_PARAMETERS: \"Parameters must be a string.\",\n    INVALID_ORDER: \"Order must be an array.\",\n    INVALID_ORDERLY: \"OrderBy arrays must only contain strings.\",\n    INVALID_ORDERBY: \"OrderBy must be a string or an array of strings.\",\n    INVALID_SORT_ORDER: `Sort order must be \"ASC\" or \"DESC\".`,\n    MISSING_FIELDS: 'Must specify at least one field in (\"attributes\",\"metrics\",\"segments\").',\n    MISSING_FROM_DATE: 'Expected start date range is missing - \"from_date\".',\n    UNDEFINED_ENTITY: \"The entity of the query must be defined.\",\n};\nfunction buildSelectClause(attributes, metrics, segments) {\n    if (!attributes?.length && !metrics?.length && !segments?.length) {\n        throw new Error(exports.QueryError.MISSING_FIELDS);\n    }\n    const selections = [\n        ...(attributes || []),\n        ...(metrics || []),\n        ...(segments || []),\n    ].join(\", \");\n    return `${QueryKeywords.SELECT} ${selections}`;\n}\nfunction buildFromClause(entity) {\n    if (typeof entity === \"undefined\") {\n        throw new Error(exports.QueryError.UNDEFINED_ENTITY);\n    }\n    return ` ${QueryKeywords.FROM} ${entity}`;\n}\nfunction formatGaqlString(val) {\n    const len = val.length;\n    const startsWithSingle = val.startsWith(\"'\");\n    const endsWithSingle = val.endsWith(\"'\");\n    const startsWithDouble = val.startsWith('\"');\n    const endsWithDouble = val.endsWith('\"');\n    // Returns the original string if it seems correctly quoted already.\n    if (len >= 2) {\n        if (startsWithSingle && endsWithSingle && !val.slice(1, -1).includes(\"'\")) {\n            return val;\n        }\n        if (startsWithDouble && endsWithDouble && !val.slice(1, -1).includes('\"')) {\n            return val;\n        }\n    }\n    // Always use double quotes and escape internal double quotes and backslashes\n    if (val.includes('\"') || val.includes(\"\\\\\")) {\n        const escapedVal = val.replace(/\\\\/g, \"\\\\\\\\\").replace(/\"/g, '\\\\\"'); // Escape backslashes first, then double quotes\n        return `\"${escapedVal}\"`;\n    }\n    else {\n        // No escaping needed, just wrap in double quotes\n        return `\"${val}\"`;\n    }\n}\nfunction validateConstraintKeyAndValue(key, op, val) {\n    if (typeof val === \"number\" || typeof val === \"boolean\") {\n        return { op: \"=\", val: convertNumericEnumToString(key, val) };\n    }\n    if (typeof val === \"string\") {\n        if (types_1.dateConstants.includes(val)) {\n            return { op, val };\n        }\n        return { op: \"=\", val: formatGaqlString(val) };\n    }\n    if (Array.isArray(val)) {\n        const stringifiedValue = val\n            .map((v) => {\n            if (typeof v === \"string\") {\n                return formatGaqlString(v);\n            }\n            else {\n                return convertNumericEnumToString(key, v);\n            }\n        })\n            .join(`, `);\n        return { op: \"IN\", val: `(${stringifiedValue})` };\n    }\n    throw new Error(exports.QueryError.INVALID_CONSTRAINT_VALUE(key, val));\n}\nfunction convertNumericEnumToString(key, val) {\n    // @ts-expect-error key does not always match an enum field\n    if (protos_1.fields.enumFields[key] && typeof val === \"number\") {\n        // @ts-expect-error typescript doesn't like accessing items in a namespace with a string\n        const enumStringValue = protos_1.enums[protos_1.fields.enumFields[key]][val]; // e.g. enums['CampaignStatus'][2] = \"ENABLED\"\n        if (enumStringValue) {\n            return `\"${enumStringValue}\"`;\n        }\n    }\n    return val;\n}\nfunction extractConstraintConditions(constraints) {\n    if (typeof constraints === \"undefined\") {\n        return [];\n    }\n    else if (Array.isArray(constraints)) {\n        return constraints.map((con) => {\n            if (typeof con === \"object\" && !Array.isArray(con) && con !== null) {\n                // @ts-ignore\n                if (con.key && con.op && typeof con.val !== \"undefined\") {\n                    const { key, op, val } = con;\n                    if (typeof key !== \"string\") {\n                        throw new Error(exports.QueryError.INVALID_CONSTRAINT_KEY);\n                    }\n                    const validatedValue = validateConstraintKeyAndValue(key, op, val);\n                    // @ts-ignore\n                    return `${key} ${op} ${validatedValue.val}`;\n                }\n                else if (Object.keys(con).length === 1) {\n                    const [[key, val]] = Object.entries(con);\n                    const validatedValue = validateConstraintKeyAndValue(key, \"=\", val);\n                    return `${key} ${validatedValue.op} ${validatedValue.val}`;\n                }\n                else {\n                    throw new Error(exports.QueryError.INVALID_CONSTRAINT_OBJECT_FORMAT);\n                }\n            }\n            else if (typeof con === \"string\") {\n                return con;\n            }\n            else {\n                throw new Error(exports.QueryError.INVALID_CONSTRAINT_OBJECT_FORMAT);\n            }\n        });\n    }\n    else if (typeof constraints === \"object\" && constraints !== null) {\n        return Object.entries(constraints).map(([key, val]) => {\n            const validatedValue = validateConstraintKeyAndValue(key, \"=\", val);\n            return `${key} ${validatedValue.op} ${validatedValue.val}`;\n        });\n    }\n    else {\n        throw new Error(exports.QueryError.INVALID_CONSTRAINTS_FORMAT);\n    }\n}\nfunction extractDateConstantConditions(dateConstant) {\n    if (typeof dateConstant === \"undefined\") {\n        return [];\n    }\n    else if (typeof dateConstant !== \"string\") {\n        throw new Error(exports.QueryError.INVALID_DATE_CONSTANT_TYPE(dateConstant));\n    }\n    return [`segments.date DURING ${dateConstant}`];\n}\nfunction extractDateConditions(fromDate, toDate) {\n    if (typeof fromDate === \"undefined\" && typeof toDate === \"undefined\") {\n        return [];\n    }\n    if (typeof fromDate === \"undefined\" && typeof toDate !== \"undefined\") {\n        throw new Error(exports.QueryError.MISSING_FROM_DATE);\n    }\n    if (typeof fromDate !== \"undefined\" && typeof toDate === \"undefined\") {\n        const d = new Date();\n        toDate = `${d.getFullYear()}-${(\"0\" + (d.getMonth() + 1)).slice(-2)}-${(\"0\" + d.getDate()).slice(-2)}`;\n    }\n    if (typeof fromDate !== \"string\") {\n        throw new Error(exports.QueryError.INVALID_FROM_DATE_TYPE(fromDate));\n    }\n    if (typeof toDate !== \"string\") {\n        throw new Error(exports.QueryError.INVALID_TO_DATE_TYPE(toDate));\n    }\n    return [\n        `segments.date >= \"${fromDate}\"`,\n        `segments.date <= \"${toDate}\"`,\n    ];\n}\nfunction buildWhereClause(constraints, dateConstant, fromDate, toDate) {\n    const constraintClauses = extractConstraintConditions(constraints);\n    const dateConstantClauses = extractDateConstantConditions(dateConstant);\n    const dateClauses = extractDateConditions(fromDate, toDate);\n    const whereClauses = [\n        ...constraintClauses,\n        ...dateConstantClauses,\n        ...dateClauses,\n    ].join(` ${QueryKeywords.AND} `);\n    return whereClauses.length\n        ? ` ${QueryKeywords.WHERE} ${whereClauses}`\n        : ``;\n}\nfunction buildLimitClause(limit) {\n    if (typeof limit === \"undefined\") {\n        return ``;\n    }\n    if (typeof limit !== \"number\" || limit < 1 || !Number.isInteger(limit)) {\n        throw new Error(exports.QueryError.INVALID_LIMIT);\n    }\n    return ` ${QueryKeywords.LIMIT} ${limit}`;\n}\nfunction buildParametersClause(parameters) {\n    if (typeof parameters === \"undefined\") {\n        return ``;\n    }\n    if (typeof parameters !== \"string\") {\n        throw new Error(exports.QueryError.INVALID_PARAMETERS);\n    }\n    return ` ${QueryKeywords.PARAMETERS} ${parameters}`;\n}\nfunction completeOrderly(orderly, entity) {\n    if (!orderly.length) {\n        throw new Error(exports.QueryError.INVALID_ORDERLY);\n    }\n    else if (new RegExp(/^[^.\\s]+(\\.[^.\\s]+)+$/g).test(orderly)) {\n        // text containing full stops\n        return orderly;\n    }\n    else if (new RegExp(/^[^.\\s]+$/g).test(orderly)) {\n        // text without a full stop (e.g. resource_name)\n        return `${entity}.${orderly}`;\n    }\n    else {\n        throw new Error(exports.QueryError.INVALID_ORDERLY);\n    }\n}\nfunction buildOrderClauseOld(orderBy, sortOrder, entity) {\n    if (typeof orderBy === \"undefined\") {\n        return ``;\n    }\n    else if (typeof sortOrder === \"undefined\") {\n        sortOrder = \"DESC\";\n    }\n    else if (sortOrder !== \"ASC\" && sortOrder !== \"DESC\") {\n        throw new Error(exports.QueryError.INVALID_SORT_ORDER);\n    }\n    if (Array.isArray(orderBy)) {\n        const orders = orderBy\n            .map((orderly) => {\n            if (typeof orderly !== \"string\") {\n                throw new Error(exports.QueryError.INVALID_ORDERLY);\n            }\n            else {\n                return completeOrderly(orderly, entity);\n            }\n        })\n            .join(\", \");\n        return ` ${QueryKeywords.ORDER_BY} ${orders} ${sortOrder}`;\n    }\n    else if (typeof orderBy === \"string\") {\n        return ` ${QueryKeywords.ORDER_BY} ${completeOrderly(orderBy, entity)} ${sortOrder}`;\n    }\n    else {\n        throw new Error(exports.QueryError.INVALID_ORDERBY);\n    }\n}\nfunction buildOrderClauseNew(order, entity) {\n    if (!order || !Array.isArray(order)) {\n        throw new Error(exports.QueryError.INVALID_ORDER);\n    }\n    if (!order.length) {\n        return \"\";\n    }\n    const orders = order\n        .map((o) => {\n        const orderly = completeOrderly(o.field, entity);\n        const sortOrder = o.sort_order ? o.sort_order : \"DESC\";\n        return `${orderly} ${sortOrder}`;\n    })\n        .join(\", \");\n    return ` ${QueryKeywords.ORDER_BY} ${orders}`;\n}\nfunction buildOrderClause(order, orderBy, sortOrder, entity) {\n    if (order) {\n        return buildOrderClauseNew(order, entity);\n    }\n    else {\n        return buildOrderClauseOld(orderBy, sortOrder, entity);\n    }\n}\nfunction buildRequestOptions(reportOptions) {\n    const { page_size, page_token, validate_only, search_settings } = reportOptions;\n    return { page_size, page_token, validate_only, search_settings };\n}\nfunction buildQuery(reportOptions) {\n    const SELECT = buildSelectClause(reportOptions.attributes, reportOptions.metrics, reportOptions.segments);\n    const FROM = buildFromClause(reportOptions.entity);\n    const WHERE = buildWhereClause(reportOptions.constraints, reportOptions.date_constant, reportOptions.from_date, reportOptions.to_date);\n    const ORDER = buildOrderClause(reportOptions.order, reportOptions.order_by, reportOptions.sort_order, reportOptions.entity);\n    const LIMIT = buildLimitClause(reportOptions.limit);\n    const PARAMETERS = buildParametersClause(reportOptions.parameters);\n    const requestOptions = buildRequestOptions(reportOptions);\n    return {\n        gaqlQuery: `${SELECT}${FROM}${WHERE}${ORDER}${LIMIT}${PARAMETERS}`,\n        requestOptions,\n    };\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 778, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DELL/my-site/node_modules/google-ads-api/build/src/customer.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Customer = void 0;\nconst axios_1 = __importDefault(require(\"axios\"));\nconst stream_chain_1 = require(\"stream-chain\");\nconst stream_json_1 = require(\"stream-json\");\nconst StreamArray_1 = require(\"stream-json/streamers/StreamArray\");\nconst parserRest_1 = require(\"./parserRest\");\nconst protos_1 = require(\"./protos\");\nconst serviceFactory_1 = __importDefault(require(\"./protos/autogen/serviceFactory\"));\nconst query_1 = require(\"./query\");\nconst version_1 = require(\"./version\");\nconst ROWS_PER_STREAMED_CHUNK = 10_000; // From experience, this is what can be expected from the API.\nclass Customer extends serviceFactory_1.default {\n    constructor(clientOptions, customerOptions, hooks) {\n        super(clientOptions, customerOptions, hooks ?? {});\n    }\n    /**\n      @description Single query using a raw GAQL string.\n      @hooks onQueryStart, onQueryError, onQueryEnd\n    */\n    async query(gaqlQuery, requestOptions = {}) {\n        const { response } = await this.querier(gaqlQuery, requestOptions);\n        return response;\n    }\n    /**\n      @description Stream query using a raw GAQL string. If a generic type is provided, it must be the type of a single row.\n      If a summary row is requested then this will be the last emitted row of the stream.\n      @hooks onStreamStart, onStreamError\n      @example\n      const stream = queryStream<T>(gaqlQuery)\n      for await (const row of stream) { ... }\n    */\n    async *queryStream(gaqlQuery, requestOptions = {}) {\n        const stream = this.streamer(gaqlQuery, requestOptions);\n        for await (const row of stream) {\n            yield row;\n        }\n    }\n    /**\n      @description Single query using ReportOptions.\n      If a summary row is requested then this will be the first row of the results.\n      @hooks onQueryStart, onQueryError, onQueryEnd\n    */\n    async report(options) {\n        const { gaqlQuery, requestOptions } = (0, query_1.buildQuery)(options);\n        const { response } = await this.querier(gaqlQuery, requestOptions, options);\n        return response;\n    }\n    /**\n      @description Get the total row count of a report.\n      @hooks none\n    */\n    async reportCount(options) {\n        // must get at least one row\n        const { gaqlQuery, requestOptions } = (0, query_1.buildQuery)({ ...options, limit: 1 });\n        // We do not allow this field in reportOptions, however it is still a valid request option\n        requestOptions.search_settings = { return_total_results_count: true };\n        const useHooks = false; // to avoid cacheing conflicts\n        const { totalResultsCount } = await this.querier(gaqlQuery, requestOptions, options, useHooks);\n        return totalResultsCount;\n    }\n    /**\n      @description Stream query using ReportOptions. If a generic type is provided, it must be the type of a single row.\n      If a summary row is requested then this will be the last emitted row of the stream.\n      @hooks onStreamStart, onStreamError\n      @example\n      const stream = reportStream<T>(reportOptions)\n      for await (const row of stream) { ... }\n    */\n    async *reportStream(reportOptions) {\n        const { gaqlQuery, requestOptions } = (0, query_1.buildQuery)(reportOptions);\n        const stream = this.streamer(gaqlQuery, requestOptions, reportOptions);\n        for await (const row of stream) {\n            yield row;\n        }\n    }\n    /**\n      @description Retreive the raw stream using ReportOptions.\n      @hooks onStreamStart\n      @example\n      const stream = reportStreamRaw(reportOptions)\n      stream.on('data', (chunk) => { ... }) // a chunk contains up to 10,000 un-parsed rows\n      stream.on('error', (error) => { ... })\n      stream.on('end', () => { ... })\n    */\n    async reportStreamRaw(reportOptions) {\n        const { gaqlQuery, requestOptions } = (0, query_1.buildQuery)(reportOptions);\n        const baseHookArguments = {\n            credentials: this.credentials,\n            query: gaqlQuery,\n            reportOptions,\n        };\n        const queryStart = { cancelled: false };\n        if (this.hooks.onStreamStart) {\n            await this.hooks.onStreamStart({\n                ...baseHookArguments,\n                cancel: () => {\n                    queryStart.cancelled = true;\n                },\n                editOptions: (options) => {\n                    Object.entries(options).forEach(([key, val]) => {\n                        // @ts-ignore\n                        requestOptions[key] = val;\n                    });\n                },\n            });\n            if (queryStart.cancelled) {\n                return;\n            }\n        }\n        const { service, request } = this.buildSearchStreamRequestAndService(gaqlQuery, requestOptions);\n        return service.searchStream(request, {\n            otherArgs: { headers: this.callHeaders },\n        });\n    }\n    async search(gaqlQuery, requestOptions) {\n        const accessToken = await this.getAccessToken();\n        try {\n            const rawResponse = await (0, axios_1.default)(this.prepareGoogleAdsServicePostRequestArgs(\"search\", accessToken, {\n                data: {\n                    query: gaqlQuery,\n                    ...requestOptions,\n                },\n            }));\n            const searchResponse = rawResponse.data;\n            const results = searchResponse.results ?? [];\n            const response = results.map((row) => this.decamelizeKeysIfNeeded(row));\n            const summaryRow = this.decamelizeKeysIfNeeded(searchResponse.summaryRow);\n            const nextPageToken = searchResponse.nextPageToken;\n            const totalResultsCount = searchResponse.totalResultsCount\n                ? +searchResponse.totalResultsCount\n                : undefined;\n            return { response, nextPageToken, totalResultsCount, summaryRow };\n        }\n        catch (e) {\n            if (e.response?.data.error.details[0]) {\n                throw new protos_1.errors.GoogleAdsFailure(this.decamelizeKeysIfNeeded(e.response.data.error.details[0]));\n            }\n            throw e;\n        }\n    }\n    async paginatedSearch(gaqlQuery, requestOptions) {\n        /*\n          When possible, use the searchStream method to avoid the overhead of pagination.\n        */\n        if (requestOptions.page_size === undefined &&\n            requestOptions.search_settings === undefined // If search_settings is set, we can't use searchStream.\n        ) {\n            // If no pagination or summary options are set, we can use the non-paginated search method.\n            const { response } = await this.useStreamToImitateRegularSearch(gaqlQuery, requestOptions);\n            return { response };\n        }\n        const response = [];\n        let nextPageToken = undefined;\n        const initialSearch = await this.search(gaqlQuery, requestOptions);\n        let totalResultsCount = initialSearch.totalResultsCount;\n        // Sometimes (when no results?) the totalResultsCount field is not included in the response.\n        // In this case, we set it to 0.\n        if (requestOptions.search_settings?.return_total_results_count &&\n            initialSearch.totalResultsCount === undefined) {\n            totalResultsCount = 0;\n        }\n        let summaryRow = initialSearch.summaryRow;\n        response.push(...initialSearch.response);\n        nextPageToken = initialSearch.nextPageToken;\n        while (nextPageToken) {\n            const nextSearch = await this.search(gaqlQuery, {\n                ...requestOptions,\n                page_token: nextPageToken,\n            });\n            response.push(...nextSearch.response);\n            nextPageToken = nextSearch.nextPageToken;\n            if (nextSearch.summaryRow) {\n                summaryRow = nextSearch.summaryRow;\n            }\n        }\n        if (summaryRow) {\n            response.unshift(summaryRow);\n        }\n        return { response, totalResultsCount };\n    }\n    // Google's searchStream method is faster than search, but it does not support all features.\n    // When report() is called, we use searchStream if possible, otherwise we use paginatedSearch.\n    // Note that just like `paginatedSearch`, this method accumulates results in memory. Use\n    // `reportStream` for a more memory-efficient alternative (at the cost of more CPU usage).\n    async useStreamToImitateRegularSearch(gaqlQuery, requestOptions) {\n        const accessToken = await this.getAccessToken();\n        try {\n            const args = this.prepareGoogleAdsServicePostRequestArgs(\"searchStream\", accessToken, {\n                responseType: \"stream\",\n                data: {\n                    query: gaqlQuery,\n                    ...requestOptions,\n                },\n            });\n            const response = await (0, axios_1.default)(args);\n            const stream = response.data;\n            const buffers = [];\n            let rowCount = -ROWS_PER_STREAMED_CHUNK;\n            for await (const data of stream) {\n                if (this.clientOptions.max_reporting_rows &&\n                    !this.gaqlQueryStringIncludesLimit(gaqlQuery)) {\n                    // This is a quick-and-dirty way to count rows, but it's good enough for our purposes.\n                    // We want to avoid using a proper JSON streamer here for performance reasons.\n                    if (data.toString(\"utf-8\").includes(`results\":`)) {\n                        rowCount += ROWS_PER_STREAMED_CHUNK;\n                    }\n                    if (rowCount > this.clientOptions.max_reporting_rows) {\n                        throw this.generateTooManyRowsError();\n                    }\n                }\n                buffers.push(data);\n            }\n            const asString = Buffer.concat(buffers).toString(\"utf-8\");\n            const accumulator = [];\n            let foundSummaryRow;\n            for (const { results, summaryRow } of JSON.parse(asString)) {\n                if (summaryRow) {\n                    foundSummaryRow = this.decamelizeKeysIfNeeded(summaryRow);\n                }\n                accumulator.push(...(results ?? []).map((row) => {\n                    return this.decamelizeKeysIfNeeded(row);\n                }));\n                if (foundSummaryRow) {\n                    accumulator.unshift(foundSummaryRow);\n                }\n            }\n            return { response: accumulator };\n        }\n        catch (e) {\n            await this.handleStreamError(e);\n            throw e; // The line above should always throw.\n        }\n    }\n    async querier(gaqlQuery, requestOptions = {}, reportOptions, useHooks = true) {\n        const baseHookArguments = {\n            credentials: this.credentials,\n            query: gaqlQuery,\n            reportOptions,\n        };\n        if (this.hooks.onQueryStart && useHooks) {\n            const queryCancellation = { cancelled: false };\n            await this.hooks.onQueryStart({\n                ...baseHookArguments,\n                cancel: (res) => {\n                    queryCancellation.cancelled = true;\n                    queryCancellation.res = res;\n                },\n                editOptions: (options) => {\n                    Object.entries(options).forEach(([key, val]) => {\n                        // @ts-ignore\n                        requestOptions[key] = val;\n                    });\n                },\n            });\n            if (queryCancellation.cancelled) {\n                return { response: queryCancellation.res };\n            }\n        }\n        try {\n            const { response, totalResultsCount } = await this.paginatedSearch(gaqlQuery, requestOptions);\n            if (this.hooks.onQueryEnd && useHooks) {\n                const queryResolution = { resolved: false };\n                await this.hooks.onQueryEnd({\n                    ...baseHookArguments,\n                    response,\n                    resolve: (res) => {\n                        queryResolution.resolved = true;\n                        queryResolution.res = res;\n                    },\n                });\n                if (queryResolution.resolved) {\n                    return { response: queryResolution.res, totalResultsCount };\n                }\n            }\n            return { response: response, totalResultsCount };\n        }\n        catch (searchError) {\n            const googleAdsError = this.getGoogleAdsError(searchError);\n            if (this.hooks.onQueryError && useHooks) {\n                await this.hooks.onQueryError({\n                    ...baseHookArguments,\n                    error: googleAdsError,\n                });\n            }\n            throw googleAdsError;\n        }\n    }\n    async *streamer(gaqlQuery, requestOptions = {}, reportOptions) {\n        const baseHookArguments = {\n            credentials: this.credentials,\n            query: gaqlQuery,\n            reportOptions,\n        };\n        if (this.hooks.onStreamStart) {\n            const queryStart = { cancelled: false };\n            await this.hooks.onStreamStart({\n                ...baseHookArguments,\n                cancel: () => {\n                    queryStart.cancelled = true;\n                },\n                editOptions: (options) => {\n                    Object.entries(options).forEach(([key, val]) => {\n                        // @ts-expect-error\n                        requestOptions[key] = val;\n                    });\n                },\n            });\n            if (queryStart.cancelled) {\n                return;\n            }\n        }\n        try {\n            const accessToken = await this.getAccessToken();\n            const args = this.prepareGoogleAdsServicePostRequestArgs(\"searchStream\", accessToken, {\n                responseType: \"stream\",\n                data: {\n                    query: gaqlQuery,\n                    ...requestOptions,\n                },\n            });\n            const response = await (0, axios_1.default)(args);\n            const stream = response.data;\n            // The options below help to make the stream less CPU intensive.\n            const parser = new stream_json_1.Parser({\n                streamValues: false,\n                streamKeys: false,\n                packValues: true,\n                packKeys: true,\n            });\n            const pipeline = (0, stream_chain_1.chain)([stream, parser, (0, StreamArray_1.streamArray)()]);\n            let count = 0;\n            for await (const data of pipeline) {\n                const results = data.value.results ??\n                    (data.value.summaryRow ? [data.value.summaryRow] : undefined) ??\n                    [];\n                count += results.length;\n                if (this.clientOptions.max_reporting_rows &&\n                    count > this.clientOptions.max_reporting_rows &&\n                    !this.gaqlQueryStringIncludesLimit(gaqlQuery)) {\n                    throw this.generateTooManyRowsError();\n                }\n                for (const row of results) {\n                    const parsed = this.decamelizeKeysIfNeeded(row);\n                    yield parsed;\n                }\n            }\n            return;\n        }\n        catch (e) {\n            try {\n                await this.handleStreamError(e);\n            }\n            catch (_e) {\n                if (this.hooks.onStreamError) {\n                    await this.hooks.onStreamError({\n                        ...baseHookArguments,\n                        error: _e,\n                    });\n                }\n                throw _e;\n            }\n        }\n    }\n    async handleStreamError(e) {\n        if (!e?.response?.data) {\n            throw e;\n        }\n        // The error is a stream, so some effort is required to parse it.\n        const stream = e.response.data;\n        const pipeline = (0, stream_chain_1.chain)([stream, (0, stream_json_1.parser)(), (0, StreamArray_1.streamArray)()]);\n        const defaultErrorMessage = \"Unknown GoogleAdsFailure\";\n        let googleAdsFailure = new Error(defaultErrorMessage);\n        // Only throw the first error.\n        pipeline.once(\"data\", (data) => {\n            if (data?.value?.error?.details?.[0]) {\n                googleAdsFailure = new protos_1.errors.GoogleAdsFailure(this.decamelizeKeysIfNeeded(data.value.error.details[0]));\n            }\n            else {\n                googleAdsFailure = new Error(data?.value?.error?.message ?? defaultErrorMessage, { cause: data?.value?.error ?? data?.value });\n            }\n        });\n        // Must always reject.\n        await new Promise((_, reject) => {\n            pipeline.on(\"end\", () => reject(googleAdsFailure));\n            pipeline.on(\"error\", (err) => reject(err));\n        });\n    }\n    /**\n     * @description Creates, updates, or removes resources. This method supports atomic transactions\n     * with multiple types of resources. For example, you can atomically create a campaign and a\n     * campaign budget, or perform up to thousands of mutates atomically.\n     * @hooks onMutationStart, onMutationError, onMutationEnd\n     */\n    async mutateResources(mutations, mutateOptions = {}) {\n        const baseHookArguments = {\n            credentials: this.credentials,\n            method: \"GoogleAdsService.mutate\",\n            mutations,\n            isServiceCall: false,\n        };\n        if (this.hooks.onMutationStart) {\n            const mutationCancellation = { cancelled: false };\n            await this.hooks.onMutationStart({\n                ...baseHookArguments,\n                cancel: (res) => {\n                    mutationCancellation.cancelled = true;\n                    mutationCancellation.res = res;\n                },\n                editOptions: (options) => {\n                    Object.entries(options).forEach(([key, val]) => {\n                        // @ts-ignore\n                        mutateOptions[key] = val;\n                    });\n                },\n            });\n            if (mutationCancellation.cancelled) {\n                return mutationCancellation.res;\n            }\n        }\n        const { service, request } = this.buildMutationRequestAndService(mutations, mutateOptions);\n        try {\n            const response = (await service.mutate(request, {\n                otherArgs: { headers: this.callHeaders },\n            }))[0];\n            const parsedResponse = request.partial_failure\n                ? this.decodePartialFailureError(response)\n                : response;\n            if (this.hooks.onMutationEnd) {\n                const mutationResolution = { resolved: false };\n                await this.hooks.onMutationEnd({\n                    ...baseHookArguments,\n                    response: parsedResponse,\n                    resolve: (res) => {\n                        mutationResolution.resolved = true;\n                        mutationResolution.res = res;\n                    },\n                });\n                if (mutationResolution.resolved) {\n                    return mutationResolution.res;\n                }\n            }\n            return parsedResponse;\n        }\n        catch (mutateError) {\n            const googleAdsError = this.getGoogleAdsError(mutateError);\n            if (this.hooks.onMutationError) {\n                await this.hooks.onMutationError({\n                    ...baseHookArguments,\n                    error: googleAdsError,\n                });\n            }\n            throw googleAdsError;\n        }\n    }\n    get googleAdsFields() {\n        return {\n            searchGoogleAdsFields: async (request) => {\n                const service = await this.loadService(\"GoogleAdsFieldServiceClient\");\n                return service.searchGoogleAdsFields(request, {\n                    // @ts-expect-error This method does support call headers\n                    otherArgs: { headers: this.callHeaders },\n                });\n            },\n        };\n    }\n    prepareGoogleAdsServicePostRequestArgs(functionName, accessToken, extra) {\n        return {\n            method: \"POST\",\n            url: `https://googleads.googleapis.com/${version_1.googleAdsVersion}/customers/${this.customerOptions.customer_id}/googleAds:${functionName}`,\n            headers: {\n                Authorization: `Bearer ${accessToken}`,\n                ...this.callHeaders,\n            },\n            ...extra,\n        };\n    }\n    decamelizeKeysIfNeeded(input) {\n        if (this.clientOptions.disable_parsing) {\n            return input;\n        }\n        return (0, parserRest_1.decamelizeKeys)(input);\n    }\n    gaqlQueryStringIncludesLimit(gaqlQuery) {\n        return gaqlQuery.toLowerCase().includes(\"limit \");\n    }\n    generateTooManyRowsError() {\n        return new Error(`Exceeded the maximum number of rows set by \"max_reporting_rows\" (${this.clientOptions.max_reporting_rows}).`);\n    }\n}\nexports.Customer = Customer;\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1311, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DELL/my-site/node_modules/google-ads-api/build/src/client.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Client = void 0;\nconst customer_1 = require(\"./customer\");\nconst service_1 = require(\"./service\");\nclass Client {\n    options;\n    constructor(options) {\n        this.options = options;\n    }\n    Customer(customerOptions, hooks) {\n        const cus = new customer_1.Customer(this.options, customerOptions, hooks);\n        return cus;\n    }\n    async listAccessibleCustomers(refreshToken) {\n        const service = new service_1.Service(this.options, {\n            customer_id: \"\",\n            refresh_token: refreshToken,\n        });\n        // @ts-expect-error Protected usage is fine here\n        const customerService = await service.loadService(\"CustomerServiceClient\");\n        try {\n            // @ts-expect-error Type definition is incorrect, response is an array\n            const [response] = await customerService.listAccessibleCustomers({}, {\n                // @ts-expect-error Field not included in type definitions\n                otherArgs: {\n                    // @ts-expect-error Protected usage is fine here\n                    headers: service.callHeaders,\n                },\n            });\n            return response;\n        }\n        catch (err) {\n            console.log(err);\n            // @ts-expect-error Protected usage is fine here\n            throw service.getGoogleAdsError(err);\n        }\n    }\n}\nexports.Client = Client;\n"],"names":[],"mappings":"AAAA;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,MAAM,GAAG,KAAK;AACtB,MAAM;AACN,MAAM;AACN,MAAM;IACF,QAAQ;IACR,YAAY,OAAO,CAAE;QACjB,IAAI,CAAC,OAAO,GAAG;IACnB;IACA,SAAS,eAAe,EAAE,KAAK,EAAE;QAC7B,MAAM,MAAM,IAAI,WAAW,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,iBAAiB;QACnE,OAAO;IACX;IACA,MAAM,wBAAwB,YAAY,EAAE;QACxC,MAAM,UAAU,IAAI,UAAU,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE;YAChD,aAAa;YACb,eAAe;QACnB;QACA,gDAAgD;QAChD,MAAM,kBAAkB,MAAM,QAAQ,WAAW,CAAC;QAClD,IAAI;YACA,sEAAsE;YACtE,MAAM,CAAC,SAAS,GAAG,MAAM,gBAAgB,uBAAuB,CAAC,CAAC,GAAG;gBACjE,0DAA0D;gBAC1D,WAAW;oBACP,gDAAgD;oBAChD,SAAS,QAAQ,WAAW;gBAChC;YACJ;YACA,OAAO;QACX,EACA,OAAO,KAAK;YACR,QAAQ,GAAG,CAAC;YACZ,gDAAgD;YAChD,MAAM,QAAQ,iBAAiB,CAAC;QACpC;IACJ;AACJ;AACA,QAAQ,MAAM,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1357, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DELL/my-site/node_modules/google-ads-api/build/src/parser.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ParsingError = void 0;\nexports.parse = parse;\nexports.getGAQLFields = getGAQLFields;\nexports.getReportOptionFields = getReportOptionFields;\nexports.parseRows = parseRows;\nconst long_1 = __importDefault(require(\"long\"));\nconst protos_1 = require(\"./protos\");\nconst utils_1 = require(\"./utils\");\nexports.ParsingError = {\n    NO_REPORT_OPTIONS_OR_GAQL_QUERY: \"Must provided reportOptions or gaqlString to parse results.\",\n    NO_FIELDS_IN_GAQL_QUERY: \"GAQL Query must contain at least one attribute, metric or segment.\",\n    NO_FIELDS_IN_REPORT_OPTIONS: \"Report Options must contain at least one attribute, metric or segment.\",\n};\n/**\n  @description Parse the results of a query\n  @example\n  const parsedResults = parse({ results, reportOptions })\n  const parsedResults = parse({ results, gaqlString })\n*/\nfunction parse({ results, reportOptions, gaqlString, }) {\n    if (results.length === 0) {\n        return results;\n    }\n    if (typeof reportOptions === \"undefined\" &&\n        typeof gaqlString === \"undefined\") {\n        throw new Error(exports.ParsingError.NO_REPORT_OPTIONS_OR_GAQL_QUERY);\n    }\n    const queryFields = reportOptions\n        ? getReportOptionFields(reportOptions)\n        : getGAQLFields(gaqlString);\n    // Add in all relevant resource_name fields, which are always returned by API\n    const entities = queryFields.map((field) => field.split(\".\")[0]);\n    const resourceNameFields = protos_1.fields.resourceNames.filter((resourceNameField) => entities.includes(resourceNameField.split(\".\")[0]));\n    const allFields = [...queryFields, ...resourceNameFields];\n    return parseRows(results, allFields);\n}\n// This function assumes that a gaql query is of the format \"select * * * from * ...\".\n// Queries that are not in this format should have thrown an error when called.\nfunction getGAQLFields(gaqlString) {\n    const normalisedQuery = (0, utils_1.normaliseQuery)(gaqlString);\n    const fields = normalisedQuery\n        .toLowerCase()\n        .replace(/(^\\s*select)|( from .*)|(\\s+)/g, \"\")\n        .split(\",\")\n        .filter((field) => field.length > 0);\n    if (!fields.length) {\n        throw new Error(exports.ParsingError.NO_FIELDS_IN_GAQL_QUERY);\n    }\n    return fields;\n}\nfunction getReportOptionFields(reportOptions) {\n    const fields = [\n        ...(reportOptions.attributes || []),\n        ...(reportOptions.metrics || []),\n        ...(reportOptions.segments || []),\n    ];\n    if (!fields.length) {\n        throw new Error(exports.ParsingError.NO_FIELDS_IN_REPORT_OPTIONS);\n    }\n    return fields;\n}\nfunction parseRows(rows, fields) {\n    const fieldsPreSplit = {};\n    // pre-split all the field strings for performance reasons (increases speed by ~5x for large number of rows)\n    for (const field of fields) {\n        fieldsPreSplit[field] = field.split(\".\");\n    }\n    const newRows = [];\n    for (let r = 0; r < rows.length; r++) {\n        const newRow = {};\n        const originalRow = protos_1.services.GoogleAdsRow.fromObject(rows[r]);\n        for (const split in fieldsPreSplit) {\n            // @ts-expect-error These are the best we can do for these types\n            const [parent, ...children] = fieldsPreSplit[split];\n            // Ignore null fields (unspecified resource names)\n            if (!originalRow[parent]) {\n                continue;\n            }\n            newRow[parent] = parseNestedValues(newRow[parent], originalRow[parent], parent, children);\n        }\n        newRows.push(newRow);\n    }\n    return newRows;\n}\nfunction parseNestedValues(row, data, field, paths) {\n    if (!data)\n        return null;\n    const [parentField, ...childFields] = paths;\n    if (!row)\n        row = {};\n    if (childFields.length === 0) {\n        const rawVal = data[parentField];\n        const parsedVal = long_1.default.isLong(rawVal)\n            ? new long_1.default(rawVal.low, rawVal.high, rawVal.unsigned).toNumber()\n            : rawVal;\n        row[parentField] = parsedVal;\n        return row;\n    }\n    row[parentField] = parseNestedValues(row[parentField], data[parentField], parentField, childFields);\n    return row;\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1463, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DELL/my-site/node_modules/google-ads-api/build/src/index.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Customer = exports.ResourceNames = exports.parse = exports.toMicros = exports.fromMicros = exports.protobuf = exports.longrunning = exports.services = exports.resources = exports.errors = exports.fields = exports.enums = exports.common = exports.GoogleAdsApi = void 0;\n// Core library client\nvar client_1 = require(\"./client\");\nObject.defineProperty(exports, \"GoogleAdsApi\", { enumerable: true, get: function () { return client_1.Client; } });\n// Compiled proto types\nvar index_1 = require(\"./protos/index\");\nObject.defineProperty(exports, \"common\", { enumerable: true, get: function () { return index_1.common; } });\nObject.defineProperty(exports, \"enums\", { enumerable: true, get: function () { return index_1.enums; } });\nObject.defineProperty(exports, \"fields\", { enumerable: true, get: function () { return index_1.fields; } });\nObject.defineProperty(exports, \"errors\", { enumerable: true, get: function () { return index_1.errors; } });\nObject.defineProperty(exports, \"resources\", { enumerable: true, get: function () { return index_1.resources; } });\nObject.defineProperty(exports, \"services\", { enumerable: true, get: function () { return index_1.services; } });\nObject.defineProperty(exports, \"longrunning\", { enumerable: true, get: function () { return index_1.longrunning; } });\nObject.defineProperty(exports, \"protobuf\", { enumerable: true, get: function () { return index_1.protobuf; } });\n// Util functions\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"fromMicros\", { enumerable: true, get: function () { return utils_1.fromMicros; } });\nObject.defineProperty(exports, \"toMicros\", { enumerable: true, get: function () { return utils_1.toMicros; } });\nvar parser_1 = require(\"./parser\");\nObject.defineProperty(exports, \"parse\", { enumerable: true, get: function () { return parser_1.parse; } });\nexports.ResourceNames = __importStar(require(\"./protos/autogen/resourceNames\"));\nvar customer_1 = require(\"./customer\");\nObject.defineProperty(exports, \"Customer\", { enumerable: true, get: function () { return customer_1.Customer; } });\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}}]
}