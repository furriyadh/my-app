{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DELL/my-site/src/components/Authentication/DarkMode.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst DarkMode: React.FC = () => {\r\n  // Light/Dark Mode\r\n  const [isDarkMode, setIsDarkMode] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    // Retrieve the user's preference from local storage\r\n    const storedPreference = localStorage.getItem(\"theme\");\r\n    if (storedPreference === \"dark\") {\r\n      setIsDarkMode(true);\r\n    }\r\n  }, []);\r\n\r\n  const handleToggle = () => {\r\n    setIsDarkMode(!isDarkMode);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Update the user's preference in local storage\r\n    localStorage.setItem(\"theme\", isDarkMode ? \"dark\" : \"light\");\r\n\r\n    // Update the class on the <html> element to apply the selected mode\r\n    const htmlElement = document.querySelector(\"html\");\r\n    if (htmlElement) {\r\n      if (isDarkMode) {\r\n        htmlElement.classList.add(\"dark\");\r\n      } else {\r\n        htmlElement.classList.remove(\"dark\");\r\n      }\r\n    }\r\n  }, [isDarkMode]);\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        type=\"button\"\r\n        className=\"light-dark-toggle leading-none inline-block transition-all text-[#fe7a36] absolute top-[20px] md:top-[25px] ltr:right-[20px] rtl:left-[20px] ltr:md:right-[25px] rtl:md:left-[25px]\"\r\n        onClick={handleToggle}\r\n      >\r\n        <i className=\"material-symbols-outlined !text-[20px] md:!text-[22px]\">\r\n          light_mode\r\n        </i>\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DarkMode;\r\n"],"names":[],"mappings":";;;;AAEA;;;AAFA;;AAIA,MAAM,WAAqB;;IACzB,kBAAkB;IAClB,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IAEtD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;8BAAE;YACR,oDAAoD;YACpD,MAAM,mBAAmB,aAAa,OAAO,CAAC;YAC9C,IAAI,qBAAqB,QAAQ;gBAC/B,cAAc;YAChB;QACF;6BAAG,EAAE;IAEL,MAAM,eAAe;QACnB,cAAc,CAAC;IACjB;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;8BAAE;YACR,gDAAgD;YAChD,aAAa,OAAO,CAAC,SAAS,aAAa,SAAS;YAEpD,oEAAoE;YACpE,MAAM,cAAc,SAAS,aAAa,CAAC;YAC3C,IAAI,aAAa;gBACf,IAAI,YAAY;oBACd,YAAY,SAAS,CAAC,GAAG,CAAC;gBAC5B,OAAO;oBACL,YAAY,SAAS,CAAC,MAAM,CAAC;gBAC/B;YACF;QACF;6BAAG;QAAC;KAAW;IAEf,qBACE;kBACE,cAAA,6LAAC;YACC,MAAK;YACL,WAAU;YACV,SAAS;sBAET,cAAA,6LAAC;gBAAE,WAAU;0BAAyD;;;;;;;;;;;;AAM9E;GA5CM;KAAA;uCA8CS","debugId":null}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DELL/my-site/src/utils/supabase/client.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\r\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\r\n\r\nif (!supabaseUrl || !supabaseAnonKey) {\r\n  throw new Error(\r\n    'Missing NEXT_PUBLIC_SUPABASE_URL or NEXT_PUBLIC_SUPABASE_ANON_KEY environment variables.'\r\n  );\r\n}\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\r\n"],"names":[],"mappings":";;;AAEoB;AAFpB;;AAEA,MAAM;AACN,MAAM;AAEN,uCAAsC;;AAItC;AAEO,MAAM,WAAW,CAAA,GAAA,0LAAA,CAAA,eAAY,AAAD,EAAE,aAAa","debugId":null}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/DELL/my-site/src/components/Authentication/ForgotPasswordForm.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport Image from \"next/image\";\r\nimport Link from \"next/link\";\r\nimport { supabase } from \"@/utils/supabase/client\"; // Import supabase client\r\n\r\nconst ForgotPasswordForm: React.FC = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handleResetPassword = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setMessage(\"\");\r\n    setIsLoading(true);\r\n\r\n    const { error } = await supabase.auth.resetPasswordForEmail(email, {\r\n      redirectTo: `${window.location.origin}/authentication/update-password`, // Redirect to a page where user can set new password\r\n    });\r\n\r\n    if (error) {\r\n      setMessage(`Error: ${error.message}`);\r\n    } else {\r\n      setMessage(\"Password reset email sent! Please check your inbox.\");\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"auth-main-content bg-white dark:bg-[#0a0e19] py-[60px] md:py-[80px] lg:py-[135px]\">\r\n        <div className=\"mx-auto px-[12.5px] md:max-w-[720px] lg:max-w-[960px] xl:max-w-[1255px]\">\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-[25px] items-center\">\r\n            <div className=\"xl:ltr:-mr-[25px] xl:rtl:-ml-[25px] 2xl:ltr:-mr-[45px] 2xl:rtl:-ml-[45px] rounded-[25px] order-2 lg:order-1\">\r\n              <Image\r\n                src=\"/images/forgot-password.jpg\"\r\n                alt=\"forgot-password-image\"\r\n                className=\"rounded-[25px]\"\r\n                width={646}\r\n                height={804}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"xl:ltr:pl-[90px] xl:rtl:pr-[90px] 2xl:ltr:pl-[120px] 2xl:rtl:pr-[120px] order-1 lg:order-2\">\r\n              <Image\r\n                src=\"/images/logo-big.svg\"\r\n                alt=\"logo\"\r\n                className=\"inline-block dark:hidden\"\r\n                width={142}\r\n                height={38}\r\n              />\r\n              <Image\r\n                src=\"/images/white-logo-big.svg\"\r\n                alt=\"logo\"\r\n                className=\"hidden dark:inline-block\"\r\n                width={142}\r\n                height={38}\r\n              />\r\n\r\n              <div className=\"my-[17px] md:my-[25px]\">\r\n                <h1 className=\"!font-semibold !text-[22px] md:!text-xl lg:!text-2xl !mb-[5px] md:!mb-[12px]\">\r\n                  Forgot your password?\r\n                </h1>\r\n                <p className=\"font-medium leading-[1.5] lg:text-md text-[#445164] dark:text-gray-400\">\r\n                  Enter the email address you used when you joined and weâ€™ll\r\n                  send you instructions to reset your password.\r\n                </p>\r\n              </div>\r\n\r\n              <form onSubmit={handleResetPassword}> {/* Add form and onSubmit */}\r\n                <div className=\"mb-[15px] relative\">\r\n                  <label className=\"mb-[10px] md:mb-[12px] text-black dark:text-white font-medium block\">\r\n                    Email Address\r\n                  </label>\r\n                  <input\r\n                    type=\"email\" // Changed type to email\r\n                    className=\"h-[55px] rounded-md text-black dark:text-white border border-gray-200 dark:border-[#172036] bg-white dark:bg-[#0c1427] px-[17px] block w-full outline-0 transition-all placeholder:text-gray-500 dark:placeholder:text-gray-400 focus:border-primary-500\"\r\n                    placeholder=\"example@trezo.com\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    required\r\n                  />\r\n                </div>\r\n\r\n                {message && <p className=\"text-center mt-4 text-sm text-gray-600\">{message}</p>} {/* Display messages */}\r\n\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"md:text-md block w-full text-center transition-all rounded-md font-medium mt-[20px] md:mt-[25px] py-[12px] px-[25px] text-white bg-primary-500 hover:bg-primary-400\"\r\n                  disabled={isLoading} // Disable button when loading\r\n                >\r\n                  <span className=\"flex items-center justify-center gap-[5px]\">\r\n                    <i className=\"material-symbols-outlined\">autorenew</i>\r\n                    {isLoading ? \"Sending...\" : \"Reset Password\"}\r\n                  </span>\r\n                </button>\r\n              </form>\r\n\r\n              <p className=\"mt-[15px] md:mt-[20px]\">\r\n                Back to{\" \"}\r\n                <Link\r\n                  href=\"/authentication/sign-in\"\r\n                  className=\"text-primary-500 transition-all font-semibold hover:underline\"\r\n                >\r\n                  Sign In\r\n                </Link>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ForgotPasswordForm;\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA,yOAAoD,yBAAyB;;;AAL7E;;;;;AAOA,MAAM,qBAA+B;;IACnC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,MAAM,sBAAsB,OAAO;QACjC,EAAE,cAAc;QAChB,WAAW;QACX,aAAa;QAEb,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,qIAAA,CAAA,WAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC,OAAO;YACjE,YAAY,GAAG,OAAO,QAAQ,CAAC,MAAM,CAAC,+BAA+B,CAAC;QACxE;QAEA,IAAI,OAAO;YACT,WAAW,CAAC,OAAO,EAAE,MAAM,OAAO,EAAE;QACtC,OAAO;YACL,WAAW;QACb;QACA,aAAa;IACf;IAEA,qBACE;kBACE,cAAA,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC,gIAAA,CAAA,UAAK;gCACJ,KAAI;gCACJ,KAAI;gCACJ,WAAU;gCACV,OAAO;gCACP,QAAQ;;;;;;;;;;;sCAIZ,6LAAC;4BAAI,WAAU;;8CACb,6LAAC,gIAAA,CAAA,UAAK;oCACJ,KAAI;oCACJ,KAAI;oCACJ,WAAU;oCACV,OAAO;oCACP,QAAQ;;;;;;8CAEV,6LAAC,gIAAA,CAAA,UAAK;oCACJ,KAAI;oCACJ,KAAI;oCACJ,WAAU;oCACV,OAAO;oCACP,QAAQ;;;;;;8CAGV,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAG,WAAU;sDAA+E;;;;;;sDAG7F,6LAAC;4CAAE,WAAU;sDAAyE;;;;;;;;;;;;8CAMxF,6LAAC;oCAAK,UAAU;;wCAAqB;sDACnC,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAM,WAAU;8DAAsE;;;;;;8DAGvF,6LAAC;oDACC,MAAK,QAAQ,wBAAwB;;oDACrC,WAAU;oDACV,aAAY;oDACZ,OAAO;oDACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;oDACxC,QAAQ;;;;;;;;;;;;wCAIX,yBAAW,6LAAC;4CAAE,WAAU;sDAA0C;;;;;;wCAAa;sDAEhF,6LAAC;4CACC,MAAK;4CACL,WAAU;4CACV,UAAU;sDAEV,cAAA,6LAAC;gDAAK,WAAU;;kEACd,6LAAC;wDAAE,WAAU;kEAA4B;;;;;;oDACxC,YAAY,eAAe;;;;;;;;;;;;;;;;;;8CAKlC,6LAAC;oCAAE,WAAU;;wCAAyB;wCAC5B;sDACR,6LAAC,+JAAA,CAAA,UAAI;4CACH,MAAK;4CACL,WAAU;sDACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUjB;GA3GM;KAAA;uCA6GS","debugId":null}}]
}